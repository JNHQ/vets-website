<testsuites name="jest tests" tests="3097" failures="7" time="160.17">
  <testsuite name="Redirect replaced pages" errors="0" failures="1" skipped="0" timestamp="2018-12-06T00:48:53" time="0.658" tests="2">
    <testcase classname="Redirect replaced pages should redirect when page matches" name="Redirect replaced pages should redirect when page matches" time="0.022">
      <failure>AssertionError: expected false to be true
    at Object.&lt;anonymous&gt; (/Users/clairehsu/Projects/vets-website/src/applications/proxy-rewrite/tests/redirects/index.unit.spec.js:16:5)
    at Object.asyncJestTest (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:188:7)</failure>
    </testcase>
    <testcase classname="Redirect replaced pages should not redirect when there are no matches" name="Redirect replaced pages should not redirect when there are no matches" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Analytics Middleware" errors="0" failures="1" skipped="0" timestamp="2018-12-06T00:48:54" time="0.127" tests="3">
    <testcase classname="Analytics Middleware should capture the proper events" name="Analytics Middleware should capture the proper events" time="0.006">
    </testcase>
    <testcase classname="Analytics Middleware should handle function events" name="Analytics Middleware should handle function events" time="0.007">
      <failure>AssertionError: expected [ Array(3) ] to deeply equal [ Array(2) ]
    at Object.eql (/Users/clairehsu/Projects/vets-website/src/platform/startup/tests/analytics-middleware.unit.spec.js:57:40)
    at Object.asyncJestTest (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:188:7)</failure>
    </testcase>
    <testcase classname="Analytics Middleware should call the next middleware" name="Analytics Middleware should call the next middleware" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SearchHelpSignIn&gt;" errors="0" failures="1" skipped="0" timestamp="2018-12-06T00:48:53" time="1.503" tests="4">
    <testcase classname="&lt;SearchHelpSignIn&gt; should present login links when not logged in" name="&lt;SearchHelpSignIn&gt; should present login links when not logged in" time="0.786">
    </testcase>
    <testcase classname="&lt;SearchHelpSignIn&gt; should present login links when not logged in on VA subdomain" name="&lt;SearchHelpSignIn&gt; should present login links when not logged in on VA subdomain" time="0.03">
      <failure>AssertionError: expected undefined to equal &apos;https://www.va.gov/my-va&apos;
    at Object.equal (/Users/clairehsu/Projects/vets-website/src/platform/site-wide/user-nav/tests/components/SearchHelpSignIn.unit.spec.jsx:51:10)
    at Object.asyncJestTest (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:188:7)</failure>
    </testcase>
    <testcase classname="&lt;SearchHelpSignIn&gt; should render &lt;SignInProfileMenu/&gt; when logged in" name="&lt;SearchHelpSignIn&gt; should render &lt;SignInProfileMenu/&gt; when logged in" time="0.028">
    </testcase>
    <testcase classname="&lt;SearchHelpSignIn&gt; should display email for an LOA1 user without a firstname" name="&lt;SearchHelpSignIn&gt; should display email for an LOA1 user without a firstname" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;RoutedSavableApp&gt;" errors="0" failures="4" skipped="0" timestamp="2018-12-06T00:48:53" time="1.757" tests="9">
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should render children" name="Schemaform &lt;RoutedSavableApp&gt; should render children" time="1.056">
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should render the loading screen" name="Schemaform &lt;RoutedSavableApp&gt; should render the loading screen" time="0.007">
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should route when prefill unfilled" name="Schemaform &lt;RoutedSavableApp&gt; should route when prefill unfilled" time="0.004">
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should route and reset fetch status on success" name="Schemaform &lt;RoutedSavableApp&gt; should route and reset fetch status on success" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should route to error when failed" name="Schemaform &lt;RoutedSavableApp&gt; should route to error when failed" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should route to the first page if started in the middle and not logged in" name="Schemaform &lt;RoutedSavableApp&gt; should route to the first page if started in the middle and not logged in" time="0.024">
      <failure>AssertionError: expected false to be true
    at Object.&lt;anonymous&gt; (/Users/clairehsu/Projects/vets-website/src/platform/forms/tests/save-in-progress/RoutedSavableApp.unit.spec.jsx:249:5)
    at Object.asyncJestTest (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:188:7)</failure>
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should load a saved form when starting in the middle of a form and logged in" name="Schemaform &lt;RoutedSavableApp&gt; should load a saved form when starting in the middle of a form and logged in" time="0.002">
      <failure>AssertionError: expected false to be true
    at Object.&lt;anonymous&gt; (/Users/clairehsu/Projects/vets-website/src/platform/forms/tests/save-in-progress/RoutedSavableApp.unit.spec.jsx:302:5)
    at Object.asyncJestTest (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:188:7)</failure>
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should load a pre-filled form when starting in the middle of a form and logged in" name="Schemaform &lt;RoutedSavableApp&gt; should load a pre-filled form when starting in the middle of a form and logged in" time="0.002">
      <failure>AssertionError: expected false to be true
    at Object.&lt;anonymous&gt; (/Users/clairehsu/Projects/vets-website/src/platform/forms/tests/save-in-progress/RoutedSavableApp.unit.spec.jsx:361:5)
    at Object.asyncJestTest (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:188:7)</failure>
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableApp&gt; should skip pre-fill when skipPrefill is true" name="Schemaform &lt;RoutedSavableApp&gt; should skip pre-fill when skipPrefill is true" time="0.001">
      <failure>AssertionError: expected false to be true
    at Object.&lt;anonymous&gt; (/Users/clairehsu/Projects/vets-website/src/platform/forms/tests/save-in-progress/RoutedSavableApp.unit.spec.jsx:423:5)
    at Object.asyncJestTest (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)
    at resolve (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:56:12)
    at new Promise (&lt;anonymous&gt;)
    at mapper (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:43:19)
    at promise.then (/Users/clairehsu/Projects/vets-website/node_modules/jest-jasmine2/build/queue_runner.js:87:41)
    at &lt;anonymous&gt;
    at process._tickCallback (internal/process/next_tick.js:188:7)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ contact information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:48:55" time="2.587" tests="14">
    <testcase classname="Disability benefits 526EZ contact information renders contact information form" name="Disability benefits 526EZ contact information renders contact information form" time="0.384">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information shows state and zip when country is USA" name="Disability benefits 526EZ contact information shows state and zip when country is USA" time="0.118">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information hides state and zip when country is not USA" name="Disability benefits 526EZ contact information hides state and zip when country is not USA" time="0.088">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information restricts state options to military state codes when city is a military city code" name="Disability benefits 526EZ contact information restricts state options to military state codes when city is a military city code" time="0.084">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information does not restrict state options  when city is not a military city code" name="Disability benefits 526EZ contact information does not restrict state options  when city is not a military city code" time="0.095">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information validates that state is military type if city is military type" name="Disability benefits 526EZ contact information validates that state is military type if city is military type" time="0.137">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information validates that city is military type if state is military type" name="Disability benefits 526EZ contact information validates that city is military type if state is military type" time="0.116">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information expands forwarding address fields when forwarding address checked" name="Disability benefits 526EZ contact information expands forwarding address fields when forwarding address checked" time="0.282">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information validates that forwarding state is military type if forwarding city is military type" name="Disability benefits 526EZ contact information validates that forwarding state is military type if forwarding city is military type" time="0.146">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information validates that forwarding city is military type if forwarding state is military type" name="Disability benefits 526EZ contact information validates that forwarding city is military type if forwarding state is military type" time="0.118">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information validates that effective date is in the future" name="Disability benefits 526EZ contact information validates that effective date is in the future" time="0.125">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information validates that effective end date is after start date" name="Disability benefits 526EZ contact information validates that effective end date is after start date" time="0.119">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information does not submit without required info" name="Disability benefits 526EZ contact information does not submit without required info" time="0.138">
    </testcase>
    <testcase classname="Disability benefits 526EZ contact information does submit with required info" name="Disability benefits 526EZ contact information does submit with required info" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Edu contactInformationPage" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:48:55" time="3.201" tests="25">
    <testcase classname="Edu contactInformationPage 5495 should render" name="Edu contactInformationPage 5495 should render" time="0.21">
    </testcase>
    <testcase classname="Edu contactInformationPage 5495 should render validation errors for required fields" name="Edu contactInformationPage 5495 should render validation errors for required fields" time="0.133">
    </testcase>
    <testcase classname="Edu contactInformationPage 5495 should conditionally require phone number" name="Edu contactInformationPage 5495 should conditionally require phone number" time="0.141">
    </testcase>
    <testcase classname="Edu contactInformationPage 5495 should show error if emails do not match" name="Edu contactInformationPage 5495 should show error if emails do not match" time="0.163">
    </testcase>
    <testcase classname="Edu contactInformationPage 5495 review page should not render confirm email" name="Edu contactInformationPage 5495 review page should not render confirm email" time="0.02">
    </testcase>
    <testcase classname="Edu contactInformationPage 5490 should render" name="Edu contactInformationPage 5490 should render" time="0.095">
    </testcase>
    <testcase classname="Edu contactInformationPage 5490 should render validation errors for required fields" name="Edu contactInformationPage 5490 should render validation errors for required fields" time="0.11">
    </testcase>
    <testcase classname="Edu contactInformationPage 5490 should conditionally require phone number" name="Edu contactInformationPage 5490 should conditionally require phone number" time="0.136">
    </testcase>
    <testcase classname="Edu contactInformationPage 5490 should show error if emails do not match" name="Edu contactInformationPage 5490 should show error if emails do not match" time="0.158">
    </testcase>
    <testcase classname="Edu contactInformationPage 5490 review page should not render confirm email" name="Edu contactInformationPage 5490 review page should not render confirm email" time="0.029">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990e should render" name="Edu contactInformationPage 1990e should render" time="0.169">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990e should render validation errors for required fields" name="Edu contactInformationPage 1990e should render validation errors for required fields" time="0.096">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990e should conditionally require phone number" name="Edu contactInformationPage 1990e should conditionally require phone number" time="0.105">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990e should show error if emails do not match" name="Edu contactInformationPage 1990e should show error if emails do not match" time="0.111">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990e review page should not render confirm email" name="Edu contactInformationPage 1990e review page should not render confirm email" time="0.013">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990n should render" name="Edu contactInformationPage 1990n should render" time="0.064">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990n should render validation errors for required fields" name="Edu contactInformationPage 1990n should render validation errors for required fields" time="0.091">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990n should conditionally require phone number" name="Edu contactInformationPage 1990n should conditionally require phone number" time="0.085">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990n should show error if emails do not match" name="Edu contactInformationPage 1990n should show error if emails do not match" time="0.108">
    </testcase>
    <testcase classname="Edu contactInformationPage 1990n review page should not render confirm email" name="Edu contactInformationPage 1990n review page should not render confirm email" time="0.012">
    </testcase>
    <testcase classname="Edu contactInformationPage 1995 should render" name="Edu contactInformationPage 1995 should render" time="0.048">
    </testcase>
    <testcase classname="Edu contactInformationPage 1995 should render validation errors for required fields" name="Edu contactInformationPage 1995 should render validation errors for required fields" time="0.079">
    </testcase>
    <testcase classname="Edu contactInformationPage 1995 should conditionally require phone number" name="Edu contactInformationPage 1995 should conditionally require phone number" time="0.084">
    </testcase>
    <testcase classname="Edu contactInformationPage 1995 should show error if emails do not match" name="Edu contactInformationPage 1995 should show error if emails do not match" time="0.088">
    </testcase>
    <testcase classname="Edu contactInformationPage 1995 review page should not render confirm email" name="Edu contactInformationPage 1995 review page should not render confirm email" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Vet360TransactionPending/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:48:55" time="4.747" tests="1">
    <testcase classname="&lt;Vet360TransactionPending/&gt; renders" name="&lt;Vet360TransactionPending/&gt; renders" time="4.625">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ VA facility" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:48:58" time="2.58" tests="7">
    <testcase classname="Disability benefits 526EZ VA facility renders VA facility form" name="Disability benefits 526EZ VA facility renders VA facility form" time="0.272">
    </testcase>
    <testcase classname="Disability benefits 526EZ VA facility should add a VA facility" name="Disability benefits 526EZ VA facility should add a VA facility" time="0.992">
    </testcase>
    <testcase classname="Disability benefits 526EZ VA facility should validate the treatmentCenterName" name="Disability benefits 526EZ VA facility should validate the treatmentCenterName" time="0.221">
    </testcase>
    <testcase classname="Disability benefits 526EZ VA facility validates that state is military type if city is military type" name="Disability benefits 526EZ VA facility validates that state is military type if city is military type" time="0.179">
    </testcase>
    <testcase classname="Disability benefits 526EZ VA facility validates that city is military type if state is military type" name="Disability benefits 526EZ VA facility validates that city is military type if state is military type" time="0.157">
    </testcase>
    <testcase classname="Disability benefits 526EZ VA facility expands state when country is USA" name="Disability benefits 526EZ VA facility expands state when country is USA" time="0.194">
    </testcase>
    <testcase classname="Disability benefits 526EZ VA facility does not submit (and renders error messages) when no fields touched" name="Disability benefits 526EZ VA facility does not submit (and renders error messages) when no fields touched" time="0.155">
    </testcase>
  </testsuite>
  <testsuite name="Pensions financial disclosure" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:48:58" time="3.073" tests="42">
    <testcase classname="Pensions financial disclosure Monthly income should render" name="Pensions financial disclosure Monthly income should render" time="0.04">
    </testcase>
    <testcase classname="Pensions financial disclosure Monthly income should render title on review page" name="Pensions financial disclosure Monthly income should render title on review page" time="0.015">
    </testcase>
    <testcase classname="Pensions financial disclosure Monthly income should submit empty form" name="Pensions financial disclosure Monthly income should submit empty form" time="0.041">
    </testcase>
    <testcase classname="Pensions financial disclosure Monthly income should add another source" name="Pensions financial disclosure Monthly income should add another source" time="0.145">
    </testcase>
    <testcase classname="Pensions financial disclosure Monthly income should add and remove another source" name="Pensions financial disclosure Monthly income should add and remove another source" time="0.088">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse monthly income should render" name="Pensions financial disclosure Spouse monthly income should render" time="0.028">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse monthly income should submit empty form" name="Pensions financial disclosure Spouse monthly income should submit empty form" time="0.037">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse monthly income should add another source" name="Pensions financial disclosure Spouse monthly income should add another source" time="0.147">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse monthly income should add and remove another source" name="Pensions financial disclosure Spouse monthly income should add and remove another source" time="0.122">
    </testcase>
    <testcase classname="Pensions financial disclosure Net worth should render" name="Pensions financial disclosure Net worth should render" time="0.023">
    </testcase>
    <testcase classname="Pensions financial disclosure Net worth should render title on review page" name="Pensions financial disclosure Net worth should render title on review page" time="0.011">
    </testcase>
    <testcase classname="Pensions financial disclosure Net worth should submit empty form" name="Pensions financial disclosure Net worth should submit empty form" time="0.035">
    </testcase>
    <testcase classname="Pensions financial disclosure Net worth should add another source" name="Pensions financial disclosure Net worth should add another source" time="0.148">
    </testcase>
    <testcase classname="Pensions financial disclosure Net worth should add and remove another source" name="Pensions financial disclosure Net worth should add and remove another source" time="0.15">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse net worth should render" name="Pensions financial disclosure Spouse net worth should render" time="0.075">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse net worth should submit empty form" name="Pensions financial disclosure Spouse net worth should submit empty form" time="0.039">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse net worth should add another source" name="Pensions financial disclosure Spouse net worth should add another source" time="0.221">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse net worth should add and remove another source" name="Pensions financial disclosure Spouse net worth should add and remove another source" time="0.086">
    </testcase>
    <testcase classname="Pensions financial disclosure Expected income should render" name="Pensions financial disclosure Expected income should render" time="0.012">
    </testcase>
    <testcase classname="Pensions financial disclosure Expected income should render title on review page" name="Pensions financial disclosure Expected income should render title on review page" time="0.01">
    </testcase>
    <testcase classname="Pensions financial disclosure Expected income should submit empty form" name="Pensions financial disclosure Expected income should submit empty form" time="0.021">
    </testcase>
    <testcase classname="Pensions financial disclosure Expected income should add another source" name="Pensions financial disclosure Expected income should add another source" time="0.101">
    </testcase>
    <testcase classname="Pensions financial disclosure Expected income should add and remove another source" name="Pensions financial disclosure Expected income should add and remove another source" time="0.086">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse expected income should render" name="Pensions financial disclosure Spouse expected income should render" time="0.012">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse expected income should submit empty form" name="Pensions financial disclosure Spouse expected income should submit empty form" time="0.016">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse expected income should add another source" name="Pensions financial disclosure Spouse expected income should add another source" time="0.087">
    </testcase>
    <testcase classname="Pensions financial disclosure Spouse expected income should add and remove another source" name="Pensions financial disclosure Spouse expected income should add and remove another source" time="0.111">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent expected income should render" name="Pensions financial disclosure Dependent expected income should render" time="0.013">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent expected income should render title on review page" name="Pensions financial disclosure Dependent expected income should render title on review page" time="0.018">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent expected income should submit empty form" name="Pensions financial disclosure Dependent expected income should submit empty form" time="0.018">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent expected income should add another source" name="Pensions financial disclosure Dependent expected income should add another source" time="0.098">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent expected income should add and remove another source" name="Pensions financial disclosure Dependent expected income should add and remove another source" time="0.081">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent monthly income should render" name="Pensions financial disclosure Dependent monthly income should render" time="0.041">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent monthly income should render title on review page" name="Pensions financial disclosure Dependent monthly income should render title on review page" time="0.016">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent monthly income should submit empty form" name="Pensions financial disclosure Dependent monthly income should submit empty form" time="0.033">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent monthly income should add another source" name="Pensions financial disclosure Dependent monthly income should add another source" time="0.13">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent monthly income should add and remove another source" name="Pensions financial disclosure Dependent monthly income should add and remove another source" time="0.086">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent net worth should render" name="Pensions financial disclosure Dependent net worth should render" time="0.019">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent net worth should render title on review page" name="Pensions financial disclosure Dependent net worth should render title on review page" time="0.012">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent net worth should submit empty form" name="Pensions financial disclosure Dependent net worth should submit empty form" time="0.029">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent net worth should add another source" name="Pensions financial disclosure Dependent net worth should add another source" time="0.112">
    </testcase>
    <testcase classname="Pensions financial disclosure Dependent net worth should add and remove another source" name="Pensions financial disclosure Dependent net worth should add and remove another source" time="0.086">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ primary address" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:00" time="2.98" tests="12">
    <testcase classname="Disability benefits 526EZ primary address renders primary address form" name="Disability benefits 526EZ primary address renders primary address form" time="0.516">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address shows state and zip when country is USA" name="Disability benefits 526EZ primary address shows state and zip when country is USA" time="0.171">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address hides state and zip when country is not USA" name="Disability benefits 526EZ primary address hides state and zip when country is not USA" time="0.114">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address restricts state options to military state codes when city is a military city code" name="Disability benefits 526EZ primary address restricts state options to military state codes when city is a military city code" time="0.124">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address does not restrict state options  when city is not a military city code" name="Disability benefits 526EZ primary address does not restrict state options  when city is not a military city code" time="0.136">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address validates that state is military type if city is military type" name="Disability benefits 526EZ primary address validates that state is military type if city is military type" time="0.149">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address validates that city is military type if state is military type" name="Disability benefits 526EZ primary address validates that city is military type if state is military type" time="0.112">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address expands forwarding address fields when forwarding address checked" name="Disability benefits 526EZ primary address expands forwarding address fields when forwarding address checked" time="0.148">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address validates that forwarding state is military type if forwarding city is military type" name="Disability benefits 526EZ primary address validates that forwarding state is military type if forwarding city is military type" time="0.13">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address validates that forwarding city is military type if forwarding state is military type" name="Disability benefits 526EZ primary address validates that forwarding city is military type if forwarding state is military type" time="0.126">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address does not submit without required info" name="Disability benefits 526EZ primary address does not submit without required info" time="0.179">
    </testcase>
    <testcase classname="Disability benefits 526EZ primary address does submit with required info" name="Disability benefits 526EZ primary address does submit with required info" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="686 spouse marriage history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:02" time="1.069" tests="4">
    <testcase classname="686 spouse marriage history should render" name="686 spouse marriage history should render" time="0.201">
    </testcase>
    <testcase classname="686 spouse marriage history should not submit empty form" name="686 spouse marriage history should not submit empty form" time="0.162">
    </testcase>
    <testcase classname="686 spouse marriage history should submit with valid data and add another" name="686 spouse marriage history should submit with valid data and add another" time="0.377">
    </testcase>
    <testcase classname="686 spouse marriage history depends should return true if married and spouse was married before" name="686 spouse marriage history depends should return true if married and spouse was married before" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="static page widget" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:02" time="1.975" tests="5">
    <testcase classname="static page widget should display a spinner" name="static page widget should display a spinner" time="0.021">
    </testcase>
    <testcase classname="static page widget should replace loading message with slow loading message" name="static page widget should replace loading message with slow loading message" time="0.603">
    </testcase>
    <testcase classname="static page widget should show error message after timing out" name="static page widget should show error message after timing out" time="0.602">
    </testcase>
    <testcase classname="static page widget should not show error message if content replaced by React" name="static page widget should not show error message if content replaced by React" time="0.603">
    </testcase>
    <testcase classname="static page widget should skip mounting if hidden in prod" name="static page widget should skip mounting if hidden in prod" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmationPoll" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:03" time="0.825" tests="3">
    <testcase classname="ConfirmationPoll should make an api call after mounting" name="ConfirmationPoll should make an api call after mounting" time="0.176">
    </testcase>
    <testcase classname="ConfirmationPoll should continue to make api calls until the response is not pending" name="ConfirmationPoll should continue to make api calls until the response is not pending" time="0.063">
    </testcase>
    <testcase classname="ConfirmationPoll should render the confirmation page" name="ConfirmationPoll should render the confirmation page" time="0.505">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 4142 provider medical records facility information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:03" time="1.153" tests="3">
    <testcase classname="Disability benefits 4142 provider medical records facility information should render 4142 form" name="Disability benefits 4142 provider medical records facility information should render 4142 form" time="0.182">
    </testcase>
    <testcase classname="Disability benefits 4142 provider medical records facility information should add a provider facility" name="Disability benefits 4142 provider medical records facility information should add a provider facility" time="0.48">
    </testcase>
    <testcase classname="Disability benefits 4142 provider medical records facility information does not submit (and renders error messages) when no fields touched" name="Disability benefits 4142 provider medical records facility information does not submit (and renders error messages) when no fields touched" time="0.208">
    </testcase>
  </testsuite>
  <testsuite name="VA Medical Records" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:04" time="1.928" tests="5">
    <testcase classname="VA Medical Records should render " name="VA Medical Records should render " time="0.285">
    </testcase>
    <testcase classname="VA Medical Records should not submit without all required info" name="VA Medical Records should not submit without all required info" time="0.306">
    </testcase>
    <testcase classname="VA Medical Records should submit with all required info" name="VA Medical Records should submit with all required info" time="0.159">
    </testcase>
    <testcase classname="VA Medical Records should require military city when military state selected" name="VA Medical Records should require military city when military state selected" time="0.243">
    </testcase>
    <testcase classname="VA Medical Records should require military state when military city entered" name="VA Medical Records should require military state when military city entered" time="0.217">
    </testcase>
  </testsuite>
  <testsuite name="686 marriage history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:04" time="2.063" tests="9">
    <testcase classname="686 marriage history should render" name="686 marriage history should render" time="0.228">
    </testcase>
    <testcase classname="686 marriage history hideIf current marriage hides if married and last" name="686 marriage history hideIf current marriage hides if married and last" time="0">
    </testcase>
    <testcase classname="686 marriage history hideIf current marriage does not hide if married and not last" name="686 marriage history hideIf current marriage does not hide if married and not last" time="0">
    </testcase>
    <testcase classname="686 marriage history hideIf current marriage does not hide if not married" name="686 marriage history hideIf current marriage does not hide if not married" time="0.001">
    </testcase>
    <testcase classname="686 marriage history page title uses word for index" name="686 marriage history page title uses word for index" time="0">
    </testcase>
    <testcase classname="686 marriage history page title uses number when at index ten or greater" name="686 marriage history page title uses number when at index ten or greater" time="0.001">
    </testcase>
    <testcase classname="686 marriage history should not submit empty form" name="686 marriage history should not submit empty form" time="0.246">
    </testcase>
    <testcase classname="686 marriage history should render Former spouse label for previous marriages" name="686 marriage history should render Former spouse label for previous marriages" time="0.351">
    </testcase>
    <testcase classname="686 marriage history should submit with valid data" name="686 marriage history should submit with valid data" time="0.807">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need service periods" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:05" time="2.33" tests="8">
    <testcase classname="Pre-need service periods sponsor should render" name="Pre-need service periods sponsor should render" time="0.217">
    </testcase>
    <testcase classname="Pre-need service periods sponsor should not submit empty form" name="Pre-need service periods sponsor should not submit empty form" time="0.222">
    </testcase>
    <testcase classname="Pre-need service periods sponsor should add another service period" name="Pre-need service periods sponsor should add another service period" time="0.196">
    </testcase>
    <testcase classname="Pre-need service periods sponsor should submit with valid data" name="Pre-need service periods sponsor should submit with valid data" time="0.439">
    </testcase>
    <testcase classname="Pre-need service periods applicant should render" name="Pre-need service periods applicant should render" time="0.132">
    </testcase>
    <testcase classname="Pre-need service periods applicant should not submit empty form" name="Pre-need service periods applicant should not submit empty form" time="0.293">
    </testcase>
    <testcase classname="Pre-need service periods applicant should add another service period" name="Pre-need service periods applicant should add another service period" time="0.141">
    </testcase>
    <testcase classname="Pre-need service periods applicant should submit with valid data" name="Pre-need service periods applicant should submit with valid data" time="0.251">
    </testcase>
  </testsuite>
  <testsuite name="Pensions" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:06" time="1.621" tests="17">
    <testcase classname="Pensions Other expenses should render" name="Pensions Other expenses should render" time="0.028">
    </testcase>
    <testcase classname="Pensions Other expenses should reveal expenses fields" name="Pensions Other expenses should reveal expenses fields" time="0.078">
    </testcase>
    <testcase classname="Pensions Other expenses should render title on review page" name="Pensions Other expenses should render title on review page" time="0.009">
    </testcase>
    <testcase classname="Pensions Other expenses should not submit empty form" name="Pensions Other expenses should not submit empty form" time="0.026">
    </testcase>
    <testcase classname="Pensions Other expenses should add another expense" name="Pensions Other expenses should add another expense" time="0.177">
    </testcase>
    <testcase classname="Pensions Other expenses should submit with valid data" name="Pensions Other expenses should submit with valid data" time="0.027">
    </testcase>
    <testcase classname="Pensions Spouse other expenses should render" name="Pensions Spouse other expenses should render" time="0.012">
    </testcase>
    <testcase classname="Pensions Spouse other expenses should reveal expenses fields" name="Pensions Spouse other expenses should reveal expenses fields" time="0.071">
    </testcase>
    <testcase classname="Pensions Spouse other expenses should not submit empty form" name="Pensions Spouse other expenses should not submit empty form" time="0.018">
    </testcase>
    <testcase classname="Pensions Spouse other expenses should add another expense" name="Pensions Spouse other expenses should add another expense" time="0.151">
    </testcase>
    <testcase classname="Pensions Spouse other expenses should submit with valid data" name="Pensions Spouse other expenses should submit with valid data" time="0.018">
    </testcase>
    <testcase classname="Pensions Dependent other expenses should render" name="Pensions Dependent other expenses should render" time="0.018">
    </testcase>
    <testcase classname="Pensions Dependent other expenses should reveal expenses fields" name="Pensions Dependent other expenses should reveal expenses fields" time="0.049">
    </testcase>
    <testcase classname="Pensions Dependent other expenses should render title on review page" name="Pensions Dependent other expenses should render title on review page" time="0.008">
    </testcase>
    <testcase classname="Pensions Dependent other expenses should not submit empty form" name="Pensions Dependent other expenses should not submit empty form" time="0.027">
    </testcase>
    <testcase classname="Pensions Dependent other expenses should add another expense" name="Pensions Dependent other expenses should add another expense" time="0.183">
    </testcase>
    <testcase classname="Pensions Dependent other expenses should submit with valid data" name="Pensions Dependent other expenses should submit with valid data" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need preparer info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:07" time="1.382" tests="6">
    <testcase classname="Pre-need preparer info should render" name="Pre-need preparer info should render" time="0.122">
    </testcase>
    <testcase classname="Pre-need preparer info should not submit empty form" name="Pre-need preparer info should not submit empty form" time="0.036">
    </testcase>
    <testcase classname="Pre-need preparer info should submit with required fields filled in" name="Pre-need preparer info should submit with required fields filled in" time="0.046">
    </testcase>
    <testcase classname="Pre-need preparer info should reveal name fields" name="Pre-need preparer info should reveal name fields" time="0.143">
    </testcase>
    <testcase classname="Pre-need preparer info should not submit without required agent fields" name="Pre-need preparer info should not submit without required agent fields" time="0.237">
    </testcase>
    <testcase classname="Pre-need preparer info should submit with all required info filled in" name="Pre-need preparer info should submit with all required info filled in" time="0.367">
    </testcase>
  </testsuite>
  <testsuite name="VIC address information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:07" time="1.943" tests="5">
    <testcase classname="VIC address information should render" name="VIC address information should render" time="0.224">
    </testcase>
    <testcase classname="VIC address information should not submit without required info" name="VIC address information should not submit without required info" time="0.181">
    </testcase>
    <testcase classname="VIC address information should submit with all info filled in" name="VIC address information should submit with all info filled in" time="0.225">
    </testcase>
    <testcase classname="VIC address information should submit without state if allowed" name="VIC address information should submit without state if allowed" time="0.674">
    </testcase>
    <testcase classname="VIC address information should not submit with invalid postal code" name="VIC address information should not submit with invalid postal code" time="0.223">
    </testcase>
  </testsuite>
  <testsuite name="feedback tool school info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:08" time="1.628" tests="5">
    <testcase classname="feedback tool school info should render" name="feedback tool school info should render" time="0.282">
    </testcase>
    <testcase classname="feedback tool school info should render international address fields" name="feedback tool school info should render international address fields" time="0.15">
    </testcase>
    <testcase classname="feedback tool school info should not submit without required information" name="feedback tool school info should not submit without required information" time="0.204">
    </testcase>
    <testcase classname="feedback tool school info should not submit without required international address information" name="feedback tool school info should not submit without required international address information" time="0.269">
    </testcase>
    <testcase classname="feedback tool school info should submit with required information" name="feedback tool school info should submit with required information" time="0.337">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AddressSection&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:09" time="1.62" tests="29">
    <testcase classname="&lt;AddressSection&gt; should display an address if one is provided in props" name="&lt;AddressSection&gt; should display an address if one is provided in props" time="0.208">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should display a loading spinner if address save in progress" name="&lt;AddressSection&gt; should display a loading spinner if address save in progress" time="0.008">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should format 1 address line" name="&lt;AddressSection&gt; should format 1 address line" time="0.013">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should format address 2 address lines" name="&lt;AddressSection&gt; should format address 2 address lines" time="0.015">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should format address 3 address lines" name="&lt;AddressSection&gt; should format address 3 address lines" time="0.01">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should render an edit button if user is allowed to edit address" name="&lt;AddressSection&gt; should render an edit button if user is allowed to edit address" time="0.003">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should not render an edit button if user not allowed to edit address" name="&lt;AddressSection&gt; should not render an edit button if user not allowed to edit address" time="0.002">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should call editAddress() when Edit button is clicked" name="&lt;AddressSection&gt; should call editAddress() when Edit button is clicked" time="0.025">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should render edit fields when isEditingAddress is true" name="&lt;AddressSection&gt; should render edit fields when isEditingAddress is true" time="0.089">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should call saveAddress() when Update button is clicked" name="&lt;AddressSection&gt; should call saveAddress() when Update button is clicked" time="0.157">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should call cancelEditingAddress when Cancel button is clicked" name="&lt;AddressSection&gt; should call cancelEditingAddress when Cancel button is clicked" time="0.083">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should show addressUpdateUnavailable if countries or states lists aren&apos;t available" name="&lt;AddressSection&gt; should show addressUpdateUnavailable if countries or states lists aren&apos;t available" time="0.006">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should load address in new props after mounting" name="&lt;AddressSection&gt; should load address in new props after mounting" time="0.005">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should update editableAddress when the input changes" name="&lt;AddressSection&gt; should update editableAddress when the input changes" time="0.048">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should not call saveAddress when Cancel is clicked" name="&lt;AddressSection&gt; should not call saveAddress when Cancel is clicked" time="0.055">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should not call saveAddress when Update is clicked with invalid data" name="&lt;AddressSection&gt; should not call saveAddress when Update is clicked with invalid data" time="0.08">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should display error messages for validation failures" name="&lt;AddressSection&gt; should display error messages for validation failures" time="0.032">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should infer new address type" name="&lt;AddressSection&gt; should infer new address type" time="0.043">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should reset disallowed address fields when type changes" name="&lt;AddressSection&gt; should reset disallowed address fields when type changes" time="0.031">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should start in the editing state by calling editAddress() if address is empty and user canUpdate" name="&lt;AddressSection&gt; should start in the editing state by calling editAddress() if address is empty and user canUpdate" time="0.006">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should not start editing by calling editAddress() if address is empty but user !canUpdate" name="&lt;AddressSection&gt; should not start editing by calling editAddress() if address is empty but user !canUpdate" time="0.002">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should render an address help button" name="&lt;AddressSection&gt; should render an address help button" time="0.01">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should render an empty address warning on the edit screen" name="&lt;AddressSection&gt; should render an empty address warning on the edit screen" time="0.019">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; should render an empty address warning on the view screen" name="&lt;AddressSection&gt; should render an empty address warning on the view screen" time="0.011">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; validation should run all validations against a field if the address is valid" name="&lt;AddressSection&gt; validation should run all validations against a field if the address is valid" time="0.078">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; validation should return the first error message it finds" name="&lt;AddressSection&gt; validation should return the first error message it finds" time="0.078">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; validation should run validations on modified fields only" name="&lt;AddressSection&gt; validation should run validations on modified fields only" time="0.111">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; validation should run validation against dropdowns immediately" name="&lt;AddressSection&gt; validation should run validation against dropdowns immediately" time="0.104">
    </testcase>
    <testcase classname="&lt;AddressSection&gt; validation should run validations on all fields before saving the address" name="&lt;AddressSection&gt; validation should run validations on all fields before saving the address" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform definition address" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:10" time="1.944" tests="6">
    <testcase classname="Schemaform definition address should render address" name="Schemaform definition address should render address" time="0.598">
    </testcase>
    <testcase classname="Schemaform definition address should have required inputs if required" name="Schemaform definition address should have required inputs if required" time="0.203">
    </testcase>
    <testcase classname="Schemaform definition address should update labels and state selection conditionally" name="Schemaform definition address should update labels and state selection conditionally" time="0.394">
    </testcase>
    <testcase classname="Schemaform definition address should update address field" name="Schemaform definition address should update address field" time="0.116">
    </testcase>
    <testcase classname="Schemaform definition address should update country field in empty address" name="Schemaform definition address should update country field in empty address" time="0.259">
    </testcase>
    <testcase classname="Schemaform definition address should require state for non-required addresses with other info" name="Schemaform definition address should require state for non-required addresses with other info" time="0.207">
    </testcase>
  </testsuite>
  <testsuite name="Edu applicantServicePage" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:10" time="1.843" tests="10">
    <testcase classname="Edu applicantServicePage 5495 should render" name="Edu applicantServicePage 5495 should render" time="0.027">
    </testcase>
    <testcase classname="Edu applicantServicePage 5495 should expand" name="Edu applicantServicePage 5495 should expand" time="0.12">
    </testcase>
    <testcase classname="Edu applicantServicePage 5495 should not have required fields errors after choosing no" name="Edu applicantServicePage 5495 should not have required fields errors after choosing no" time="0.036">
    </testcase>
    <testcase classname="Edu applicantServicePage 5495 should have required field errors when expanded" name="Edu applicantServicePage 5495 should have required field errors when expanded" time="0.204">
    </testcase>
    <testcase classname="Edu applicantServicePage 5495 should add another" name="Edu applicantServicePage 5495 should add another" time="0.293">
    </testcase>
    <testcase classname="Edu applicantServicePage 5490 should render" name="Edu applicantServicePage 5490 should render" time="0.011">
    </testcase>
    <testcase classname="Edu applicantServicePage 5490 should expand" name="Edu applicantServicePage 5490 should expand" time="0.08">
    </testcase>
    <testcase classname="Edu applicantServicePage 5490 should not have required fields errors after choosing no" name="Edu applicantServicePage 5490 should not have required fields errors after choosing no" time="0.024">
    </testcase>
    <testcase classname="Edu applicantServicePage 5490 should have required field errors when expanded" name="Edu applicantServicePage 5490 should have required field errors when expanded" time="0.099">
    </testcase>
    <testcase classname="Edu applicantServicePage 5490 should add another" name="Edu applicantServicePage 5490 should add another" time="0.315">
    </testcase>
  </testsuite>
  <testsuite name="Prisoner of war info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:11" time="1.942" tests="7">
    <testcase classname="Prisoner of war info should render" name="Prisoner of war info should render" time="0.127">
    </testcase>
    <testcase classname="Prisoner of war info should render confinement fields" name="Prisoner of war info should render confinement fields" time="0.209">
    </testcase>
    <testcase classname="Prisoner of war info should fail to submit when no data is filled out" name="Prisoner of war info should fail to submit when no data is filled out" time="0.034">
    </testcase>
    <testcase classname="Prisoner of war info should add another period" name="Prisoner of war info should add another period" time="0.289">
    </testcase>
    <testcase classname="Prisoner of war info should submit when data filled in" name="Prisoner of war info should submit when data filled in" time="0.176">
    </testcase>
    <testcase classname="Prisoner of war info should show new disabilities" name="Prisoner of war info should show new disabilities" time="0.111">
    </testcase>
    <testcase classname="Prisoner of war info should not show new disabilities section when none entered" name="Prisoner of war info should not show new disabilities section when none entered" time="0.136">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need burial benefits" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:12" time="1.383" tests="6">
    <testcase classname="Pre-need burial benefits should render" name="Pre-need burial benefits should render" time="0.201">
    </testcase>
    <testcase classname="Pre-need burial benefits should not submit empty form" name="Pre-need burial benefits should not submit empty form" time="0.148">
    </testcase>
    <testcase classname="Pre-need burial benefits should fill in currently buried persons list" name="Pre-need burial benefits should fill in currently buried persons list" time="0.202">
    </testcase>
    <testcase classname="Pre-need burial benefits should fill in desired cemetery" name="Pre-need burial benefits should fill in desired cemetery" time="0.069">
    </testcase>
    <testcase classname="Pre-need burial benefits should add another currently buried person" name="Pre-need burial benefits should add another currently buried person" time="0.228">
    </testcase>
    <testcase classname="Pre-need burial benefits should fill cemetery for currently buried person" name="Pre-need burial benefits should fill cemetery for currently buried person" time="0.102">
    </testcase>
  </testsuite>
  <testsuite name="&lt;YourClaimsPageV2&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:14" time="0.488" tests="17">
    <testcase classname="&lt;YourClaimsPageV2&gt; should render" name="&lt;YourClaimsPageV2&gt; should render" time="0.233">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render a loading indicator if both requests loading" name="&lt;YourClaimsPageV2&gt; should render a loading indicator if both requests loading" time="0.022">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render a loading indicator if one list empty and other loading" name="&lt;YourClaimsPageV2&gt; should render a loading indicator if one list empty and other loading" time="0.003">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render a list of claims and appeals" name="&lt;YourClaimsPageV2&gt; should render a list of claims and appeals" time="0.05">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render a closed claim message if show30DayNotice is true" name="&lt;YourClaimsPageV2&gt; should render a closed claim message if show30DayNotice is true" time="0.007">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render Pagination" name="&lt;YourClaimsPageV2&gt; should render Pagination" time="0.002">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render a no claims message when no claims or appeals present" name="&lt;YourClaimsPageV2&gt; should render a no claims message when no claims or appeals present" time="0.002">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should not render error messages if appeals are loading" name="&lt;YourClaimsPageV2&gt; should not render error messages if appeals are loading" time="0.009">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should not render error messages if claims are loading" name="&lt;YourClaimsPageV2&gt; should not render error messages if claims are loading" time="0.01">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should not render claims and appeals unavailable when neither is unavailable" name="&lt;YourClaimsPageV2&gt; should not render claims and appeals unavailable when neither is unavailable" time="0.003">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render claims unavailable when claims are unavailable" name="&lt;YourClaimsPageV2&gt; should render claims unavailable when claims are unavailable" time="0.003">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render appeals unavailable when appeals are unavailable" name="&lt;YourClaimsPageV2&gt; should render appeals unavailable when appeals are unavailable" time="0.004">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should call `showConsolidatedMessage` when the relevant button is clicked" name="&lt;YourClaimsPageV2&gt; should call `showConsolidatedMessage` when the relevant button is clicked" time="0.013">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render a FeaturesWarning component" name="&lt;YourClaimsPageV2&gt; should render a FeaturesWarning component" time="0.002">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render an AskVAQuestions warning component" name="&lt;YourClaimsPageV2&gt; should render an AskVAQuestions warning component" time="0.002">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should render 30 day notice" name="&lt;YourClaimsPageV2&gt; should render 30 day notice" time="0.002">
    </testcase>
    <testcase classname="&lt;YourClaimsPageV2&gt; should not render 30 day notice" name="&lt;YourClaimsPageV2&gt; should not render 30 day notice" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need sponsor information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:13" time="1.264" tests="4">
    <testcase classname="Pre-need sponsor information should render" name="Pre-need sponsor information should render" time="0.189">
    </testcase>
    <testcase classname="Pre-need sponsor information should not submit empty form" name="Pre-need sponsor information should not submit empty form" time="0.133">
    </testcase>
    <testcase classname="Pre-need sponsor information should submit with required information" name="Pre-need sponsor information should submit with required information" time="0.416">
    </testcase>
    <testcase classname="Pre-need sponsor information should reveal date of death question" name="Pre-need sponsor information should reveal date of death question" time="0.134">
    </testcase>
  </testsuite>
  <testsuite name="profile helpers:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:13" time="1.183" tests="4">
    <testcase classname="profile helpers: formTitles should have title information for each verified form" name="profile helpers: formTitles should have title information for each verified form" time="1.053">
    </testcase>
    <testcase classname="profile helpers: formLinks should have link information for each verified form" name="profile helpers: formLinks should have link information for each verified form" time="0.001">
    </testcase>
    <testcase classname="profile helpers: sipEnabledForms should include all and only SIP enabled forms" name="profile helpers: sipEnabledForms should include all and only SIP enabled forms" time="0.014">
    </testcase>
    <testcase classname="profile helpers: handleIncompleteInformation should push error into window if a form is missing title or link information" name="profile helpers: handleIncompleteInformation should push error into window if a form is missing title or link information" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Hca serviceInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:15" time="1.019" tests="4">
    <testcase classname="Hca serviceInformation renders military info" name="Hca serviceInformation renders military info" time="0.142">
    </testcase>
    <testcase classname="Hca serviceInformation does not submit without info" name="Hca serviceInformation does not submit without info" time="0.048">
    </testcase>
    <testcase classname="Hca serviceInformation submits with required info" name="Hca serviceInformation submits with required info" time="0.147">
    </testcase>
    <testcase classname="Hca serviceInformation shows discharge type with lastDischargeDate is in the present or past" name="Hca serviceInformation shows discharge type with lastDischargeDate is in the present or past" time="0.228">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need definition address" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:15" time="1.177" tests="6">
    <testcase classname="Pre-need definition address should render address" name="Pre-need definition address should render address" time="0.408">
    </testcase>
    <testcase classname="Pre-need definition address should have required inputs if required" name="Pre-need definition address should have required inputs if required" time="0.109">
    </testcase>
    <testcase classname="Pre-need definition address should update labels and state selection conditionally" name="Pre-need definition address should update labels and state selection conditionally" time="0.184">
    </testcase>
    <testcase classname="Pre-need definition address should update address field" name="Pre-need definition address should update address field" time="0.112">
    </testcase>
    <testcase classname="Pre-need definition address should update country field in empty address" name="Pre-need definition address should update country field in empty address" time="0.12">
    </testcase>
    <testcase classname="Pre-need definition address should require state for non-required addresses with other info" name="Pre-need definition address should require state for non-required addresses with other info" time="0.132">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 veteran information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:15" time="1.18" tests="6">
    <testcase classname="VRE chapter 36 veteran information renders veteran information fields" name="VRE chapter 36 veteran information renders veteran information fields" time="0.161">
    </testcase>
    <testcase classname="VRE chapter 36 veteran information renders veteran date of death field when view:isVeteran is false" name="VRE chapter 36 veteran information renders veteran date of death field when view:isVeteran is false" time="0.079">
    </testcase>
    <testcase classname="VRE chapter 36 veteran information renders veteran gender when view:isVeteran is true" name="VRE chapter 36 veteran information renders veteran gender when view:isVeteran is true" time="0.043">
    </testcase>
    <testcase classname="VRE chapter 36 veteran information does not submit without required veteran information" name="VRE chapter 36 veteran information does not submit without required veteran information" time="0.09">
    </testcase>
    <testcase classname="VRE chapter 36 veteran information submits with only required information with ssn" name="VRE chapter 36 veteran information submits with only required information with ssn" time="0.184">
    </testcase>
    <testcase classname="VRE chapter 36 veteran information submits with only required information with va file number" name="VRE chapter 36 veteran information submits with only required information with va file number" time="0.251">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 sponsorInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:16" time="0.693" tests="2">
    <testcase classname="Edu 5490 sponsorInformation should render" name="Edu 5490 sponsorInformation should render" time="0.057">
    </testcase>
    <testcase classname="Edu 5490 sponsorInformation should conditionally show spouseInfo options" name="Edu 5490 sponsorInformation should conditionally show spouseInfo options" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 31 military history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:16" time="1.203" tests="4">
    <testcase classname="VRE chapter 31 military history renders military info" name="VRE chapter 31 military history renders military info" time="0.173">
    </testcase>
    <testcase classname="VRE chapter 31 military history renders military info" name="VRE chapter 31 military history renders military info" time="0.09">
    </testcase>
    <testcase classname="VRE chapter 31 military history submits with required info" name="VRE chapter 31 military history submits with required info" time="0.314">
    </testcase>
    <testcase classname="VRE chapter 31 military history does not submit without info" name="VRE chapter 31 military history does not submit without info" time="0.136">
    </testcase>
  </testsuite>
  <testsuite name="Hca spouse information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:17" time="0.774" tests="3">
    <testcase classname="Hca spouse information should render" name="Hca spouse information should render" time="0.077">
    </testcase>
    <testcase classname="Hca spouse information should not submit empty form" name="Hca spouse information should not submit empty form" time="0.079">
    </testcase>
    <testcase classname="Hca spouse information should expand hidden fields" name="Hca spouse information should expand hidden fields" time="0.181">
    </testcase>
  </testsuite>
  <testsuite name="Hca financial disclosure" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:18" time="0.436" tests="4">
    <testcase classname="Hca financial disclosure should render" name="Hca financial disclosure should render" time="0.025">
    </testcase>
    <testcase classname="Hca financial disclosure should not submit empty form" name="Hca financial disclosure should not submit empty form" time="0.026">
    </testcase>
    <testcase classname="Hca financial disclosure should submit with valid data" name="Hca financial disclosure should submit with valid data" time="0.028">
    </testcase>
    <testcase classname="Hca financial disclosure should show a warning if No is selected" name="Hca financial disclosure should show a warning if No is selected" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="Military history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:17" time="1.021" tests="4">
    <testcase classname="Military history should render" name="Military history should render" time="0.167">
    </testcase>
    <testcase classname="Military history should fail to submit when no data is filled out" name="Military history should fail to submit when no data is filled out" time="0.103">
    </testcase>
    <testcase classname="Military history should add another service period" name="Military history should add another service period" time="0.213">
    </testcase>
    <testcase classname="Military history should submit when data filled in" name="Military history should submit when data filled in" time="0.145">
    </testcase>
  </testsuite>
  <testsuite name="Pensions service periods" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:19" time="1.072" tests="6">
    <testcase classname="Pensions service periods should render" name="Pensions service periods should render" time="0.08">
    </testcase>
    <testcase classname="Pensions service periods should not submit empty form" name="Pensions service periods should not submit empty form" time="0.08">
    </testcase>
    <testcase classname="Pensions service periods should display warning if the veteran did not serve during a wartime period" name="Pensions service periods should display warning if the veteran did not serve during a wartime period" time="0.158">
    </testcase>
    <testcase classname="Pensions service periods should not display warning if the veteran did serve during a wartime period" name="Pensions service periods should not display warning if the veteran did serve during a wartime period" time="0.136">
    </testcase>
    <testcase classname="Pensions service periods should add another service period" name="Pensions service periods should add another service period" time="0.174">
    </testcase>
    <testcase classname="Pensions service periods should submit with valid data" name="Pensions service periods should submit with valid data" time="0.129">
    </testcase>
  </testsuite>
  <testsuite name="claimant information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:18" time="1.059" tests="3">
    <testcase classname="claimant information should render" name="claimant information should render" time="0.214">
    </testcase>
    <testcase classname="claimant information should not continue without required info" name="claimant information should not continue without required info" time="0.176">
    </testcase>
    <testcase classname="claimant information should continue with all info filled in" name="claimant information should continue with all info filled in" time="0.357">
    </testcase>
  </testsuite>
  <testsuite name="Pensions employment history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:19" time="1.491" tests="7">
    <testcase classname="Pensions employment history should render" name="Pensions employment history should render" time="0.043">
    </testcase>
    <testcase classname="Pensions employment history should expand to show all questions" name="Pensions employment history should expand to show all questions" time="0.212">
    </testcase>
    <testcase classname="Pensions employment history should should have no required fields if &quot;no&quot; is selected" name="Pensions employment history should should have no required fields if &quot;no&quot; is selected" time="0.025">
    </testcase>
    <testcase classname="Pensions employment history should not submit empty form" name="Pensions employment history should not submit empty form" time="0.248">
    </testcase>
    <testcase classname="Pensions employment history should add another job" name="Pensions employment history should add another job" time="0.631">
    </testcase>
    <testcase classname="Pensions employment history depends should return true if under 65" name="Pensions employment history depends should return true if under 65" time="0.002">
    </testcase>
    <testcase classname="Pensions employment history depends should return false if 65" name="Pensions employment history depends should return false if 65" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="feedback tool applicant info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:20" time="0.495" tests="2">
    <testcase classname="feedback tool applicant info should render" name="feedback tool applicant info should render" time="0.134">
    </testcase>
    <testcase classname="feedback tool applicant info should submit without any information" name="feedback tool applicant info should submit without any information" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="PTSD Assault permission notice" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:20" time="1.011" tests="3">
    <testcase classname="PTSD Assault permission notice should render" name="PTSD Assault permission notice should render" time="0.19">
    </testcase>
    <testcase classname="PTSD Assault permission notice should add an authority" name="PTSD Assault permission notice should add an authority" time="0.284">
    </testcase>
    <testcase classname="PTSD Assault permission notice should allow submission with no authorities" name="PTSD Assault permission notice should allow submission with no authorities" time="0.108">
    </testcase>
  </testsuite>
  <testsuite name="Hca dependent information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:20" time="1.029" tests="4">
    <testcase classname="Hca dependent information should render" name="Hca dependent information should render" time="0.026">
    </testcase>
    <testcase classname="Hca dependent information should not submit empty form" name="Hca dependent information should not submit empty form" time="0.022">
    </testcase>
    <testcase classname="Hca dependent information should reveal dependent information" name="Hca dependent information should reveal dependent information" time="0.167">
    </testcase>
    <testcase classname="Hca dependent information should add another" name="Hca dependent information should add another" time="0.487">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;RoutedSavableFormPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:21" time="0.45" tests="2">
    <testcase classname="Schemaform &lt;RoutedSavableFormPage&gt; should include SaveLink and SaveStatus" name="Schemaform &lt;RoutedSavableFormPage&gt; should include SaveLink and SaveStatus" time="0.333">
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavableFormPage&gt; should auto save on change" name="Schemaform &lt;RoutedSavableFormPage&gt; should auto save on change" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Pensions marriage history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:21" time="0.772" tests="8">
    <testcase classname="Pensions marriage history should render" name="Pensions marriage history should render" time="0.072">
    </testcase>
    <testcase classname="Pensions marriage history hideIf current marriage hides if married and last" name="Pensions marriage history hideIf current marriage hides if married and last" time="0.001">
    </testcase>
    <testcase classname="Pensions marriage history hideIf current marriage does not hide if married and not last" name="Pensions marriage history hideIf current marriage does not hide if married and not last" time="0">
    </testcase>
    <testcase classname="Pensions marriage history hideIf current marriage does not hide if not married" name="Pensions marriage history hideIf current marriage does not hide if not married" time="0">
    </testcase>
    <testcase classname="Pensions marriage history page title uses word for index" name="Pensions marriage history page title uses word for index" time="0.001">
    </testcase>
    <testcase classname="Pensions marriage history page title uses number when at index ten or greater" name="Pensions marriage history page title uses number when at index ten or greater" time="0">
    </testcase>
    <testcase classname="Pensions marriage history should not submit empty form" name="Pensions marriage history should not submit empty form" time="0.105">
    </testcase>
    <testcase classname="Pensions marriage history should submit with valid data" name="Pensions marriage history should submit with valid data" time="0.267">
    </testcase>
  </testsuite>
  <testsuite name="brand-consolidation/va-subdomain" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:23" time="0.118" tests="2">
    <testcase classname="brand-consolidation/va-subdomain returns false if is not a VA subdomain" name="brand-consolidation/va-subdomain returns false if is not a VA subdomain" time="0.002">
    </testcase>
    <testcase classname="brand-consolidation/va-subdomain returns true if is a VA subdomain" name="brand-consolidation/va-subdomain returns true if is a VA subdomain" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="686 dependent info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:22" time="0.916" tests="5">
    <testcase classname="686 dependent info should render" name="686 dependent info should render" time="0.098">
    </testcase>
    <testcase classname="686 dependent info should not submit empty form" name="686 dependent info should not submit empty form" time="0.033">
    </testcase>
    <testcase classname="686 dependent info should submit form if child lives with applicant" name="686 dependent info should submit form if child lives with applicant" time="0.046">
    </testcase>
    <testcase classname="686 dependent info should expand address info if child does not live with applicant" name="686 dependent info should expand address info if child does not live with applicant" time="0.099">
    </testcase>
    <testcase classname="686 dependent info should submit form with required fields filled" name="686 dependent info should submit form with required fields filled" time="0.289">
    </testcase>
  </testsuite>
  <testsuite name="686 spouse info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:22" time="1.007" tests="6">
    <testcase classname="686 spouse info should render" name="686 spouse info should render" time="0.143">
    </testcase>
    <testcase classname="686 spouse info should render spouse address and contrib fields" name="686 spouse info should render spouse address and contrib fields" time="0.219">
    </testcase>
    <testcase classname="686 spouse info should render file number" name="686 spouse info should render file number" time="0.068">
    </testcase>
    <testcase classname="686 spouse info should not submit empty form" name="686 spouse info should not submit empty form" time="0.075">
    </testcase>
    <testcase classname="686 spouse info should submit with valid data" name="686 spouse info should submit with valid data" time="0.165">
    </testcase>
    <testcase classname="686 spouse info depends should return true if married" name="686 spouse info depends should return true if married" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ConfirmationPoll" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:23" time="0.92" tests="3">
    <testcase classname="ConfirmationPoll should make an api call after mounting" name="ConfirmationPoll should make an api call after mounting" time="0.214">
    </testcase>
    <testcase classname="ConfirmationPoll should continue to make api calls until the response is not pending" name="ConfirmationPoll should continue to make api calls until the response is not pending" time="0.078">
    </testcase>
    <testcase classname="ConfirmationPoll should render the confirmation page" name="ConfirmationPoll should render the confirmation page" time="0.506">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need applicant contact information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:23" time="0.827" tests="3">
    <testcase classname="Pre-need applicant contact information should render" name="Pre-need applicant contact information should render" time="0.167">
    </testcase>
    <testcase classname="Pre-need applicant contact information should not submit empty form" name="Pre-need applicant contact information should not submit empty form" time="0.11">
    </testcase>
    <testcase classname="Pre-need applicant contact information should submit with valid data" name="Pre-need applicant contact information should submit with valid data" time="0.291">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 31 applicant address" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:23" time="1.102" tests="4">
    <testcase classname="VRE chapter 31 applicant address renders applicant address form" name="VRE chapter 31 applicant address renders applicant address form" time="0.17">
    </testcase>
    <testcase classname="VRE chapter 31 applicant address does not submit without required info" name="VRE chapter 31 applicant address does not submit without required info" time="0.091">
    </testcase>
    <testcase classname="VRE chapter 31 applicant address submits with veteran address" name="VRE chapter 31 applicant address submits with veteran address" time="0.163">
    </testcase>
    <testcase classname="VRE chapter 31 applicant address submits with veteranAddress and veteranNewAddress" name="VRE chapter 31 applicant address submits with veteranAddress and veteranNewAddress" time="0.354">
    </testcase>
  </testsuite>
  <testsuite name="Pensions expedited" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:24" time="0.562" tests="4">
    <testcase classname="Pensions expedited should render" name="Pensions expedited should render" time="0.029">
    </testcase>
    <testcase classname="Pensions expedited should render warning on Yes" name="Pensions expedited should render warning on Yes" time="0.049">
    </testcase>
    <testcase classname="Pensions expedited should render warning on No" name="Pensions expedited should render warning on No" time="0.02">
    </testcase>
    <testcase classname="Pensions expedited should submit" name="Pensions expedited should submit" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 31 disability information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:24" time="1.091" tests="4">
    <testcase classname="VRE chapter 31 disability information renders disability information form" name="VRE chapter 31 disability information renders disability information form" time="0.136">
    </testcase>
    <testcase classname="VRE chapter 31 disability information should not submit empty form" name="VRE chapter 31 disability information should not submit empty form" time="0.051">
    </testcase>
    <testcase classname="VRE chapter 31 disability information renders hospital information form when in hospital is true" name="VRE chapter 31 disability information renders hospital information form when in hospital is true" time="0.188">
    </testcase>
    <testcase classname="VRE chapter 31 disability information should fill in hospital information" name="VRE chapter 31 disability information should fill in hospital information" time="0.342">
    </testcase>
  </testsuite>
  <testsuite name="Pensions spouse marriage history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:25" time="0.831" tests="7">
    <testcase classname="Pensions spouse marriage history should render" name="Pensions spouse marriage history should render" time="0.079">
    </testcase>
    <testcase classname="Pensions spouse marriage history should render labels with spouse name" name="Pensions spouse marriage history should render labels with spouse name" time="0.047">
    </testcase>
    <testcase classname="Pensions spouse marriage history page title uses word for index" name="Pensions spouse marriage history page title uses word for index" time="0">
    </testcase>
    <testcase classname="Pensions spouse marriage history page title uses number when at index ten or greater" name="Pensions spouse marriage history page title uses number when at index ten or greater" time="0.001">
    </testcase>
    <testcase classname="Pensions spouse marriage history should not submit empty form" name="Pensions spouse marriage history should not submit empty form" time="0.081">
    </testcase>
    <testcase classname="Pensions spouse marriage history should submit with valid data" name="Pensions spouse marriage history should submit with valid data" time="0.272">
    </testcase>
    <testcase classname="Pensions spouse marriage history depends should return true if married" name="Pensions spouse marriage history depends should return true if married" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 contactInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:25" time="0.859" tests="3">
    <testcase classname="Edu 1990 contactInformation should render" name="Edu 1990 contactInformation should render" time="0.124">
    </testcase>
    <testcase classname="Edu 1990 contactInformation should not submit form without information" name="Edu 1990 contactInformation should not submit form without information" time="0.162">
    </testcase>
    <testcase classname="Edu 1990 contactInformation should submit form with information" name="Edu 1990 contactInformation should submit form with information" time="0.226">
    </testcase>
  </testsuite>
  <testsuite name="686 dependent info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:26" time="1.01" tests="6">
    <testcase classname="686 dependent info should render" name="686 dependent info should render" time="0.105">
    </testcase>
    <testcase classname="686 dependent info should not submit empty form" name="686 dependent info should not submit empty form" time="0.022">
    </testcase>
    <testcase classname="686 dependent info should submit form if applicant has no dependents" name="686 dependent info should submit form if applicant has no dependents" time="0.035">
    </testcase>
    <testcase classname="686 dependent info should expand dependent info if applicant has dependents" name="686 dependent info should expand dependent info if applicant has dependents" time="0.087">
    </testcase>
    <testcase classname="686 dependent info should submit form with all required fills filled" name="686 dependent info should submit form with all required fills filled" time="0.244">
    </testcase>
    <testcase classname="686 dependent info should add another dependent" name="686 dependent info should add another dependent" time="0.181">
    </testcase>
  </testsuite>
  <testsuite name="1990 schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:26" time="0.388" tests="2">
    <testcase classname="1990 schema tests should validate maximal-test.json" name="1990 schema tests should validate maximal-test.json" time="0.258">
    </testcase>
    <testcase classname="1990 schema tests should validate minimal-test.json" name="1990 schema tests should validate minimal-test.json" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Hca general insurance" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:26" time="0.742" tests="5">
    <testcase classname="Hca general insurance should render" name="Hca general insurance should render" time="0.019">
    </testcase>
    <testcase classname="Hca general insurance should not submit empty form" name="Hca general insurance should not submit empty form" time="0.019">
    </testcase>
    <testcase classname="Hca general insurance should reveal required insurance providers" name="Hca general insurance should reveal required insurance providers" time="0.087">
    </testcase>
    <testcase classname="Hca general insurance should add another" name="Hca general insurance should add another" time="0.135">
    </testcase>
    <testcase classname="Hca general insurance should require one of policy number or group code" name="Hca general insurance should require one of policy number or group code" time="0.111">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1995 dependents" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:27" time="0.476" tests="2">
    <testcase classname="Edu 1995 dependents should render" name="Edu 1995 dependents should render" time="0.024">
    </testcase>
    <testcase classname="Edu 1995 dependents should have all fields set as required" name="Edu 1995 dependents should have all fields set as required" time="0.041">
    </testcase>
  </testsuite>
  <testsuite name="686 dependent info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:27" time="0.752" tests="7">
    <testcase classname="686 dependent info should render" name="686 dependent info should render" time="0.118">
    </testcase>
    <testcase classname="686 dependent info should show disabled if child is less than 18 years old" name="686 dependent info should show disabled if child is less than 18 years old" time="0.025">
    </testcase>
    <testcase classname="686 dependent info should not show disabled or inSchool if child is older than 23" name="686 dependent info should not show disabled or inSchool if child is older than 23" time="0.019">
    </testcase>
    <testcase classname="686 dependent info should not submit empty form" name="686 dependent info should not submit empty form" time="0.062">
    </testcase>
    <testcase classname="686 dependent info should submit form with required fields filled" name="686 dependent info should submit form with required fields filled" time="0.075">
    </testcase>
    <testcase classname="686 dependent info should expand view:stepChildCondition if stepChild is selected" name="686 dependent info should expand view:stepChildCondition if stepChild is selected" time="0.054">
    </testcase>
    <testcase classname="686 dependent info should expand info boxes if child is in school and disabled" name="686 dependent info should expand info boxes if child is in school and disabled" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Pensions spouse info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:27" time="0.843" tests="6">
    <testcase classname="Pensions spouse info should render" name="Pensions spouse info should render" time="0.053">
    </testcase>
    <testcase classname="Pensions spouse info should render spouse address and contrib fields" name="Pensions spouse info should render spouse address and contrib fields" time="0.188">
    </testcase>
    <testcase classname="Pensions spouse info should render file number" name="Pensions spouse info should render file number" time="0.06">
    </testcase>
    <testcase classname="Pensions spouse info should not submit empty form" name="Pensions spouse info should not submit empty form" time="0.058">
    </testcase>
    <testcase classname="Pensions spouse info should submit with valid data" name="Pensions spouse info should submit with valid data" time="0.135">
    </testcase>
    <testcase classname="Pensions spouse info depends should return true if married" name="Pensions spouse info depends should return true if married" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need applicant information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:28" time="0.917" tests="4">
    <testcase classname="Pre-need applicant information should render" name="Pre-need applicant information should render" time="0.193">
    </testcase>
    <testcase classname="Pre-need applicant information should not submit empty form" name="Pre-need applicant information should not submit empty form" time="0.085">
    </testcase>
    <testcase classname="Pre-need applicant information should submit with required information" name="Pre-need applicant information should submit with required information" time="0.231">
    </testcase>
    <testcase classname="Pre-need applicant information should reveal info message" name="Pre-need applicant information should reveal info message" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="HCA veteranInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:29" time="0.623" tests="5">
    <testcase classname="HCA veteranInformation should render veteranInformation page" name="HCA veteranInformation should render veteranInformation page" time="0.285">
    </testcase>
    <testcase classname="HCA veteranInformation should render birthInformation page" name="HCA veteranInformation should render birthInformation page" time="0.083">
    </testcase>
    <testcase classname="HCA veteranInformation should render demographicInformation page" name="HCA veteranInformation should render demographicInformation page" time="0.036">
    </testcase>
    <testcase classname="HCA veteranInformation should render veteranAddress page" name="HCA veteranInformation should render veteranAddress page" time="0.096">
    </testcase>
    <testcase classname="HCA veteranInformation should render contactInformation page" name="HCA veteranInformation should render contactInformation page" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need sponsor mailing address" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:29" time="0.715" tests="3">
    <testcase classname="Pre-need sponsor mailing address should render" name="Pre-need sponsor mailing address should render" time="0.147">
    </testcase>
    <testcase classname="Pre-need sponsor mailing address should submit empty form" name="Pre-need sponsor mailing address should submit empty form" time="0.083">
    </testcase>
    <testcase classname="Pre-need sponsor mailing address should submit with valid data" name="Pre-need sponsor mailing address should submit with valid data" time="0.174">
    </testcase>
  </testsuite>
  <testsuite name="data utils" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:28" time="1.387" tests="46">
    <testcase classname="data utils deconstructPath should deconstruct a string path" name="data utils deconstructPath should deconstruct a string path" time="0.002">
    </testcase>
    <testcase classname="data utils deconstructPath should handle array notation" name="data utils deconstructPath should handle array notation" time="0">
    </testcase>
    <testcase classname="data utils deconstructPath should handle array indexes using dot notation" name="data utils deconstructPath should handle array indexes using dot notation" time="0.001">
    </testcase>
    <testcase classname="data utils clone should return an object with the same data but different reference" name="data utils clone should return an object with the same data but different reference" time="0">
    </testcase>
    <testcase classname="data utils clone should clone a set" name="data utils clone should clone a set" time="0.001">
    </testcase>
    <testcase classname="data utils cloneDeep should return an object with a different reference" name="data utils cloneDeep should return an object with a different reference" time="0.001">
    </testcase>
    <testcase classname="data utils cloneDeep should handle an array as the root &quot;object&quot;" name="data utils cloneDeep should handle an array as the root &quot;object&quot;" time="0">
    </testcase>
    <testcase classname="data utils cloneDeep should clone all sub-objects" name="data utils cloneDeep should clone all sub-objects" time="0">
    </testcase>
    <testcase classname="data utils cloneDeep should clone all sub-arrays" name="data utils cloneDeep should clone all sub-arrays" time="0.001">
    </testcase>
    <testcase classname="data utils cloneDeep should clone all objects in arrays" name="data utils cloneDeep should clone all objects in arrays" time="0">
    </testcase>
    <testcase classname="data utils get should get a value one level deep" name="data utils get should get a value one level deep" time="0">
    </testcase>
    <testcase classname="data utils get should get a value n levels deep" name="data utils get should get a value n levels deep" time="0.001">
    </testcase>
    <testcase classname="data utils get should handle array indexes" name="data utils get should handle array indexes" time="0">
    </testcase>
    <testcase classname="data utils get should handle dot-notated array indexes" name="data utils get should handle dot-notated array indexes" time="0">
    </testcase>
    <testcase classname="data utils get should handle an array path" name="data utils get should handle an array path" time="0">
    </testcase>
    <testcase classname="data utils get should return a default value if not found" name="data utils get should return a default value if not found" time="0.001">
    </testcase>
    <testcase classname="data utils get should return undefined if not found and no default is provided" name="data utils get should return undefined if not found and no default is provided" time="0">
    </testcase>
    <testcase classname="data utils set should set the value of an existing path" name="data utils set should set the value of an existing path" time="0.001">
    </testcase>
    <testcase classname="data utils set should create nested objects as needed" name="data utils set should create nested objects as needed" time="0">
    </testcase>
    <testcase classname="data utils set should create nested arrays as needed" name="data utils set should create nested arrays as needed" time="0.001">
    </testcase>
    <testcase classname="data utils set should handle an array path" name="data utils set should handle an array path" time="0">
    </testcase>
    <testcase classname="data utils set should not change the array path provided" name="data utils set should not change the array path provided" time="0">
    </testcase>
    <testcase classname="data utils set should not modify original object when adding a new property" name="data utils set should not modify original object when adding a new property" time="0.001">
    </testcase>
    <testcase classname="data utils set should not modify original object when changing an existing property" name="data utils set should not modify original object when changing an existing property" time="0">
    </testcase>
    <testcase classname="data utils set should not maintain the same refs to sub-objects which were changed" name="data utils set should not maintain the same refs to sub-objects which were changed" time="0.001">
    </testcase>
    <testcase classname="data utils set should maintain the same refs to objects not touched" name="data utils set should maintain the same refs to objects not touched" time="0">
    </testcase>
    <testcase classname="data utils set should throw an error if a segment of the path is not a string or number" name="data utils set should throw an error if a segment of the path is not a string or number" time="0.001">
    </testcase>
    <testcase classname="data utils checkValidPath should throw an error if a path segment is undefined" name="data utils checkValidPath should throw an error if a path segment is undefined" time="0">
    </testcase>
    <testcase classname="data utils checkValidPath should throw an error if a path segment is null" name="data utils checkValidPath should throw an error if a path segment is null" time="0">
    </testcase>
    <testcase classname="data utils omit should not return a deep clone of an object" name="data utils omit should not return a deep clone of an object" time="0">
    </testcase>
    <testcase classname="data utils omit should return the same reference to the root object if no fields are omitted" name="data utils omit should return the same reference to the root object if no fields are omitted" time="0">
    </testcase>
    <testcase classname="data utils omit should omit all the fields passed in" name="data utils omit should omit all the fields passed in" time="0">
    </testcase>
    <testcase classname="data utils omit should retain all fields not passed in" name="data utils omit should retain all fields not passed in" time="0">
    </testcase>
    <testcase classname="data utils debounce should call a function with the supplied arguments" name="data utils debounce should call a function with the supplied arguments" time="0.486">
    </testcase>
    <testcase classname="data utils debounce should call a function after a waiting period" name="data utils debounce should call a function after a waiting period" time="0.153">
    </testcase>
    <testcase classname="data utils debounce should not call a function before the wait time is over" name="data utils debounce should not call a function before the wait time is over" time="0.354">
    </testcase>
    <testcase classname="data utils debounce should not call the function after it&apos;s been canceled" name="data utils debounce should not call the function after it&apos;s been canceled" time="0.202">
    </testcase>
    <testcase classname="data utils unset remove item at path" name="data utils unset remove item at path" time="0.001">
    </testcase>
    <testcase classname="data utils unset remove item at first level" name="data utils unset remove item at first level" time="0.001">
    </testcase>
    <testcase classname="data utils unset unchanged if path does not exist" name="data utils unset unchanged if path does not exist" time="0.002">
    </testcase>
    <testcase classname="data utils removeDeeplyEmptyObjects should not remove non-empty objects" name="data utils removeDeeplyEmptyObjects should not remove non-empty objects" time="0.006">
    </testcase>
    <testcase classname="data utils removeDeeplyEmptyObjects should remove empty objects" name="data utils removeDeeplyEmptyObjects should remove empty objects" time="0">
    </testcase>
    <testcase classname="data utils removeDeeplyEmptyObjects should remove deeply empty objects" name="data utils removeDeeplyEmptyObjects should remove deeply empty objects" time="0">
    </testcase>
    <testcase classname="data utils removeDeeplyEmptyObjects should remove deeply empty objects while keeping deeply non-empty objects" name="data utils removeDeeplyEmptyObjects should remove deeply empty objects while keeping deeply non-empty objects" time="0.001">
    </testcase>
    <testcase classname="data utils removeDeeplyEmptyObjects should remove multiple sibling objects" name="data utils removeDeeplyEmptyObjects should remove multiple sibling objects" time="0">
    </testcase>
    <testcase classname="data utils removeDeeplyEmptyObjects should consider null and undefined as empty by default" name="data utils removeDeeplyEmptyObjects should consider null and undefined as empty by default" time="0">
    </testcase>
  </testsuite>
  <testsuite name="feedback tool applicant info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:29" time="0.844" tests="6">
    <testcase classname="feedback tool applicant info should render myself" name="feedback tool applicant info should render myself" time="0.139">
    </testcase>
    <testcase classname="feedback tool applicant info should render someone else" name="feedback tool applicant info should render someone else" time="0.087">
    </testcase>
    <testcase classname="feedback tool applicant info should not submit without required information for myself" name="feedback tool applicant info should not submit without required information for myself" time="0.095">
    </testcase>
    <testcase classname="feedback tool applicant info should not submit without required information for someone else" name="feedback tool applicant info should not submit without required information for someone else" time="0.043">
    </testcase>
    <testcase classname="feedback tool applicant info should submit with required information for myself" name="feedback tool applicant info should submit with required information for myself" time="0.109">
    </testcase>
    <testcase classname="feedback tool applicant info should submit with required information for someone else" name="feedback tool applicant info should submit with required information for someone else" time="0.063">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 31 work information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:30" time="0.906" tests="4">
    <testcase classname="VRE chapter 31 work information renders work information form" name="VRE chapter 31 work information renders work information form" time="0.099">
    </testcase>
    <testcase classname="VRE chapter 31 work information renders job information form when working is true" name="VRE chapter 31 work information renders job information form when working is true" time="0.118">
    </testcase>
    <testcase classname="VRE chapter 31 work information submits with required information" name="VRE chapter 31 work information submits with required information" time="0.148">
    </testcase>
    <testcase classname="VRE chapter 31 work information does not submit without required information" name="VRE chapter 31 work information does not submit without required information" time="0.144">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990e sponsorVeteran" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:30" time="0.868" tests="3">
    <testcase classname="Edu 1990e sponsorVeteran should render" name="Edu 1990e sponsorVeteran should render" time="0.142">
    </testcase>
    <testcase classname="Edu 1990e sponsorVeteran should conditionally require SSN or file number" name="Edu 1990e sponsorVeteran should conditionally require SSN or file number" time="0.184">
    </testcase>
    <testcase classname="Edu 1990e sponsorVeteran should submit with no errors when all required fields are filled" name="Edu 1990e sponsorVeteran should submit with no errors when all required fields are filled" time="0.199">
    </testcase>
  </testsuite>
  <testsuite name="VIC veteran information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:31" time="0.811" tests="3">
    <testcase classname="VIC veteran information should render" name="VIC veteran information should render" time="0.138">
    </testcase>
    <testcase classname="VIC veteran information should not submit without required info" name="VIC veteran information should not submit without required info" time="0.083">
    </testcase>
    <testcase classname="VIC veteran information should submit with all info filled in" name="VIC veteran information should submit with all info filled in" time="0.164">
    </testcase>
  </testsuite>
  <testsuite name="Mental Changes 781a" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:31" time="0.555" tests="2">
    <testcase classname="Mental Changes 781a should render" name="Mental Changes 781a should render" time="0.132">
    </testcase>
    <testcase classname="Mental Changes 781a should submit if no options selected" name="Mental Changes 781a should submit if no options selected" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="Burials claimant contact information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:31" time="0.867" tests="4">
    <testcase classname="Burials claimant contact information should render" name="Burials claimant contact information should render" time="0.119">
    </testcase>
    <testcase classname="Burials claimant contact information should render official position" name="Burials claimant contact information should render official position" time="0.084">
    </testcase>
    <testcase classname="Burials claimant contact information should show errors when required fields are empty" name="Burials claimant contact information should show errors when required fields are empty" time="0.106">
    </testcase>
    <testcase classname="Burials claimant contact information should submit when all required fields are filled in" name="Burials claimant contact information should submit when all required fields are filled in" time="0.182">
    </testcase>
  </testsuite>
  <testsuite name="Homeless or At Risk Info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:32" time="0.851" tests="7">
    <testcase classname="Homeless or At Risk Info should render" name="Homeless or At Risk Info should render" time="0.118">
    </testcase>
    <testcase classname="Homeless or At Risk Info should submit when user not homeless or at risk" name="Homeless or At Risk Info should submit when user not homeless or at risk" time="0.024">
    </testcase>
    <testcase classname="Homeless or At Risk Info should require living situation, needToLeave, and contact name / number when homeless" name="Homeless or At Risk Info should require living situation, needToLeave, and contact name / number when homeless" time="0.073">
    </testcase>
    <testcase classname="Homeless or At Risk Info should require living situation and contact name / number when at risk" name="Homeless or At Risk Info should require living situation and contact name / number when at risk" time="0.052">
    </testcase>
    <testcase classname="Homeless or At Risk Info should require homeless housing input when &apos;other&apos; selected" name="Homeless or At Risk Info should require homeless housing input when &apos;other&apos; selected" time="0.079">
    </testcase>
    <testcase classname="Homeless or At Risk Info should require at risk housing input when &apos;other&apos; option selected" name="Homeless or At Risk Info should require at risk housing input when &apos;other&apos; option selected" time="0.054">
    </testcase>
    <testcase classname="Homeless or At Risk Info should submit when all fields filled" name="Homeless or At Risk Info should submit when all fields filled" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 31 veteran information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:32" time="0.901" tests="4">
    <testcase classname="VRE chapter 31 veteran information renders veteran information fields" name="VRE chapter 31 veteran information renders veteran information fields" time="0.137">
    </testcase>
    <testcase classname="VRE chapter 31 veteran information does not submit without required veteran information" name="VRE chapter 31 veteran information does not submit without required veteran information" time="0.075">
    </testcase>
    <testcase classname="VRE chapter 31 veteran information submits with only required information with ssn" name="VRE chapter 31 veteran information submits with only required information with ssn" time="0.176">
    </testcase>
    <testcase classname="VRE chapter 31 veteran information submits with only required information with va file number" name="VRE chapter 31 veteran information submits with only required information with va file number" time="0.16">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 military history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:32" time="0.841" tests="3">
    <testcase classname="VRE chapter 36 military history renders military info" name="VRE chapter 36 military history renders military info" time="0.151">
    </testcase>
    <testcase classname="VRE chapter 36 military history does not submit without required info" name="VRE chapter 36 military history does not submit without required info" time="0.101">
    </testcase>
    <testcase classname="VRE chapter 36 military history submits with required info" name="VRE chapter 36 military history submits with required info" time="0.257">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 benefitRelinquishment" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:33" time="0.516" tests="3">
    <testcase classname="Edu 5490 benefitRelinquishment should render" name="Edu 5490 benefitRelinquishment should render" time="0.033">
    </testcase>
    <testcase classname="Edu 5490 benefitRelinquishment should show errors when required fields are empty" name="Edu 5490 benefitRelinquishment should show errors when required fields are empty" time="0.026">
    </testcase>
    <testcase classname="Edu 5490 benefitRelinquishment should show no errors when all required fields are filled" name="Edu 5490 benefitRelinquishment should show no errors when all required fields are filled" time="0.054">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need veteran information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:33" time="0.799" tests="4">
    <testcase classname="Pre-need veteran information should render" name="Pre-need veteran information should render" time="0.134">
    </testcase>
    <testcase classname="Pre-need veteran information should not submit empty form" name="Pre-need veteran information should not submit empty form" time="0.06">
    </testcase>
    <testcase classname="Pre-need veteran information should submit with required information" name="Pre-need veteran information should submit with required information" time="0.119">
    </testcase>
    <testcase classname="Pre-need veteran information should submit with all info" name="Pre-need veteran information should submit with all info" time="0.149">
    </testcase>
  </testsuite>
  <testsuite name="AsyncDisplayWidget" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:34" time="0.727" tests="11">
    <testcase classname="AsyncDisplayWidget should throw an error if ui:options are not present" name="AsyncDisplayWidget should throw an error if ui:options are not present" time="0.185">
    </testcase>
    <testcase classname="AsyncDisplayWidget should throw an error if viewComponent is not a React element" name="AsyncDisplayWidget should throw an error if viewComponent is not a React element" time="0.001">
    </testcase>
    <testcase classname="AsyncDisplayWidget should fire the callback provided" name="AsyncDisplayWidget should fire the callback provided" time="0.001">
    </testcase>
    <testcase classname="AsyncDisplayWidget should throw an error if callback does not return a promise" name="AsyncDisplayWidget should throw an error if callback does not return a promise" time="0.003">
    </testcase>
    <testcase classname="AsyncDisplayWidget should initially render a loading indicator" name="AsyncDisplayWidget should initially render a loading indicator" time="0.005">
    </testcase>
    <testcase classname="AsyncDisplayWidget should render a failure message if the callback promise is rejected" name="AsyncDisplayWidget should render a failure message if the callback promise is rejected" time="0.003">
    </testcase>
    <testcase classname="AsyncDisplayWidget should render a custom failure message" name="AsyncDisplayWidget should render a custom failure message" time="0.004">
    </testcase>
    <testcase classname="AsyncDisplayWidget should render a the viewComponent if the callback promise is resolved" name="AsyncDisplayWidget should render a the viewComponent if the callback promise is resolved" time="0.002">
    </testcase>
    <testcase classname="AsyncDisplayWidget should pass the callback return result to viewComponent" name="AsyncDisplayWidget should pass the callback return result to viewComponent" time="0.004">
    </testcase>
    <testcase classname="AsyncDisplayWidget should set the promise state and data when the promise resolves" name="AsyncDisplayWidget should set the promise state and data when the promise resolves" time="0.204">
    </testcase>
    <testcase classname="AsyncDisplayWidget should set the promise state to rejeted when the promise is rejected" name="AsyncDisplayWidget should set the promise state to rejeted when the promise is rejected" time="0.202">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 applicant address" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:33" time="0.812" tests="3">
    <testcase classname="VRE chapter 36 applicant address renders applicant address form" name="VRE chapter 36 applicant address renders applicant address form" time="0.168">
    </testcase>
    <testcase classname="VRE chapter 36 applicant address does not submit without required info" name="VRE chapter 36 applicant address does not submit without required info" time="0.109">
    </testcase>
    <testcase classname="VRE chapter 36 applicant address submits with required info" name="VRE chapter 36 applicant address submits with required info" time="0.214">
    </testcase>
  </testsuite>
  <testsuite name="Federal orders info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:34" time="0.784" tests="4">
    <testcase classname="Federal orders info should render" name="Federal orders info should render" time="0.102">
    </testcase>
    <testcase classname="Federal orders info should render activation fields" name="Federal orders info should render activation fields" time="0.053">
    </testcase>
    <testcase classname="Federal orders info should fail to submit when no data is filled out" name="Federal orders info should fail to submit when no data is filled out" time="0.042">
    </testcase>
    <testcase classname="Federal orders info should submit when data filled in" name="Federal orders info should submit when data filled in" time="0.248">
    </testcase>
  </testsuite>
  <testsuite name="Pensions contact information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:35" time="0.868" tests="3">
    <testcase classname="Pensions contact information should render" name="Pensions contact information should render" time="0.113">
    </testcase>
    <testcase classname="Pensions contact information should not submit empty form" name="Pensions contact information should not submit empty form" time="0.152">
    </testcase>
    <testcase classname="Pensions contact information should submit with valid data" name="Pensions contact information should submit with valid data" time="0.186">
    </testcase>
  </testsuite>
  <testsuite name="Child address page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:35" time="0.618" tests="4">
    <testcase classname="Child address page should render" name="Child address page should render" time="0.034">
    </testcase>
    <testcase classname="Child address page should render address fields" name="Child address page should render address fields" time="0.146">
    </testcase>
    <testcase classname="Child address page should show errors when required fields are empty" name="Child address page should show errors when required fields are empty" time="0.03">
    </testcase>
    <testcase classname="Child address page should submit with valid data" name="Child address page should submit with valid data" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Burials benefits selection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:35" time="0.491" tests="4">
    <testcase classname="Burials benefits selection should render" name="Burials benefits selection should render" time="0.03">
    </testcase>
    <testcase classname="Burials benefits selection should show errors when required fields are empty" name="Burials benefits selection should show errors when required fields are empty" time="0.03">
    </testcase>
    <testcase classname="Burials benefits selection should show amount incurred text field" name="Burials benefits selection should show amount incurred text field" time="0.032">
    </testcase>
    <testcase classname="Burials benefits selection should submit when all required fields are filled in" name="Burials benefits selection should submit when all required fields are filled in" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="Burials document upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:36" time="0.429" tests="7">
    <testcase classname="Burials document upload should render" name="Burials document upload should render" time="0.02">
    </testcase>
    <testcase classname="Burials document upload should render death certificate field" name="Burials document upload should render death certificate field" time="0.014">
    </testcase>
    <testcase classname="Burials document upload should render receipts field" name="Burials document upload should render receipts field" time="0.012">
    </testcase>
    <testcase classname="Burials document upload should render DD214 warning if no tours of duty provided" name="Burials document upload should render DD214 warning if no tours of duty provided" time="0.013">
    </testcase>
    <testcase classname="Burials document upload should not render DD214 warning if tours of duty provided" name="Burials document upload should not render DD214 warning if tours of duty provided" time="0.01">
    </testcase>
    <testcase classname="Burials document upload should not submit empty form" name="Burials document upload should not submit empty form" time="0.024">
    </testcase>
    <testcase classname="Burials document upload should submit with valid data" name="Burials document upload should submit with valid data" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ reservesNationalGuardService" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:36" time="0.763" tests="4">
    <testcase classname="Disability benefits 526EZ reservesNationalGuardService renders reserves national guard service form" name="Disability benefits 526EZ reservesNationalGuardService renders reserves national guard service form" time="0.118">
    </testcase>
    <testcase classname="Disability benefits 526EZ reservesNationalGuardService requires title 10 dates when title 10 activation indicated" name="Disability benefits 526EZ reservesNationalGuardService requires title 10 dates when title 10 activation indicated" time="0.116">
    </testcase>
    <testcase classname="Disability benefits 526EZ reservesNationalGuardService does not submit without all required info" name="Disability benefits 526EZ reservesNationalGuardService does not submit without all required info" time="0.049">
    </testcase>
    <testcase classname="Disability benefits 526EZ reservesNationalGuardService does submit with all required info" name="Disability benefits 526EZ reservesNationalGuardService does submit with all required info" time="0.138">
    </testcase>
  </testsuite>
  <testsuite name="Burials veteran burial information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:36" time="0.747" tests="5">
    <testcase classname="Burials veteran burial information should render" name="Burials veteran burial information should render" time="0.048">
    </testcase>
    <testcase classname="Burials veteran burial information should show errors when required fields are empty" name="Burials veteran burial information should show errors when required fields are empty" time="0.047">
    </testcase>
    <testcase classname="Burials veteran burial information should show other text field" name="Burials veteran burial information should show other text field" time="0.083">
    </testcase>
    <testcase classname="Burials veteran burial information should submit when all required fields are filled in" name="Burials veteran burial information should submit when all required fields are filled in" time="0.177">
    </testcase>
    <testcase classname="Burials veteran burial information should show warning if death date was more than 2 years ago" name="Burials veteran burial information should show warning if death date was more than 2 years ago" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="781a record upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:37" time="0.559" tests="3">
    <testcase classname="781a record upload should render" name="781a record upload should render" time="0.122">
    </testcase>
    <testcase classname="781a record upload should not submit without required upload" name="781a record upload should not submit without required upload" time="0.023">
    </testcase>
    <testcase classname="781a record upload should submit with uploaded form" name="781a record upload should submit with uploaded form" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Pensions disability history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:37" time="0.818" tests="7">
    <testcase classname="Pensions disability history should render" name="Pensions disability history should render" time="0.062">
    </testcase>
    <testcase classname="Pensions disability history should show errors when required fields are empty" name="Pensions disability history should show errors when required fields are empty" time="0.058">
    </testcase>
    <testcase classname="Pensions disability history should add another disability" name="Pensions disability history should add another disability" time="0.127">
    </testcase>
    <testcase classname="Pensions disability history should submit with valid data" name="Pensions disability history should submit with valid data" time="0.112">
    </testcase>
    <testcase classname="Pensions disability history should add another vamc" name="Pensions disability history should add another vamc" time="0.1">
    </testcase>
    <testcase classname="Pensions disability history depends should return true if under 65" name="Pensions disability history depends should return true if under 65" time="0.003">
    </testcase>
    <testcase classname="Pensions disability history depends should return false if 65" name="Pensions disability history depends should return false if 65" time="0">
    </testcase>
  </testsuite>
  <testsuite name="781a Incident Date" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:37" time="0.722" tests="3">
    <testcase classname="781a Incident Date should render" name="781a Incident Date should render" time="0.199">
    </testcase>
    <testcase classname="781a Incident Date should fill in incident date" name="781a Incident Date should fill in incident date" time="0.103">
    </testcase>
    <testcase classname="781a Incident Date should allow submission if no incident date submitted" name="781a Incident Date should allow submission if no incident date submitted" time="0.033">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5495 sponsorInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:38" time="0.548" tests="3">
    <testcase classname="Edu 5495 sponsorInformation should render" name="Edu 5495 sponsorInformation should render" time="0.056">
    </testcase>
    <testcase classname="Edu 5495 sponsorInformation should show errors when required fields are empty" name="Edu 5495 sponsorInformation should show errors when required fields are empty" time="0.06">
    </testcase>
    <testcase classname="Edu 5495 sponsorInformation should not allow ssn that matches relative ssn" name="Edu 5495 sponsorInformation should not allow ssn that matches relative ssn" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="New disabilities follow up info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:38" time="0.822" tests="7">
    <testcase classname="New disabilities follow up info should render" name="New disabilities follow up info should render" time="0.101">
    </testcase>
    <testcase classname="New disabilities follow up info should render NEW disability follow up questions" name="New disabilities follow up info should render NEW disability follow up questions" time="0.08">
    </testcase>
    <testcase classname="New disabilities follow up info should render SECONDARY disability follow up questions" name="New disabilities follow up info should render SECONDARY disability follow up questions" time="0.052">
    </testcase>
    <testcase classname="New disabilities follow up info should render WORSENED disability followup questions" name="New disabilities follow up info should render WORSENED disability followup questions" time="0.059">
    </testcase>
    <testcase classname="New disabilities follow up info should render VA mistreatment disability followup questions" name="New disabilities follow up info should render VA mistreatment disability followup questions" time="0.051">
    </testcase>
    <testcase classname="New disabilities follow up info should not submit when data not filled in" name="New disabilities follow up info should not submit when data not filled in" time="0.025">
    </testcase>
    <testcase classname="New disabilities follow up info should submit when data filled in" name="New disabilities follow up info should submit when data filled in" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="781 Incident Date" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:38" time="0.717" tests="4">
    <testcase classname="781 Incident Date should render" name="781 Incident Date should render" time="0.117">
    </testcase>
    <testcase classname="781 Incident Date should fill in incident date" name="781 Incident Date should fill in incident date" time="0.079">
    </testcase>
    <testcase classname="781 Incident Date should allow parttially filled in incident date" name="781 Incident Date should allow parttially filled in incident date" time="0.088">
    </testcase>
    <testcase classname="781 Incident Date should allow submission if no incident date submitted" name="781 Incident Date should allow submission if no incident date submitted" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990e educationHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:39" time="0.562" tests="2">
    <testcase classname="Edu 1990e educationHistory should render" name="Edu 1990e educationHistory should render" time="0.121">
    </testcase>
    <testcase classname="Edu 1990e educationHistory should have no required inputs" name="Edu 1990e educationHistory should have no required inputs" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="Pensions dependent list" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:39" time="0.716" tests="6">
    <testcase classname="Pensions dependent list should render" name="Pensions dependent list should render" time="0.022">
    </testcase>
    <testcase classname="Pensions dependent list should render dependent list" name="Pensions dependent list should render dependent list" time="0.074">
    </testcase>
    <testcase classname="Pensions dependent list should show errors when required fields are empty" name="Pensions dependent list should show errors when required fields are empty" time="0.017">
    </testcase>
    <testcase classname="Pensions dependent list should show errors when required fields are empty and has dependents" name="Pensions dependent list should show errors when required fields are empty and has dependents" time="0.086">
    </testcase>
    <testcase classname="Pensions dependent list should add another dependent" name="Pensions dependent list should add another dependent" time="0.164">
    </testcase>
    <testcase classname="Pensions dependent list should submit with valid data" name="Pensions dependent list should submit with valid data" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="feedback tool applicant info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:40" time="0.747" tests="3">
    <testcase classname="feedback tool applicant info should render" name="feedback tool applicant info should render" time="0.127">
    </testcase>
    <testcase classname="feedback tool applicant info should not submit without required information" name="feedback tool applicant info should not submit without required information" time="0.094">
    </testcase>
    <testcase classname="feedback tool applicant info should submit with required information" name="feedback tool applicant info should submit with required information" time="0.177">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 benefitsRelinquishment" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:40" time="0.703" tests="5">
    <testcase classname="Edu 1990 benefitsRelinquishment should render" name="Edu 1990 benefitsRelinquishment should render" time="0.042">
    </testcase>
    <testcase classname="Edu 1990 benefitsRelinquishment should require benefitsRelinquished" name="Edu 1990 benefitsRelinquishment should require benefitsRelinquished" time="0.059">
    </testcase>
    <testcase classname="Edu 1990 benefitsRelinquishment should show nested content" name="Edu 1990 benefitsRelinquishment should show nested content" time="0.055">
    </testcase>
    <testcase classname="Edu 1990 benefitsRelinquishment should require benefitsRelinquishedDate" name="Edu 1990 benefitsRelinquishment should require benefitsRelinquishedDate" time="0.095">
    </testcase>
    <testcase classname="Edu 1990 benefitsRelinquishment should submit with benefitsRelinquishedDate" name="Edu 1990 benefitsRelinquishment should submit with benefitsRelinquishedDate" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need sponsor military name" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:41" time="0.654" tests="5">
    <testcase classname="Pre-need sponsor military name should render" name="Pre-need sponsor military name should render" time="0.094">
    </testcase>
    <testcase classname="Pre-need sponsor military name should not submit empty form" name="Pre-need sponsor military name should not submit empty form" time="0.031">
    </testcase>
    <testcase classname="Pre-need sponsor military name should submit with required fields filled in" name="Pre-need sponsor military name should submit with required fields filled in" time="0.032">
    </testcase>
    <testcase classname="Pre-need sponsor military name should reveal name fields" name="Pre-need sponsor military name should reveal name fields" time="0.048">
    </testcase>
    <testcase classname="Pre-need sponsor military name should submit with all info filled in" name="Pre-need sponsor military name should submit with all info filled in" time="0.139">
    </testcase>
  </testsuite>
  <testsuite name="781 Unit Assignment Details" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:40" time="0.764" tests="3">
    <testcase classname="781 Unit Assignment Details should render" name="781 Unit Assignment Details should render" time="0.129">
    </testcase>
    <testcase classname="781 Unit Assignment Details should fill in unit assignment details" name="781 Unit Assignment Details should fill in unit assignment details" time="0.199">
    </testcase>
    <testcase classname="781 Unit Assignment Details should allow submission if no assigned unit details are submitted" name="781 Unit Assignment Details should allow submission if no assigned unit details are submitted" time="0.043">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 applicant information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:41" time="0.763" tests="5">
    <testcase classname="VRE chapter 36 applicant information should render" name="VRE chapter 36 applicant information should render" time="0.105">
    </testcase>
    <testcase classname="VRE chapter 36 applicant information should render applicant fields" name="VRE chapter 36 applicant information should render applicant fields" time="0.052">
    </testcase>
    <testcase classname="VRE chapter 36 applicant information should not submit without required info" name="VRE chapter 36 applicant information should not submit without required info" time="0.018">
    </testcase>
    <testcase classname="VRE chapter 36 applicant information should not submit without required applicant info" name="VRE chapter 36 applicant information should not submit without required applicant info" time="0.097">
    </testcase>
    <testcase classname="VRE chapter 36 applicant information should submit with required info filled in" name="VRE chapter 36 applicant information should submit with required info filled in" time="0.107">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1995 applicantInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:42" time="0.558" tests="3">
    <testcase classname="Edu 1995 applicantInformation should render" name="Edu 1995 applicantInformation should render" time="0.048">
    </testcase>
    <testcase classname="Edu 1995 applicantInformation should conditionally require SSN or file number" name="Edu 1995 applicantInformation should conditionally require SSN or file number" time="0.083">
    </testcase>
    <testcase classname="Edu 1995 applicantInformation should submit with no errors with all required fields filled in" name="Edu 1995 applicantInformation should submit with no errors with all required fields filled in" time="0.092">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SchoolSelectField&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:42" time="1.146" tests="13">
    <testcase classname="&lt;SchoolSelectField&gt; should render initial search view" name="&lt;SchoolSelectField&gt; should render initial search view" time="0.2">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should render institution results view" name="&lt;SchoolSelectField&gt; should render institution results view" time="0.031">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should only render available institution information" name="&lt;SchoolSelectField&gt; should only render available institution information" time="0.016">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should render institutions loading view" name="&lt;SchoolSelectField&gt; should render institutions loading view" time="0.032">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should render pagination loading view" name="&lt;SchoolSelectField&gt; should render pagination loading view" time="0.012">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should render an error view" name="&lt;SchoolSelectField&gt; should render an error view" time="0.007">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should render no results or loading views when showSearchResults is false" name="&lt;SchoolSelectField&gt; should render no results or loading views when showSearchResults is false" time="0.012">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should call onChange props on when manual entry is toggled" name="&lt;SchoolSelectField&gt; should call onChange props on when manual entry is toggled" time="0.009">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should call searchInputChange prop on input change" name="&lt;SchoolSelectField&gt; should call searchInputChange prop on input change" time="0.008">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should call searchSchools and onChange props when search button clicked" name="&lt;SchoolSelectField&gt; should call searchSchools and onChange props when search button clicked" time="0.634">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; handleOptionClick should call `selectInstitution` and `onChange` props properly when domestic institution selected" name="&lt;SchoolSelectField&gt; handleOptionClick should call `selectInstitution` and `onChange` props properly when domestic institution selected" time="0.039">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; handleOptionClick should call `selectInstitution` and `onChange` props properly when non-domestic institution selected" name="&lt;SchoolSelectField&gt; handleOptionClick should call `selectInstitution` and `onChange` props properly when non-domestic institution selected" time="0.02">
    </testcase>
    <testcase classname="&lt;SchoolSelectField&gt; should call onChange and clearSearch props when start over is clicked" name="&lt;SchoolSelectField&gt; should call onChange and clearSearch props when start over is clicked" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="526 All Claims Private medical records" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:42" time="0.863" tests="7">
    <testcase classname="526 All Claims Private medical records should render" name="526 All Claims Private medical records should render" time="0.135">
    </testcase>
    <testcase classname="526 All Claims Private medical records should not expand the upload button by default" name="526 All Claims Private medical records should not expand the upload button by default" time="0.023">
    </testcase>
    <testcase classname="526 All Claims Private medical records should expand upload when &quot;yes&quot; option selected" name="526 All Claims Private medical records should expand upload when &quot;yes&quot; option selected" time="0.04">
    </testcase>
    <testcase classname="526 All Claims Private medical records should submit when user selects &quot;no&quot; to upload" name="526 All Claims Private medical records should submit when user selects &quot;no&quot; to upload" time="0.046">
    </testcase>
    <testcase classname="526 All Claims Private medical records should not submit without an upload if one indicated" name="526 All Claims Private medical records should not submit without an upload if one indicated" time="0.046">
    </testcase>
    <testcase classname="526 All Claims Private medical records should not submit without additional upload info" name="526 All Claims Private medical records should not submit without additional upload info" time="0.068">
    </testcase>
    <testcase classname="526 All Claims Private medical records should submit with all required info" name="526 All Claims Private medical records should submit with all required info" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="Burial military history previous names" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:43" time="0.891" tests="6">
    <testcase classname="Burial military history previous names should render" name="Burial military history previous names should render" time="0.026">
    </testcase>
    <testcase classname="Burial military history previous names should submit an empty completed form" name="Burial military history previous names should submit an empty completed form" time="0.025">
    </testcase>
    <testcase classname="Burial military history previous names should not submit a partially completed form" name="Burial military history previous names should not submit a partially completed form" time="0.093">
    </testcase>
    <testcase classname="Burial military history previous names should reveal name fields" name="Burial military history previous names should reveal name fields" time="0.058">
    </testcase>
    <testcase classname="Burial military history previous names should add another name" name="Burial military history previous names should add another name" time="0.115">
    </testcase>
    <testcase classname="Burial military history previous names should submit with valid data" name="Burial military history previous names should submit with valid data" time="0.095">
    </testcase>
  </testsuite>
  <testsuite name="Hospitalization Interview Questions" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:43" time="0.694" tests="2">
    <testcase classname="Hospitalization Interview Questions should render hospital info form" name="Hospitalization Interview Questions should render hospital info form" time="0.161">
    </testcase>
    <testcase classname="Hospitalization Interview Questions should add a hospital" name="Hospitalization Interview Questions should add a hospital" time="0.097">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1995 benefitSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:44" time="0.415" tests="2">
    <testcase classname="Edu 1995 benefitSelection should render" name="Edu 1995 benefitSelection should render" time="0.027">
    </testcase>
    <testcase classname="Edu 1995 benefitSelection should have no required inputs" name="Edu 1995 benefitSelection should have no required inputs" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Separation or Training Pay" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:44" time="0.629" tests="5">
    <testcase classname="Separation or Training Pay should render" name="Separation or Training Pay should render" time="0.102">
    </testcase>
    <testcase classname="Separation or Training Pay should fail to submit if no answers provided" name="Separation or Training Pay should fail to submit if no answers provided" time="0.045">
    </testcase>
    <testcase classname="Separation or Training Pay should submit if both questions answered with a no" name="Separation or Training Pay should submit if both questions answered with a no" time="0.021">
    </testcase>
    <testcase classname="Separation or Training Pay should not submit if both answers are Yes but no other info provided" name="Separation or Training Pay should not submit if both answers are Yes but no other info provided" time="0.044">
    </testcase>
    <testcase classname="Separation or Training Pay should expand more questions when answers are Yes" name="Separation or Training Pay should expand more questions when answers are Yes" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="claimant information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:44" time="0.63" tests="3">
    <testcase classname="claimant information should render" name="claimant information should render" time="0.121">
    </testcase>
    <testcase classname="claimant information should not submit without required info" name="claimant information should not submit without required info" time="0.069">
    </testcase>
    <testcase classname="claimant information should continue with all info filled in" name="claimant information should continue with all info filled in" time="0.078">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 31 education information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:44" time="0.75" tests="4">
    <testcase classname="VRE chapter 31 education information renders education info" name="VRE chapter 31 education information renders education info" time="0.111">
    </testcase>
    <testcase classname="VRE chapter 31 education information does not submit without required info" name="VRE chapter 31 education information does not submit without required info" time="0.054">
    </testcase>
    <testcase classname="VRE chapter 31 education information submits with required info" name="VRE chapter 31 education information submits with required info" time="0.048">
    </testcase>
    <testcase classname="VRE chapter 31 education information submits with programs filled out" name="VRE chapter 31 education information submits with programs filled out" time="0.211">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1995 servicePeriods" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:45" time="0.498" tests="4">
    <testcase classname="Edu 1995 servicePeriods should render" name="Edu 1995 servicePeriods should render" time="0.021">
    </testcase>
    <testcase classname="Edu 1995 servicePeriods should render service fields" name="Edu 1995 servicePeriods should render service fields" time="0.07">
    </testcase>
    <testcase classname="Edu 1995 servicePeriods should render service period view" name="Edu 1995 servicePeriods should render service period view" time="0.053">
    </testcase>
    <testcase classname="Edu 1995 servicePeriods should have no required inputs" name="Edu 1995 servicePeriods should have no required inputs" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="feedback tool benefits info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:45" time="0.659" tests="3">
    <testcase classname="feedback tool benefits info should render" name="feedback tool benefits info should render" time="0.129">
    </testcase>
    <testcase classname="feedback tool benefits info should not submit without required information" name="feedback tool benefits info should not submit without required information" time="0.068">
    </testcase>
    <testcase classname="feedback tool benefits info should submit with required information" name="feedback tool benefits info should submit with required information" time="0.103">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 applicant additional information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:46" time="0.665" tests="4">
    <testcase classname="VRE chapter 36 applicant additional information renders Veteran view" name="VRE chapter 36 applicant additional information renders Veteran view" time="0.135">
    </testcase>
    <testcase classname="VRE chapter 36 applicant additional information renders spouse view" name="VRE chapter 36 applicant additional information renders spouse view" time="0.073">
    </testcase>
    <testcase classname="VRE chapter 36 applicant additional information renders surviving spouse view" name="VRE chapter 36 applicant additional information renders surviving spouse view" time="0.085">
    </testcase>
    <testcase classname="VRE chapter 36 applicant additional information submits without info" name="VRE chapter 36 applicant additional information submits without info" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 secondaryContact" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:46" time="0.712" tests="3">
    <testcase classname="Edu 1990 secondaryContact should render" name="Edu 1990 secondaryContact should render" time="0.117">
    </testcase>
    <testcase classname="Edu 1990 secondaryContact should hide address fields when address is shared" name="Edu 1990 secondaryContact should hide address fields when address is shared" time="0.115">
    </testcase>
    <testcase classname="Edu 1990 secondaryContact should submit without information" name="Edu 1990 secondaryContact should submit without information" time="0.129">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 educationHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:46" time="0.64" tests="6">
    <testcase classname="Edu 5490 educationHistory should render" name="Edu 5490 educationHistory should render" time="0.039">
    </testcase>
    <testcase classname="Edu 5490 educationHistory should render diploma date" name="Edu 5490 educationHistory should render diploma date" time="0.035">
    </testcase>
    <testcase classname="Edu 5490 educationHistory should render high school questions" name="Edu 5490 educationHistory should render high school questions" time="0.083">
    </testcase>
    <testcase classname="Edu 5490 educationHistory should have no required inputs" name="Edu 5490 educationHistory should have no required inputs" time="0.024">
    </testcase>
    <testcase classname="Edu 5490 educationHistory should render post high school trainings" name="Edu 5490 educationHistory should render post high school trainings" time="0.063">
    </testcase>
    <testcase classname="Edu 5490 educationHistory should render diploma date and not post high school trainings" name="Edu 5490 educationHistory should render diploma date and not post high school trainings" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Add new disabilities" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:46" time="0.695" tests="3">
    <testcase classname="Add new disabilities should render" name="Add new disabilities should render" time="0.155">
    </testcase>
    <testcase classname="Add new disabilities should add another disability" name="Add new disabilities should add another disability" time="0.095">
    </testcase>
    <testcase classname="Add new disabilities should submit when data filled in" name="Add new disabilities should submit when data filled in" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="Pensions general military history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:47" time="0.836" tests="6">
    <testcase classname="Pensions general military history should render" name="Pensions general military history should render" time="0.036">
    </testcase>
    <testcase classname="Pensions general military history should not submit empty form" name="Pensions general military history should not submit empty form" time="0.04">
    </testcase>
    <testcase classname="Pensions general military history should reveal name fields" name="Pensions general military history should reveal name fields" time="0.125">
    </testcase>
    <testcase classname="Pensions general military history should add another name" name="Pensions general military history should add another name" time="0.139">
    </testcase>
    <testcase classname="Pensions general military history should require combat after 9/11 question" name="Pensions general military history should require combat after 9/11 question" time="0.041">
    </testcase>
    <testcase classname="Pensions general military history should submit with valid data" name="Pensions general military history should submit with valid data" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Reserve information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:47" time="0.811" tests="3">
    <testcase classname="Reserve information should render" name="Reserve information should render" time="0.134">
    </testcase>
    <testcase classname="Reserve information should fail to submit when no data is filled out" name="Reserve information should fail to submit when no data is filled out" time="0.053">
    </testcase>
    <testcase classname="Reserve information should submit when data filled in" name="Reserve information should submit when data filled in" time="0.162">
    </testcase>
  </testsuite>
  <testsuite name="authorization for representative access to records" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:48" time="0.426" tests="2">
    <testcase classname="authorization for representative access to records should render" name="authorization for representative access to records should render" time="0.084">
    </testcase>
    <testcase classname="authorization for representative access to records should continue without any check boxes filled in" name="authorization for representative access to records should continue without any check boxes filled in" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ special circumstances" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:48" time="0.778" tests="7">
    <testcase classname="Disability benefits 526EZ special circumstances renders special circumstances form" name="Disability benefits 526EZ special circumstances renders special circumstances form" time="0.096">
    </testcase>
    <testcase classname="Disability benefits 526EZ special circumstances should not submit form without required fields" name="Disability benefits 526EZ special circumstances should not submit form without required fields" time="0.047">
    </testcase>
    <testcase classname="Disability benefits 526EZ special circumstances should submit form when veteran indicates not homeless" name="Disability benefits 526EZ special circumstances should submit form when veteran indicates not homeless" time="0.023">
    </testcase>
    <testcase classname="Disability benefits 526EZ special circumstances should not submit form when veteran indicates they are homeless but have no POC" name="Disability benefits 526EZ special circumstances should not submit form when veteran indicates they are homeless but have no POC" time="0.04">
    </testcase>
    <testcase classname="Disability benefits 526EZ special circumstances should not submit form when veteran indicates only POC name" name="Disability benefits 526EZ special circumstances should not submit form when veteran indicates only POC name" time="0.035">
    </testcase>
    <testcase classname="Disability benefits 526EZ special circumstances should not submit form when veteran indicates only POC phone" name="Disability benefits 526EZ special circumstances should not submit form when veteran indicates only POC phone" time="0.049">
    </testcase>
    <testcase classname="Disability benefits 526EZ special circumstances should submit form when veteran indicates all required POC info" name="Disability benefits 526EZ special circumstances should submit form when veteran indicates all required POC info" time="0.052">
    </testcase>
  </testsuite>
  <testsuite name="526EZ record upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:48" time="0.536" tests="4">
    <testcase classname="526EZ record upload should render" name="526EZ record upload should render" time="0.108">
    </testcase>
    <testcase classname="526EZ record upload should not submit without an upload" name="526EZ record upload should not submit without an upload" time="0.022">
    </testcase>
    <testcase classname="526EZ record upload should not submit without required info" name="526EZ record upload should not submit without required info" time="0.049">
    </testcase>
    <testcase classname="526EZ record upload should submit with valid data" name="526EZ record upload should submit with valid data" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="Physical Changes 781a" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:48" time="0.576" tests="2">
    <testcase classname="Physical Changes 781a should render" name="Physical Changes 781a should render" time="0.128">
    </testcase>
    <testcase classname="Physical Changes 781a should submit if no options selected" name="Physical Changes 781a should submit if no options selected" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 directDeposit" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:49" time="0.479" tests="2">
    <testcase classname="Edu 1990 directDeposit should render" name="Edu 1990 directDeposit should render" time="0.028">
    </testcase>
    <testcase classname="Edu 1990 directDeposit should submit form without information" name="Edu 1990 directDeposit should submit form without information" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Hca vaBenefits" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:49" time="0.496" tests="3">
    <testcase classname="Hca vaBenefits should render" name="Hca vaBenefits should render" time="0.021">
    </testcase>
    <testcase classname="Hca vaBenefits should not submit empty form" name="Hca vaBenefits should not submit empty form" time="0.028">
    </testcase>
    <testcase classname="Hca vaBenefits should submit with valid data" name="Hca vaBenefits should submit with valid data" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="Hca annual income" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:49" time="0.662" tests="4">
    <testcase classname="Hca annual income should render without spouse information" name="Hca annual income should render without spouse information" time="0.042">
    </testcase>
    <testcase classname="Hca annual income should render with spouse information" name="Hca annual income should render with spouse information" time="0.034">
    </testcase>
    <testcase classname="Hca annual income should render with children information" name="Hca annual income should render with children information" time="0.046">
    </testcase>
    <testcase classname="Hca annual income should not submit an empty form" name="Hca annual income should not submit an empty form" time="0.142">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 schoolSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:50" time="0.662" tests="4">
    <testcase classname="Edu 1990 schoolSelection should render" name="Edu 1990 schoolSelection should render" time="0.062">
    </testcase>
    <testcase classname="Edu 1990 schoolSelection should have 1 required input" name="Edu 1990 schoolSelection should have 1 required input" time="0.052">
    </testcase>
    <testcase classname="Edu 1990 schoolSelection should reveal address" name="Edu 1990 schoolSelection should reveal address" time="0.126">
    </testcase>
    <testcase classname="Edu 1990 schoolSelection should hide non va assistance question" name="Edu 1990 schoolSelection should hide non va assistance question" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Burials veteran information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:50" time="0.713" tests="4">
    <testcase classname="Burials veteran information should render" name="Burials veteran information should render" time="0.07">
    </testcase>
    <testcase classname="Burials veteran information should show errors when required fields are empty" name="Burials veteran information should show errors when required fields are empty" time="0.104">
    </testcase>
    <testcase classname="Burials veteran information should require one of ssn or file number" name="Burials veteran information should require one of ssn or file number" time="0.076">
    </testcase>
    <testcase classname="Burials veteran information should submit when all required fields are filled in" name="Burials veteran information should submit when all required fields are filled in" time="0.135">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 secondaryContact" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:50" time="0.615" tests="2">
    <testcase classname="Edu 5490 secondaryContact should render" name="Edu 5490 secondaryContact should render" time="0.127">
    </testcase>
    <testcase classname="Edu 5490 secondaryContact should hide address when checked" name="Edu 5490 secondaryContact should hide address when checked" time="0.116">
    </testcase>
  </testsuite>
  <testsuite name="526EZ document upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:51" time="0.627" tests="4">
    <testcase classname="526EZ document upload should render" name="526EZ document upload should render" time="0.11">
    </testcase>
    <testcase classname="526EZ document upload should not submit without an upload" name="526EZ document upload should not submit without an upload" time="0.023">
    </testcase>
    <testcase classname="526EZ document upload should not submit without required info" name="526EZ document upload should not submit without required info" time="0.037">
    </testcase>
    <testcase classname="526EZ document upload should submit with valid data" name="526EZ document upload should submit with valid data" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 applicantInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:51" time="0.764" tests="3">
    <testcase classname="Edu 1990 applicantInformation should render" name="Edu 1990 applicantInformation should render" time="0.081">
    </testcase>
    <testcase classname="Edu 1990 applicantInformation should not submit form without information" name="Edu 1990 applicantInformation should not submit form without information" time="0.091">
    </testcase>
    <testcase classname="Edu 1990 applicantInformation should only allow ages &gt;= 17 years" name="Edu 1990 applicantInformation should only allow ages &gt;= 17 years" time="0.239">
    </testcase>
  </testsuite>
  <testsuite name="526 helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:51" time="0.642" tests="62">
    <testcase classname="526 helpers hasGuardOrReservePeriod should return true when reserve period present" name="526 helpers hasGuardOrReservePeriod should return true when reserve period present" time="0.005">
    </testcase>
    <testcase classname="526 helpers hasGuardOrReservePeriod should return true when national guard period present" name="526 helpers hasGuardOrReservePeriod should return true when national guard period present" time="0">
    </testcase>
    <testcase classname="526 helpers hasGuardOrReservePeriod should return false when no reserves or guard period present" name="526 helpers hasGuardOrReservePeriod should return false when no reserves or guard period present" time="0">
    </testcase>
    <testcase classname="526 helpers hasGuardOrReservePeriod should return false when no service history present" name="526 helpers hasGuardOrReservePeriod should return false when no service history present" time="0.001">
    </testcase>
    <testcase classname="526 helpers reservesGuardDescription should pick the most recent service branch" name="526 helpers reservesGuardDescription should pick the most recent service branch" time="0.165">
    </testcase>
    <testcase classname="526 helpers reservesGuardDescription should return null when no service periods present" name="526 helpers reservesGuardDescription should return null when no service periods present" time="0">
    </testcase>
    <testcase classname="526 helpers isInFuture adds an error when entered date is today or earlier" name="526 helpers isInFuture adds an error when entered date is today or earlier" time="0.002">
    </testcase>
    <testcase classname="526 helpers isInFuture does not add an error when the entered date is in the future" name="526 helpers isInFuture does not add an error when the entered date is in the future" time="0">
    </testcase>
    <testcase classname="526 helpers getDisabilityName should return string with each word capitalized when name supplied" name="526 helpers getDisabilityName should return string with each word capitalized when name supplied" time="0">
    </testcase>
    <testcase classname="526 helpers getDisabilityName should return Unknown Condition with undefined name" name="526 helpers getDisabilityName should return Unknown Condition with undefined name" time="0.002">
    </testcase>
    <testcase classname="526 helpers getDisabilityName should return Unknown Condition when input is empty string" name="526 helpers getDisabilityName should return Unknown Condition when input is empty string" time="0">
    </testcase>
    <testcase classname="526 helpers getDisabilityName should return Unknown Condition when name is not a string" name="526 helpers getDisabilityName should return Unknown Condition when name is not a string" time="0">
    </testcase>
    <testcase classname="526 helpers transformDisabilities should create a list of disabilities with disabilityActionType set to INCREASE" name="526 helpers transformDisabilities should create a list of disabilities with disabilityActionType set to INCREASE" time="0.004">
    </testcase>
    <testcase classname="526 helpers transformDisabilities should return an empty array when given undefined input" name="526 helpers transformDisabilities should return an empty array when given undefined input" time="0">
    </testcase>
    <testcase classname="526 helpers transformDisabilities should remove ineligible disabilities" name="526 helpers transformDisabilities should remove ineligible disabilities" time="0.001">
    </testcase>
    <testcase classname="526 helpers queryForFacilities should not call the api if the input length is &lt; 3" name="526 helpers queryForFacilities should not call the api if the input length is &lt; 3" time="0.001">
    </testcase>
    <testcase classname="526 helpers queryForFacilities should call the api if the input length is &gt;= 3" name="526 helpers queryForFacilities should call the api if the input length is &gt;= 3" time="0.049">
    </testcase>
    <testcase classname="526 helpers queryForFacilities should call the api with the input" name="526 helpers queryForFacilities should call the api with the input" time="0.002">
    </testcase>
    <testcase classname="526 helpers queryForFacilities should return the mapped data for autosuggest if successful" name="526 helpers queryForFacilities should return the mapped data for autosuggest if successful" time="0.001">
    </testcase>
    <testcase classname="526 helpers queryForFacilities should return an empty array if unsuccessful" name="526 helpers queryForFacilities should return an empty array if unsuccessful" time="0.002">
    </testcase>
    <testcase classname="526 helpers hasotherEvidence should return false if additional evidence type is not selected" name="526 helpers hasotherEvidence should return false if additional evidence type is not selected" time="0.001">
    </testcase>
    <testcase classname="526 helpers hasotherEvidence should return true if additional evidence type is selected" name="526 helpers hasotherEvidence should return true if additional evidence type is selected" time="0.001">
    </testcase>
    <testcase classname="526 helpers fieldsHaveInput should return false when empty array given" name="526 helpers fieldsHaveInput should return false when empty array given" time="0">
    </testcase>
    <testcase classname="526 helpers fieldsHaveInput should return false when empty formData given" name="526 helpers fieldsHaveInput should return false when empty formData given" time="0.001">
    </testcase>
    <testcase classname="526 helpers fieldsHaveInput should return false property does not exist" name="526 helpers fieldsHaveInput should return false property does not exist" time="0.001">
    </testcase>
    <testcase classname="526 helpers fieldsHaveInput should return false when property is empty" name="526 helpers fieldsHaveInput should return false when property is empty" time="0.001">
    </testcase>
    <testcase classname="526 helpers fieldsHaveInput should return true when property is not empty" name="526 helpers fieldsHaveInput should return true when property is not empty" time="0">
    </testcase>
    <testcase classname="526 helpers fieldsHaveInput should return true when some properties empty and some not" name="526 helpers fieldsHaveInput should return true when some properties empty and some not" time="0">
    </testcase>
    <testcase classname="526 helpers servedAfter911 should return false if no serviceInformation" name="526 helpers servedAfter911 should return false if no serviceInformation" time="0.001">
    </testcase>
    <testcase classname="526 helpers servedAfter911 should return false if no servicePeriods" name="526 helpers servedAfter911 should return false if no servicePeriods" time="0">
    </testcase>
    <testcase classname="526 helpers servedAfter911 should return false if no dateRange" name="526 helpers servedAfter911 should return false if no dateRange" time="0">
    </testcase>
    <testcase classname="526 helpers servedAfter911 should return false if no `to` date" name="526 helpers servedAfter911 should return false if no `to` date" time="0.001">
    </testcase>
    <testcase classname="526 helpers servedAfter911 should return false if `to` date is on or before 9/11/01" name="526 helpers servedAfter911 should return false if `to` date is on or before 9/11/01" time="0">
    </testcase>
    <testcase classname="526 helpers servedAfter911 should return true if `to` date is after 9/11/01" name="526 helpers servedAfter911 should return true if `to` date is after 9/11/01" time="0">
    </testcase>
    <testcase classname="526 helpers servedAfter911 should return true if any `to` date is after 9/11/01" name="526 helpers servedAfter911 should return true if any `to` date is after 9/11/01" time="0.001">
    </testcase>
    <testcase classname="526 helpers needsToEnter781 should return true if user has selected Combat PTSD types" name="526 helpers needsToEnter781 should return true if user has selected Combat PTSD types" time="0">
    </testcase>
    <testcase classname="526 helpers needsToEnter781 should return true if user has selected Non-combat PTSD types" name="526 helpers needsToEnter781 should return true if user has selected Non-combat PTSD types" time="0.001">
    </testcase>
    <testcase classname="526 helpers needsToEnter781 should return false if user has not selected Combat or Non-Combat PTSD types" name="526 helpers needsToEnter781 should return false if user has not selected Combat or Non-Combat PTSD types" time="0">
    </testcase>
    <testcase classname="526 helpers needsToEnter781a should return true if user has selected MST PTSD types" name="526 helpers needsToEnter781a should return true if user has selected MST PTSD types" time="0.001">
    </testcase>
    <testcase classname="526 helpers needsToEnter781a should return true if user has selected Assault PTSD types" name="526 helpers needsToEnter781a should return true if user has selected Assault PTSD types" time="0">
    </testcase>
    <testcase classname="526 helpers needsToEnter781a should return false if user has not selected Assault or MST PTSD types" name="526 helpers needsToEnter781a should return false if user has not selected Assault or MST PTSD types" time="0">
    </testcase>
    <testcase classname="526 helpers isUploading781Form should return true if user has chosen to upload 781" name="526 helpers isUploading781Form should return true if user has chosen to upload 781" time="0.001">
    </testcase>
    <testcase classname="526 helpers isUploading781Form should return false if user has not chosen to upload 781" name="526 helpers isUploading781Form should return false if user has not chosen to upload 781" time="0">
    </testcase>
    <testcase classname="526 helpers isUploading781aForm should return true if user has chosen to upload 781a" name="526 helpers isUploading781aForm should return true if user has chosen to upload 781a" time="0.001">
    </testcase>
    <testcase classname="526 helpers isUploading781aForm should return false if user has not chosen to upload 781a" name="526 helpers isUploading781aForm should return false if user has not chosen to upload 781a" time="0">
    </testcase>
    <testcase classname="526 helpers transformRelatedDisabilities should return an array of strings" name="526 helpers transformRelatedDisabilities should return an array of strings" time="0.001">
    </testcase>
    <testcase classname="526 helpers transformRelatedDisabilities should not add conditions if they are not claimed" name="526 helpers transformRelatedDisabilities should not add conditions if they are not claimed" time="0">
    </testcase>
    <testcase classname="isAnsweringPtsdForm should return false if user has chosen to not answer questions" name="isAnsweringPtsdForm should return false if user has chosen to not answer questions" time="0">
    </testcase>
    <testcase classname="isAnswering781Questions should return true if user is answering first set of 781 incident questions" name="isAnswering781Questions should return true if user is answering first set of 781 incident questions" time="0.001">
    </testcase>
    <testcase classname="isAnswering781Questions should return true if user has chosen to answer questions for a 781 PTSD incident" name="isAnswering781Questions should return true if user has chosen to answer questions for a 781 PTSD incident" time="0.001">
    </testcase>
    <testcase classname="isAnswering781Questions should return false if user has chosen not to enter another incident" name="isAnswering781Questions should return false if user has chosen not to enter another incident" time="0">
    </testcase>
    <testcase classname="transformMVPData should omit the veteran property and spread its subproperties" name="transformMVPData should omit the veteran property and spread its subproperties" time="0.001">
    </testcase>
    <testcase classname="transformMVPData should nest service periods and reservesNationalGuardService under serviceInformation" name="transformMVPData should nest service periods and reservesNationalGuardService under serviceInformation" time="0">
    </testcase>
    <testcase classname="transformMVPData should handle no pre-filled information" name="transformMVPData should handle no pre-filled information" time="0.001">
    </testcase>
    <testcase classname="transform should transform minimal data correctly" name="transform should transform minimal data correctly" time="0.219">
    </testcase>
    <testcase classname="transform should transform maximal data correctly" name="transform should transform maximal data correctly" time="0.035">
    </testcase>
    <testcase classname="isAnswering781Questions should return true if user is answering first set of 781 incident questions" name="isAnswering781Questions should return true if user is answering first set of 781 incident questions" time="0">
    </testcase>
    <testcase classname="isAnswering781Questions should return true if user has chosen to answer questions for a 781 PTSD incident" name="isAnswering781Questions should return true if user has chosen to answer questions for a 781 PTSD incident" time="0">
    </testcase>
    <testcase classname="isAnswering781Questions should return false if user has chosen not to enter another incident" name="isAnswering781Questions should return false if user has chosen not to enter another incident" time="0.001">
    </testcase>
    <testcase classname="isAnswering781aQuestions should return true if user is answering first set of 781a incident questions" name="isAnswering781aQuestions should return true if user is answering first set of 781a incident questions" time="0.001">
    </testcase>
    <testcase classname="isAnswering781aQuestions should return true if user has chosen to answer questions for a 781a PTSD incident" name="isAnswering781aQuestions should return true if user has chosen to answer questions for a 781a PTSD incident" time="0">
    </testcase>
    <testcase classname="isAnswering781aQuestions should return false if user has chosen not to enter another incident" name="isAnswering781aQuestions should return false if user has chosen not to enter another incident" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealsV2TabNav/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:52" time="0.356" tests="2">
    <testcase classname="&lt;AppealsV2TabNav/&gt; should render" name="&lt;AppealsV2TabNav/&gt; should render" time="0.234">
    </testcase>
    <testcase classname="&lt;AppealsV2TabNav/&gt; should render 2 tabs: Status and Detail" name="&lt;AppealsV2TabNav/&gt; should render 2 tabs: Status and Detail" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="feedback tool applicant info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:52" time="0.732" tests="6">
    <testcase classname="feedback tool applicant info should render" name="feedback tool applicant info should render" time="0.13">
    </testcase>
    <testcase classname="feedback tool applicant info should not submit without required information" name="feedback tool applicant info should not submit without required information" time="0.047">
    </testcase>
    <testcase classname="feedback tool applicant info should submit with required information" name="feedback tool applicant info should submit with required information" time="0.047">
    </testcase>
    <testcase classname="feedback tool applicant info should render myself" name="feedback tool applicant info should render myself" time="0.031">
    </testcase>
    <testcase classname="feedback tool applicant info should render someone else" name="feedback tool applicant info should render someone else" time="0.041">
    </testcase>
    <testcase classname="feedback tool applicant info should render anonymous" name="feedback tool applicant info should render anonymous" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 schoolSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:52" time="0.651" tests="6">
    <testcase classname="Edu 5490 schoolSelection should render" name="Edu 5490 schoolSelection should render" time="0.064">
    </testcase>
    <testcase classname="Edu 5490 schoolSelection should have required inputs" name="Edu 5490 schoolSelection should have required inputs" time="0.078">
    </testcase>
    <testcase classname="Edu 1990n schoolSelection should render" name="Edu 1990n schoolSelection should render" time="0.02">
    </testcase>
    <testcase classname="Edu 1990n schoolSelection should have no required inputs" name="Edu 1990n schoolSelection should have no required inputs" time="0.047">
    </testcase>
    <testcase classname="Edu 1990e schoolSelection should render" name="Edu 1990e schoolSelection should render" time="0.025">
    </testcase>
    <testcase classname="Edu 1990e schoolSelection should have required inputs" name="Edu 1990e schoolSelection should have required inputs" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="Additional Changes 781a" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:53" time="0.52" tests="2">
    <testcase classname="Additional Changes 781a should render" name="Additional Changes 781a should render" time="0.1">
    </testcase>
    <testcase classname="Additional Changes 781a should submit if no options selected" name="Additional Changes 781a should submit if no options selected" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ evidence type" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:53" time="0.667" tests="3">
    <testcase classname="Disability benefits 526EZ evidence type renders evidence type form" name="Disability benefits 526EZ evidence type renders evidence type form" time="0.14">
    </testcase>
    <testcase classname="Disability benefits 526EZ evidence type should fill in evidence type information" name="Disability benefits 526EZ evidence type should fill in evidence type information" time="0.11">
    </testcase>
    <testcase classname="Disability benefits 526EZ evidence type should not allow submission if no evidence types selected" name="Disability benefits 526EZ evidence type should not allow submission if no evidence types selected" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="Burial military history service periods" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:53" time="0.57" tests="3">
    <testcase classname="Burial military history service periods should render" name="Burial military history service periods should render" time="0.085">
    </testcase>
    <testcase classname="Burial military history service periods should display DD214 notification" name="Burial military history service periods should display DD214 notification" time="0.035">
    </testcase>
    <testcase classname="Burial military history service periods should submit an empty completed form" name="Burial military history service periods should submit an empty completed form" time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="feedback tool issue info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:54" time="0.739" tests="3">
    <testcase classname="feedback tool issue info should render" name="feedback tool issue info should render" time="0.145">
    </testcase>
    <testcase classname="feedback tool issue info should not submit without required information" name="feedback tool issue info should not submit without required information" time="0.095">
    </testcase>
    <testcase classname="feedback tool issue info should submit with required information" name="feedback tool issue info should submit with required information" time="0.148">
    </testcase>
  </testsuite>
  <testsuite name="Child information page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:54" time="0.732" tests="6">
    <testcase classname="Child information page should render" name="Child information page should render" time="0.044">
    </testcase>
    <testcase classname="Child information page should show errors when required fields are empty" name="Child information page should show errors when required fields are empty" time="0.048">
    </testcase>
    <testcase classname="Child information page should not require ssn if noSSN is checked" name="Child information page should not require ssn if noSSN is checked" time="0.056">
    </testcase>
    <testcase classname="Child information page should submit with valid data" name="Child information page should submit with valid data" time="0.094">
    </testcase>
    <testcase classname="Child information page should ask if the child is in school" name="Child information page should ask if the child is in school" time="0.061">
    </testcase>
    <testcase classname="Child information page should ask if the child is disabled" name="Child information page should ask if the child is disabled" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="526EZ document upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:55" time="0.559" tests="4">
    <testcase classname="526EZ document upload should render" name="526EZ document upload should render" time="0.088">
    </testcase>
    <testcase classname="526EZ document upload should not submit without an upload" name="526EZ document upload should not submit without an upload" time="0.02">
    </testcase>
    <testcase classname="526EZ document upload should not submit without required info" name="526EZ document upload should not submit without required info" time="0.056">
    </testcase>
    <testcase classname="526EZ document upload should submit with valid data" name="526EZ document upload should submit with valid data" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5495 applicantInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:54" time="0.607" tests="3">
    <testcase classname="Edu 5495 applicantInformation should render" name="Edu 5495 applicantInformation should render" time="0.064">
    </testcase>
    <testcase classname="Edu 5495 applicantInformation should show errors when required fields are empty" name="Edu 5495 applicantInformation should show errors when required fields are empty" time="0.068">
    </testcase>
    <testcase classname="Edu 5495 applicantInformation should conditionally show file number" name="Edu 5495 applicantInformation should conditionally show file number" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ private record choice" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:55" time="0.535" tests="2">
    <testcase classname="Disability benefits 526EZ private record choice renders private record choice form" name="Disability benefits 526EZ private record choice renders private record choice form" time="0.14">
    </testcase>
    <testcase classname="Disability benefits 526EZ private record choice should fill in private record choice" name="Disability benefits 526EZ private record choice should fill in private record choice" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="0993 claimant information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:56" time="0.653" tests="4">
    <testcase classname="0993 claimant information should render" name="0993 claimant information should render" time="0.115">
    </testcase>
    <testcase classname="0993 claimant information should not submit empty form" name="0993 claimant information should not submit empty form" time="0.057">
    </testcase>
    <testcase classname="0993 claimant information should submit with no errors with all required fields filled in" name="0993 claimant information should submit with no errors with all required fields filled in" time="0.063">
    </testcase>
    <testcase classname="0993 claimant information should expand and require VA file number question if no SSN is available" name="0993 claimant information should expand and require VA file number question if no SSN is available" time="0.09">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 31 contact information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:56" time="0.578" tests="3">
    <testcase classname="VRE chapter 31 contact information renders contact information form" name="VRE chapter 31 contact information renders contact information form" time="0.101">
    </testcase>
    <testcase classname="VRE chapter 31 contact information submits with info" name="VRE chapter 31 contact information submits with info" time="0.079">
    </testcase>
    <testcase classname="VRE chapter 31 contact information does not submit with non matching email addresses" name="VRE chapter 31 contact information does not submit with non matching email addresses" time="0.067">
    </testcase>
  </testsuite>
  <testsuite name="Pensions Reserve and National Guard" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:56" time="0.595" tests="4">
    <testcase classname="Pensions Reserve and National Guard should render" name="Pensions Reserve and National Guard should render" time="0.026">
    </testcase>
    <testcase classname="Pensions Reserve and National Guard should not submit empty form" name="Pensions Reserve and National Guard should not submit empty form" time="0.044">
    </testcase>
    <testcase classname="Pensions Reserve and National Guard should reveal unit fields" name="Pensions Reserve and National Guard should reveal unit fields" time="0.133">
    </testcase>
    <testcase classname="Pensions Reserve and National Guard should submit with valid data" name="Pensions Reserve and National Guard should submit with valid data" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PhotoField&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:57" time="0.455" tests="17">
    <testcase classname="&lt;PhotoField&gt; should render" name="&lt;PhotoField&gt; should render" time="0.225">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should render cropper" name="&lt;PhotoField&gt; should render cropper" time="0.019">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should render uploading" name="&lt;PhotoField&gt; should render uploading" time="0.009">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should render preview while processing" name="&lt;PhotoField&gt; should render preview while processing" time="0.012">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; onChange should set error for too small image" name="&lt;PhotoField&gt; onChange should set error for too small image" time="0.006">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; onChange should set error for wrong type" name="&lt;PhotoField&gt; onChange should set error for wrong type" time="0.005">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; onChange should set currentLayout state to crop_photo with valid file" name="&lt;PhotoField&gt; onChange should set currentLayout state to crop_photo with valid file" time="0.003">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; screen reader path should set error for square image" name="&lt;PhotoField&gt; screen reader path should set error for square image" time="0.004">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; screen reader path should set error for too small image" name="&lt;PhotoField&gt; screen reader path should set error for too small image" time="0.005">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; screen reader path should set error for wrong type" name="&lt;PhotoField&gt; screen reader path should set error for wrong type" time="0.002">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; screen reader path should call uploadFile with valid image" name="&lt;PhotoField&gt; screen reader path should call uploadFile with valid image" time="0.003">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should render error" name="&lt;PhotoField&gt; should render error" time="0.006">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should render preview in review mode" name="&lt;PhotoField&gt; should render preview in review mode" time="0.004">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should upload photo" name="&lt;PhotoField&gt; should upload photo" time="0.004">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should revoke url on unmount" name="&lt;PhotoField&gt; should revoke url on unmount" time="0.002">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should recreate object url on blob change" name="&lt;PhotoField&gt; should recreate object url on blob change" time="0.004">
    </testcase>
    <testcase classname="&lt;PhotoField&gt; should reset file on preview view" name="&lt;PhotoField&gt; should reset file on preview view" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="781a choice screen" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:57" time="0.513" tests="1">
    <testcase classname="781a choice screen should submit without validation errors" name="781a choice screen should submit without validation errors" time="0.138">
    </testcase>
  </testsuite>
  <testsuite name="Service Pay" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:57" time="0.577" tests="4">
    <testcase classname="Service Pay should render two radio options by default" name="Service Pay should render two radio options by default" time="0.116">
    </testcase>
    <testcase classname="Service Pay should submit when &apos;no&apos; option is selected" name="Service Pay should submit when &apos;no&apos; option is selected" time="0.025">
    </testcase>
    <testcase classname="Service Pay should fail to submit when &apos;Yes&apos; option selected and no branch provided" name="Service Pay should fail to submit when &apos;Yes&apos; option selected and no branch provided" time="0.031">
    </testcase>
    <testcase classname="Service Pay should submit when all info provided" name="Service Pay should submit when all info provided" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform save in progress: RoutedSavableReviewPage" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:58" time="0.478" tests="4">
    <testcase classname="Schemaform save in progress: RoutedSavableReviewPage should render save links and downtime component" name="Schemaform save in progress: RoutedSavableReviewPage should render save links and downtime component" time="0.011">
    </testcase>
    <testcase classname="Schemaform save in progress: RoutedSavableReviewPage should auto save after change" name="Schemaform save in progress: RoutedSavableReviewPage should auto save after change" time="0.001">
    </testcase>
    <testcase classname="Schemaform save in progress: RoutedSavableReviewPage downtime banner should not be displayed when service is up" name="Schemaform save in progress: RoutedSavableReviewPage downtime banner should not be displayed when service is up" time="0.004">
    </testcase>
    <testcase classname="Schemaform save in progress: RoutedSavableReviewPage downtime banner should be displayed when service is down" name="Schemaform save in progress: RoutedSavableReviewPage downtime banner should be displayed when service is down" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="686 veteran information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:58" time="0.627" tests="4">
    <testcase classname="686 veteran information should render" name="686 veteran information should render" time="0.101">
    </testcase>
    <testcase classname="686 veteran information should expand VA file number if noSSN is checked" name="686 veteran information should expand VA file number if noSSN is checked" time="0.058">
    </testcase>
    <testcase classname="686 veteran information should not submit empty form" name="686 veteran information should not submit empty form" time="0.045">
    </testcase>
    <testcase classname="686 veteran information should submit completed form" name="686 veteran information should submit completed form" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="Edu directDepositChangePage" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:58" time="0.671" tests="8">
    <testcase classname="Edu directDepositChangePage 1995 should render" name="Edu directDepositChangePage 1995 should render" time="0.019">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1995 should render stop message" name="Edu directDepositChangePage 1995 should render stop message" time="0.023">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1995 should require bank account fields" name="Edu directDepositChangePage 1995 should require bank account fields" time="0.046">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1995 should show error on bad routing number" name="Edu directDepositChangePage 1995 should show error on bad routing number" time="0.058">
    </testcase>
    <testcase classname="Edu directDepositChangePage 5495 should render" name="Edu directDepositChangePage 5495 should render" time="0.009">
    </testcase>
    <testcase classname="Edu directDepositChangePage 5495 should render stop message" name="Edu directDepositChangePage 5495 should render stop message" time="0.02">
    </testcase>
    <testcase classname="Edu directDepositChangePage 5495 should require bank account fields" name="Edu directDepositChangePage 5495 should require bank account fields" time="0.075">
    </testcase>
    <testcase classname="Edu directDepositChangePage 5495 should show error on bad routing number" name="Edu directDepositChangePage 5495 should show error on bad routing number" time="0.058">
    </testcase>
  </testsuite>
  <testsuite name="Disability Benefits 526EZ &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:59" time="0.451" tests="9">
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render" time="0.17">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render 4142 helper text when 4142 option selected for any disability" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render 4142 helper text when 4142 option selected for any disability" time="0.012">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should not render 4142 helper text when 4142 option not selected for any disability" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should not render 4142 helper text when 4142 option not selected for any disability" time="0.009">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a confirmation number" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a confirmation number" time="0.013">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a formatted full name" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a formatted full name" time="0.007">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a formatted submission date" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a formatted submission date" time="0.009">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a success message" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a success message" time="0.008">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a &quot;check later&quot; message" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a &quot;check later&quot; message" time="0.012">
    </testcase>
    <testcase classname="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a failure message" name="Disability Benefits 526EZ &lt;ConfirmationPage&gt; should render a failure message" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Fully Developed Claim" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:59" time="0.514" tests="2">
    <testcase classname="Fully Developed Claim should render" name="Fully Developed Claim should render" time="0.116">
    </testcase>
    <testcase classname="Fully Developed Claim should submit with required data" name="Fully Developed Claim should submit with required data" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="evidenceTypes" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:49:58" time="0.705" tests="4">
    <testcase classname="evidenceTypes should render" name="evidenceTypes should render" time="0.121">
    </testcase>
    <testcase classname="evidenceTypes should submit when no evidence selected" name="evidenceTypes should submit when no evidence selected" time="0.021">
    </testcase>
    <testcase classname="evidenceTypes should require at least one evidence type when evidence selected" name="evidenceTypes should require at least one evidence type when evidence selected" time="0.069">
    </testcase>
    <testcase classname="evidenceTypes should submit with all required info" name="evidenceTypes should submit with all required info" time="0.064">
    </testcase>
  </testsuite>
  <testsuite name="Burials burial allowance" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:00" time="0.591" tests="9">
    <testcase classname="Burials burial allowance should render" name="Burials burial allowance should render" time="0.026">
    </testcase>
    <testcase classname="Burials burial allowance should show warning when ineligible for non-service connected death allowance" name="Burials burial allowance should show warning when ineligible for non-service connected death allowance" time="0.031">
    </testcase>
    <testcase classname="Burials burial allowance should not show vaMC option when neither vaMC nor nursing home selected as burial location" name="Burials burial allowance should not show vaMC option when neither vaMC nor nursing home selected as burial location" time="0.01">
    </testcase>
    <testcase classname="Burials burial allowance should show errors when required fields are empty" name="Burials burial allowance should show errors when required fields are empty" time="0.019">
    </testcase>
    <testcase classname="Burials burial allowance should show actual burial cost text field" name="Burials burial allowance should show actual burial cost text field" time="0.022">
    </testcase>
    <testcase classname="Burials burial allowance should show previously received question" name="Burials burial allowance should show previously received question" time="0.013">
    </testcase>
    <testcase classname="Burials burial allowance should show unclaimed question" name="Burials burial allowance should show unclaimed question" time="0.013">
    </testcase>
    <testcase classname="Burials burial allowance should submit when all required fields are filled in" name="Burials burial allowance should submit when all required fields are filled in" time="0.027">
    </testcase>
    <testcase classname="Burials burial allowance should show page only if burialAllowance was chosen" name="Burials burial allowance should show page only if burialAllowance was chosen" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Hca medicare" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:00" time="0.647" tests="5">
    <testcase classname="Hca medicare should render" name="Hca medicare should render" time="0.042">
    </testcase>
    <testcase classname="Hca medicare should not submit empty form" name="Hca medicare should not submit empty form" time="0.031">
    </testcase>
    <testcase classname="Hca medicare should reveal required effective date" name="Hca medicare should reveal required effective date" time="0.048">
    </testcase>
    <testcase classname="Hca medicare should require past effective date" name="Hca medicare should require past effective date" time="0.097">
    </testcase>
    <testcase classname="Hca medicare should submit with valid data" name="Hca medicare should submit with valid data" time="0.071">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 benefitHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:01" time="0.76" tests="4">
    <testcase classname="Edu 5490 benefitHistory should render" name="Edu 5490 benefitHistory should render" time="0.064">
    </testcase>
    <testcase classname="Edu 5490 benefitHistory should expand options conditionally" name="Edu 5490 benefitHistory should expand options conditionally" time="0.124">
    </testcase>
    <testcase classname="Edu 5490 benefitHistory should only require fields conditionally" name="Edu 5490 benefitHistory should only require fields conditionally" time="0.13">
    </testcase>
    <testcase classname="Edu 5490 benefitHistory should require either ssn or file number for previous sponsor" name="Edu 5490 benefitHistory should require either ssn or file number for previous sponsor" time="0.083">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ -- Rated disabilities selection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:00" time="0.679" tests="4">
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection renders the rated disabilities selection field" name="Disability benefits 526EZ -- Rated disabilities selection renders the rated disabilities selection field" time="0.117">
    </testcase>
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection successfully submits when at least one condition is selected" name="Disability benefits 526EZ -- Rated disabilities selection successfully submits when at least one condition is selected" time="0.035">
    </testcase>
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection successfully submits when no conditions selected" name="Disability benefits 526EZ -- Rated disabilities selection successfully submits when no conditions selected" time="0.02">
    </testcase>
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection renders the information about each disability" name="Disability benefits 526EZ -- Rated disabilities selection renders the information about each disability" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Edu directDepositChangePage" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:01" time="0.737" tests="9">
    <testcase classname="Edu directDepositChangePage 1990e should render" name="Edu directDepositChangePage 1990e should render" time="0.039">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1990e should show correct number of required errors" name="Edu directDepositChangePage 1990e should show correct number of required errors" time="0.032">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1990e should submit form" name="Edu directDepositChangePage 1990e should submit form" time="0.034">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1990n should render" name="Edu directDepositChangePage 1990n should render" time="0.015">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1990n should show correct number of required errors" name="Edu directDepositChangePage 1990n should show correct number of required errors" time="0.029">
    </testcase>
    <testcase classname="Edu directDepositChangePage 1990n should submit form" name="Edu directDepositChangePage 1990n should submit form" time="0.034">
    </testcase>
    <testcase classname="Edu directDepositChangePage 5490 should render" name="Edu directDepositChangePage 5490 should render" time="0.015">
    </testcase>
    <testcase classname="Edu directDepositChangePage 5490 should show correct number of required errors" name="Edu directDepositChangePage 5490 should show correct number of required errors" time="0.041">
    </testcase>
    <testcase classname="Edu directDepositChangePage 5490 should submit form" name="Edu directDepositChangePage 5490 should submit form" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="&lt;CropperController&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:02" time="0.462" tests="20">
    <testcase classname="&lt;CropperController&gt; should render" name="&lt;CropperController&gt; should render" time="0.216">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should rotate" name="&lt;CropperController&gt; should rotate" time="0.008">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should zoom on button click" name="&lt;CropperController&gt; should zoom on button click" time="0.027">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should not zoom outside of boundaries" name="&lt;CropperController&gt; should not zoom outside of boundaries" time="0.003">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should update instance after zooming" name="&lt;CropperController&gt; should update instance after zooming" time="0.007">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move up without warning" name="&lt;CropperController&gt; should move up without warning" time="0.006">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move down without warning" name="&lt;CropperController&gt; should move down without warning" time="0.006">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move left without warning" name="&lt;CropperController&gt; should move left without warning" time="0.006">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move right without warning" name="&lt;CropperController&gt; should move right without warning" time="0.007">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move up with warning" name="&lt;CropperController&gt; should move up with warning" time="0.006">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move down with warning" name="&lt;CropperController&gt; should move down with warning" time="0.007">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move left with warning" name="&lt;CropperController&gt; should move left with warning" time="0.005">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move right with warning" name="&lt;CropperController&gt; should move right with warning" time="0.003">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should move right with in frame warning" name="&lt;CropperController&gt; should move right with in frame warning" time="0.004">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should set crop box on ready" name="&lt;CropperController&gt; should set crop box on ready" time="0.004">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should stop resize listener when unmounting" name="&lt;CropperController&gt; should stop resize listener when unmounting" time="0.002">
    </testcase>
    <testcase classname="&lt;CropperController&gt; crop start should prevent default on disallowed actions" name="&lt;CropperController&gt; crop start should prevent default on disallowed actions" time="0.002">
    </testcase>
    <testcase classname="&lt;CropperController&gt; crop start should not prevent default on allowed actions" name="&lt;CropperController&gt; crop start should not prevent default on allowed actions" time="0.002">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should call onPhotoCropped when done" name="&lt;CropperController&gt; should call onPhotoCropped when done" time="0.002">
    </testcase>
    <testcase classname="&lt;CropperController&gt; should zoom on slider change" name="&lt;CropperController&gt; should zoom on slider change" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Unemployability 8940 Walkthrough" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:02" time="0.582" tests="3">
    <testcase classname="Unemployability 8940 Walkthrough should render" name="Unemployability 8940 Walkthrough should render" time="0.093">
    </testcase>
    <testcase classname="Unemployability 8940 Walkthrough should fail to submit when no data is filled out" name="Unemployability 8940 Walkthrough should fail to submit when no data is filled out" time="0.046">
    </testcase>
    <testcase classname="Unemployability 8940 Walkthrough should submit when data filled in" name="Unemployability 8940 Walkthrough should submit when data filled in" time="0.035">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ProfileView/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:02" time="0.374" tests="3">
    <testcase classname="&lt;ProfileView/&gt; should render the profile when the user is verifed and status OK" name="&lt;ProfileView/&gt; should render the profile when the user is verifed and status OK" time="0.245">
    </testcase>
    <testcase classname="&lt;ProfileView/&gt; should prompt to increase LOA when a user is not verified" name="&lt;ProfileView/&gt; should prompt to increase LOA when a user is not verified" time="0.007">
    </testcase>
    <testcase classname="&lt;ProfileView/&gt; should show an MVI error when status is not OK" name="&lt;ProfileView/&gt; should show an MVI error when status is not OK" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 718 PTSD type" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:02" time="0.647" tests="3">
    <testcase classname="Disability benefits 718 PTSD type renders ptsd type form" name="Disability benefits 718 PTSD type renders ptsd type form" time="0.108">
    </testcase>
    <testcase classname="Disability benefits 718 PTSD type should fill in ptsd type information" name="Disability benefits 718 PTSD type should fill in ptsd type information" time="0.106">
    </testcase>
    <testcase classname="Disability benefits 718 PTSD type should require a PTSD type to be selected" name="Disability benefits 718 PTSD type should require a PTSD type to be selected" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="Additional Remarks 781" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:03" time="0.51" tests="2">
    <testcase classname="Additional Remarks 781 should render" name="Additional Remarks 781 should render" time="0.084">
    </testcase>
    <testcase classname="Additional Remarks 781 should submit if field is untouched" name="Additional Remarks 781 should submit if field is untouched" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 servicePeriods" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:03" time="0.631" tests="3">
    <testcase classname="Edu 1990 servicePeriods should render service fields" name="Edu 1990 servicePeriods should render service fields" time="0.071">
    </testcase>
    <testcase classname="Edu 1990 servicePeriods should render service period view" name="Edu 1990 servicePeriods should render service period view" time="0.074">
    </testcase>
    <testcase classname="Edu 1990 servicePeriods should not submit without required inputs" name="Edu 1990 servicePeriods should not submit without required inputs" time="0.112">
    </testcase>
  </testsuite>
  <testsuite name="Burials claimant information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:03" time="0.619" tests="4">
    <testcase classname="Burials claimant information should render" name="Burials claimant information should render" time="0.048">
    </testcase>
    <testcase classname="Burials claimant information should show errors when required fields are empty" name="Burials claimant information should show errors when required fields are empty" time="0.065">
    </testcase>
    <testcase classname="Burials claimant information should show other text field" name="Burials claimant information should show other text field" time="0.078">
    </testcase>
    <testcase classname="Burials claimant information should submit when all required fields are filled in" name="Burials claimant information should submit when all required fields are filled in" time="0.096">
    </testcase>
  </testsuite>
  <testsuite name="Pensions document upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:04" time="0.445" tests="3">
    <testcase classname="Pensions document upload should render" name="Pensions document upload should render" time="0.023">
    </testcase>
    <testcase classname="Pensions document upload should submit empty form" name="Pensions document upload should submit empty form" time="0.024">
    </testcase>
    <testcase classname="Pensions document upload should submit with valid data" name="Pensions document upload should submit with valid data" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Pensions applicantInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:04" time="0.631" tests="3">
    <testcase classname="Pensions applicantInformation should render" name="Pensions applicantInformation should render" time="0.044">
    </testcase>
    <testcase classname="Pensions applicantInformation should require one of ssn or file number" name="Pensions applicantInformation should require one of ssn or file number" time="0.076">
    </testcase>
    <testcase classname="Pensions applicantInformation should submit with no errors with all required fields filled in" name="Pensions applicantInformation should submit with no errors with all required fields filled in" time="0.151">
    </testcase>
  </testsuite>
  <testsuite name="Burials plot allowance" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:04" time="0.546" tests="6">
    <testcase classname="Burials plot allowance should render" name="Burials plot allowance should render" time="0.035">
    </testcase>
    <testcase classname="Burials plot allowance should show errors when required fields are empty" name="Burials plot allowance should show errors when required fields are empty" time="0.036">
    </testcase>
    <testcase classname="Burials plot allowance should show state cemetery field" name="Burials plot allowance should show state cemetery field" time="0.028">
    </testcase>
    <testcase classname="Burials plot allowance should show actual govt contribution text field" name="Burials plot allowance should show actual govt contribution text field" time="0.023">
    </testcase>
    <testcase classname="Burials plot allowance should submit when all required fields are filled in" name="Burials plot allowance should submit when all required fields are filled in" time="0.082">
    </testcase>
    <testcase classname="Burials plot allowance should show page only if plotAllowance was chosen" name="Burials plot allowance should show page only if plotAllowance was chosen" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="profile helpers:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:04" time="0.542" tests="3">
    <testcase classname="profile helpers: formDescriptions should have description information for each verified form" name="profile helpers: formDescriptions should have description information for each verified form" time="0.013">
    </testcase>
    <testcase classname="profile helpers: handleAuthorizableForms should include authorization message if authorizable" name="profile helpers: handleAuthorizableForms should include authorization message if authorizable" time="0">
    </testcase>
    <testcase classname="profile helpers: handleAuthorizableForms should include getAuthorizationState if authorizable" name="profile helpers: handleAuthorizableForms should include getAuthorizationState if authorizable" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Address&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:05" time="0.524" tests="11">
    <testcase classname="&lt;Address&gt; should render" name="&lt;Address&gt; should render" time="0.165">
    </testcase>
    <testcase classname="&lt;Address&gt; should change the city and state fields for a military address" name="&lt;Address&gt; should change the city and state fields for a military address" time="0.026">
    </testcase>
    <testcase classname="&lt;Address&gt; should call onInput with correct args when user types in input" name="&lt;Address&gt; should call onInput with correct args when user types in input" time="0.025">
    </testcase>
    <testcase classname="&lt;Address&gt; should populate country dropdown with countries prop" name="&lt;Address&gt; should populate country dropdown with countries prop" time="0.046">
    </testcase>
    <testcase classname="&lt;Address&gt; should add military state codes to the state dropdown" name="&lt;Address&gt; should add military state codes to the state dropdown" time="0.024">
    </testcase>
    <testcase classname="&lt;Address&gt; should populate state dropdown with only military state codes if the city is a military city" name="&lt;Address&gt; should populate state dropdown with only military state codes if the city is a military city" time="0.014">
    </testcase>
    <testcase classname="&lt;Address&gt; should hide state and zip fields when USA isn&apos;t selected" name="&lt;Address&gt; should hide state and zip fields when USA isn&apos;t selected" time="0.007">
    </testcase>
    <testcase classname="&lt;Address&gt; should render error messages" name="&lt;Address&gt; should render error messages" time="0.026">
    </testcase>
    <testcase classname="&lt;Address&gt; should show state name for domestic addresses" name="&lt;Address&gt; should show state name for domestic addresses" time="0.045">
    </testcase>
    <testcase classname="&lt;Address&gt; should show military state code text for military address" name="&lt;Address&gt; should show military state code text for military address" time="0.021">
    </testcase>
    <testcase classname="&lt;Address&gt; should should show only city for international addresses" name="&lt;Address&gt; should should show only city for international addresses" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 contact information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:05" time="0.576" tests="3">
    <testcase classname="VRE chapter 36 contact information renders contact information form" name="VRE chapter 36 contact information renders contact information form" time="0.106">
    </testcase>
    <testcase classname="VRE chapter 36 contact information submits with info" name="VRE chapter 36 contact information submits with info" time="0.091">
    </testcase>
    <testcase classname="VRE chapter 36 contact information does not submit with non matching email addresses" name="VRE chapter 36 contact information does not submit with non matching email addresses" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="781 Unit Assignment Details" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:05" time="0.761" tests="3">
    <testcase classname="781 Unit Assignment Details should render" name="781 Unit Assignment Details should render" time="0.133">
    </testcase>
    <testcase classname="781 Unit Assignment Details should fill in unit assignment details" name="781 Unit Assignment Details should fill in unit assignment details" time="0.175">
    </testcase>
    <testcase classname="781 Unit Assignment Details should allow submission if no assigned unit details are submitted" name="781 Unit Assignment Details should allow submission if no assigned unit details are submitted" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Pensions directDeposit" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:06" time="0.637" tests="5">
    <testcase classname="Pensions directDeposit should render" name="Pensions directDeposit should render" time="0.056">
    </testcase>
    <testcase classname="Pensions directDeposit should render stop message" name="Pensions directDeposit should render stop message" time="0.034">
    </testcase>
    <testcase classname="Pensions directDeposit should require bank account fields" name="Pensions directDeposit should require bank account fields" time="0.043">
    </testcase>
    <testcase classname="Pensions directDeposit should show error on bad routing number" name="Pensions directDeposit should show error on bad routing number" time="0.043">
    </testcase>
    <testcase classname="Pensions directDeposit should submit with valid data" name="Pensions directDeposit should submit with valid data" time="0.07">
    </testcase>
  </testsuite>
  <testsuite name="526 -- paymentInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:06" time="0.645" tests="4">
    <testcase classname="526 -- paymentInformation should render" name="526 -- paymentInformation should render" time="0.121">
    </testcase>
    <testcase classname="526 -- paymentInformation should submit with all required info" name="526 -- paymentInformation should submit with all required info" time="0.03">
    </testcase>
    <testcase classname="526 -- paymentInformation should not submit without required info" name="526 -- paymentInformation should not submit without required info" time="0.067">
    </testcase>
    <testcase classname="526 -- paymentInformation should submit with no info" name="526 -- paymentInformation should submit with no info" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="&lt;IntroductionPage/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:07" time="0.542" tests="3">
    <testcase classname="&lt;IntroductionPage/&gt; should render" name="&lt;IntroductionPage/&gt; should render" time="0.125">
    </testcase>
    <testcase classname="&lt;IntroductionPage/&gt; should render a form title" name="&lt;IntroductionPage/&gt; should render a form title" time="0.004">
    </testcase>
    <testcase classname="&lt;IntroductionPage/&gt; should render 2 SiP intros" name="&lt;IntroductionPage/&gt; should render 2 SiP intros" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 dependent information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:07" time="0.492" tests="2">
    <testcase classname="VRE chapter 36 dependent information should render dependent information fields" name="VRE chapter 36 dependent information should render dependent information fields" time="0.125">
    </testcase>
    <testcase classname="VRE chapter 36 dependent information should submit without information" name="VRE chapter 36 dependent information should submit without information" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform: ReviewCardField" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:07" time="0.452" tests="10">
    <testcase classname="Schemaform: ReviewCardField should render" name="Schemaform: ReviewCardField should render" time="0.243">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should throw an error if no viewComponent is found" name="Schemaform: ReviewCardField should throw an error if no viewComponent is found" time="0.002">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should throw an error if schema type is not object or array" name="Schemaform: ReviewCardField should throw an error if schema type is not object or array" time="0.001">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should start in view mode" name="Schemaform: ReviewCardField should start in view mode" time="0.004">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should start in edit mode" name="Schemaform: ReviewCardField should start in edit mode" time="0.004">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should pass formData the custom view component" name="Schemaform: ReviewCardField should pass formData the custom view component" time="0.001">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should transition to edit mode" name="Schemaform: ReviewCardField should transition to edit mode" time="0.009">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should transition to view mode" name="Schemaform: ReviewCardField should transition to view mode" time="0.01">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should not transition to view mode if there are validation errors" name="Schemaform: ReviewCardField should not transition to view mode if there are validation errors" time="0.019">
    </testcase>
    <testcase classname="Schemaform: ReviewCardField should render the appropriate field in reviewMode according to the data type" name="Schemaform: ReviewCardField should render the appropriate field in reviewMode according to the data type" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 militaryService" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:07" time="0.459" tests="2">
    <testcase classname="Edu 1990 militaryService should render" name="Edu 1990 militaryService should render" time="0.029">
    </testcase>
    <testcase classname="Edu 1990 militaryService should have no required inputs" name="Edu 1990 militaryService should have no required inputs" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need attachments" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:08" time="0.505" tests="5">
    <testcase classname="Pre-need attachments should render" name="Pre-need attachments should render" time="0.034">
    </testcase>
    <testcase classname="Pre-need attachments should submit empty form" name="Pre-need attachments should submit empty form" time="0.027">
    </testcase>
    <testcase classname="Pre-need attachments should not submit without attachment id" name="Pre-need attachments should not submit without attachment id" time="0.032">
    </testcase>
    <testcase classname="Pre-need attachments should not submit without required fields" name="Pre-need attachments should not submit without required fields" time="0.035">
    </testcase>
    <testcase classname="Pre-need attachments should submit with valid data" name="Pre-need attachments should submit with valid data" time="0.038">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 rotcHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:08" time="0.499" tests="3">
    <testcase classname="Edu 1990 rotcHistory should render" name="Edu 1990 rotcHistory should render" time="0.025">
    </testcase>
    <testcase classname="Edu 1990 rotcHistory should have no required inputs" name="Edu 1990 rotcHistory should have no required inputs" time="0.024">
    </testcase>
    <testcase classname="Edu 1990 rotcHistory should be able to add a new period" name="Edu 1990 rotcHistory should be able to add a new period" time="0.094">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5495 benefitSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:08" time="0.406" tests="2">
    <testcase classname="Edu 5495 benefitSelection should render" name="Edu 5495 benefitSelection should render" time="0.016">
    </testcase>
    <testcase classname="Edu 5495 benefitSelection should show no errors when are empty" name="Edu 5495 benefitSelection should show no errors when are empty" time="0.023">
    </testcase>
  </testsuite>
  <testsuite name="form migrations:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:08" time="0.571" tests="2">
    <testcase classname="form migrations: should check all forms" name="form migrations: should check all forms" time="0.011">
    </testcase>
    <testcase classname="form migrations: should have a length equal to the version number" name="form migrations: should have a length equal to the version number" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Unemployability Status" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:09" time="0.54" tests="3">
    <testcase classname="Unemployability Status should render" name="Unemployability Status should render" time="0.098">
    </testcase>
    <testcase classname="Unemployability Status should fail to submit when no data is filled out" name="Unemployability Status should fail to submit when no data is filled out" time="0.025">
    </testcase>
    <testcase classname="Unemployability Status should submit when data filled in" name="Unemployability Status should submit when data filled in" time="0.031">
    </testcase>
  </testsuite>
  <testsuite name="Edu oldSchool page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:09" time="0.552" tests="2">
    <testcase classname="Edu oldSchool page should render" name="Edu oldSchool page should render" time="0.135">
    </testcase>
    <testcase classname="Edu oldSchool page should have no required inputs" name="Edu oldSchool page should have no required inputs" time="0.108">
    </testcase>
  </testsuite>
  <testsuite name="781 record upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:10" time="0.542" tests="3">
    <testcase classname="781 record upload should render" name="781 record upload should render" time="0.1">
    </testcase>
    <testcase classname="781 record upload should not submit without required upload" name="781 record upload should not submit without required upload" time="0.02">
    </testcase>
    <testcase classname="781 record upload should submit with uploaded form" name="781 record upload should submit with uploaded form" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Edu postHighSchoolTrainings" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:10" time="0.569" tests="2">
    <testcase classname="Edu postHighSchoolTrainings should render" name="Edu postHighSchoolTrainings should render" time="0.292">
    </testcase>
    <testcase classname="Edu postHighSchoolTrainings should add another" name="Edu postHighSchoolTrainings should add another" time="0.15">
    </testcase>
  </testsuite>
  <testsuite name="Service Pay" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:10" time="0.576" tests="3">
    <testcase classname="Service Pay should render two radio options by default" name="Service Pay should render two radio options by default" time="0.089">
    </testcase>
    <testcase classname="Service Pay should submit when an option is selected" name="Service Pay should submit when an option is selected" time="0.045">
    </testcase>
    <testcase classname="Service Pay should fail to submit when neither option is selected" name="Service Pay should fail to submit when neither option is selected" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Hca VA facility" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:10" time="0.598" tests="4">
    <testcase classname="Hca VA facility should render" name="Hca VA facility should render" time="0.049">
    </testcase>
    <testcase classname="Hca VA facility should not submit empty form" name="Hca VA facility should not submit empty form" time="0.055">
    </testcase>
    <testcase classname="Hca VA facility should set center list by state" name="Hca VA facility should set center list by state" time="0.058">
    </testcase>
    <testcase classname="Hca VA facility should submit with valid data" name="Hca VA facility should submit with valid data" time="0.057">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 educationHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:11" time="0.534" tests="2">
    <testcase classname="Edu 1990 educationHistory should render" name="Edu 1990 educationHistory should render" time="0.086">
    </testcase>
    <testcase classname="Edu 1990 educationHistory should have no required inputs" name="Edu 1990 educationHistory should have no required inputs" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="VRE chapter 36 applicant military history" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:11" time="0.603" tests="4">
    <testcase classname="VRE chapter 36 applicant military history renders military question" name="VRE chapter 36 applicant military history renders military question" time="0.128">
    </testcase>
    <testcase classname="VRE chapter 36 applicant military history renders military history fields if has service" name="VRE chapter 36 applicant military history renders military history fields if has service" time="0.089">
    </testcase>
    <testcase classname="VRE chapter 36 applicant military history does not submit without required info" name="VRE chapter 36 applicant military history does not submit without required info" time="0.032">
    </testcase>
    <testcase classname="VRE chapter 36 applicant military history submits with required info" name="VRE chapter 36 applicant military history submits with required info" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="526 ITFWrapper" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:11" time="0.421" tests="12">
    <testcase classname="526 ITFWrapper should not make an api call on the intro page" name="526 ITFWrapper should not make an api call on the intro page" time="0.201">
    </testcase>
    <testcase classname="526 ITFWrapper should not make an api call on the intro page with a trailing slash" name="526 ITFWrapper should not make an api call on the intro page with a trailing slash" time="0.004">
    </testcase>
    <testcase classname="526 ITFWrapper should not make an api call on the confirmation page" name="526 ITFWrapper should not make an api call on the confirmation page" time="0.002">
    </testcase>
    <testcase classname="526 ITFWrapper should fetch the ITF if the form is loaded not on the intro or confirmation pages" name="526 ITFWrapper should fetch the ITF if the form is loaded not on the intro or confirmation pages" time="0.004">
    </testcase>
    <testcase classname="526 ITFWrapper should fetch the ITF if the form is loaded on the intro and navigated to the next page" name="526 ITFWrapper should fetch the ITF if the form is loaded on the intro and navigated to the next page" time="0.027">
    </testcase>
    <testcase classname="526 ITFWrapper should render a loading indicator" name="526 ITFWrapper should render a loading indicator" time="0.005">
    </testcase>
    <testcase classname="526 ITFWrapper should render an error message if the ITF fetch failed" name="526 ITFWrapper should render an error message if the ITF fetch failed" time="0.005">
    </testcase>
    <testcase classname="526 ITFWrapper should submit a new ITF if the fetch failed" name="526 ITFWrapper should submit a new ITF if the fetch failed" time="0.019">
    </testcase>
    <testcase classname="526 ITFWrapper should submit a new ITF if no active ITF is found" name="526 ITFWrapper should submit a new ITF if no active ITF is found" time="0.001">
    </testcase>
    <testcase classname="526 ITFWrapper should render an error message if the ITF creation failed" name="526 ITFWrapper should render an error message if the ITF creation failed" time="0.001">
    </testcase>
    <testcase classname="526 ITFWrapper should render a success message for fetched ITF" name="526 ITFWrapper should render a success message for fetched ITF" time="0.012">
    </testcase>
    <testcase classname="526 ITFWrapper should render a success message for newly created ITF" name="526 ITFWrapper should render a success message for newly created ITF" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="veteran service organization information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:12" time="0.549" tests="3">
    <testcase classname="veteran service organization information should render" name="veteran service organization information should render" time="0.109">
    </testcase>
    <testcase classname="veteran service organization information should not submit without required info" name="veteran service organization information should not submit without required info" time="0.044">
    </testcase>
    <testcase classname="veteran service organization information should continue with all info filled in" name="veteran service organization information should continue with all info filled in" time="0.059">
    </testcase>
  </testsuite>
  <testsuite name="526 individual unemployability page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:12" time="0.489" tests="1">
    <testcase classname="526 individual unemployability page should render" name="526 individual unemployability page should render" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="Pensions aidAttendance" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:12" time="0.424" tests="2">
    <testcase classname="Pensions aidAttendance should render" name="Pensions aidAttendance should render" time="0.026">
    </testcase>
    <testcase classname="Pensions aidAttendance should submit" name="Pensions aidAttendance should submit" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="526 vaEmployee" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:12" time="0.509" tests="1">
    <testcase classname="526 vaEmployee should render" name="526 vaEmployee should render" time="0.12">
    </testcase>
  </testsuite>
  <testsuite name="Hca deductible expenses" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:13" time="0.417" tests="2">
    <testcase classname="Hca deductible expenses should render" name="Hca deductible expenses should render" time="0.029">
    </testcase>
    <testcase classname="Hca deductible expenses should not submit empty form" name="Hca deductible expenses should not submit empty form" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="VIC contact information" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:13" time="0.528" tests="3">
    <testcase classname="VIC contact information should render" name="VIC contact information should render" time="0.094">
    </testcase>
    <testcase classname="VIC contact information should not submit without required info" name="VIC contact information should not submit without required info" time="0.028">
    </testcase>
    <testcase classname="VIC contact information should submit with all info filled in" name="VIC contact information should submit with all info filled in" time="0.066">
    </testcase>
  </testsuite>
  <testsuite name="VIC photo upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:13" time="0.603" tests="4">
    <testcase classname="VIC photo upload should render" name="VIC photo upload should render" time="0.17">
    </testcase>
    <testcase classname="VIC photo upload should not submit without required info" name="VIC photo upload should not submit without required info" time="0.062">
    </testcase>
    <testcase classname="VIC photo upload it should reject an invalid file" name="VIC photo upload it should reject an invalid file" time="0.023">
    </testcase>
    <testcase classname="VIC photo upload should parse doc response" name="VIC photo upload should parse doc response" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="781 additonal events yes/no" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:13" time="0.586" tests="3">
    <testcase classname="781 additonal events yes/no should render" name="781 additonal events yes/no should render" time="0.118">
    </testcase>
    <testcase classname="781 additonal events yes/no should submit when no data is filled out" name="781 additonal events yes/no should submit when no data is filled out" time="0.023">
    </testcase>
    <testcase classname="781 additonal events yes/no should submit when data filled in" name="781 additonal events yes/no should submit when data filled in" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits helpers: " errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:14" time="0.492" tests="51">
    <testcase classname="Disability benefits helpers:  groupTimelineActivity should group events before a phase into phase 1" name="Disability benefits helpers:  groupTimelineActivity should group events before a phase into phase 1" time="0.002">
    </testcase>
    <testcase classname="Disability benefits helpers:  groupTimelineActivity should filter out events without a date" name="Disability benefits helpers:  groupTimelineActivity should filter out events without a date" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  groupTimelineActivity should group events after phase 1 into phase 2" name="Disability benefits helpers:  groupTimelineActivity should group events after phase 1 into phase 2" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  groupTimelineActivity should discard micro phases" name="Disability benefits helpers:  groupTimelineActivity should discard micro phases" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  groupTimelineActivity should group events into correct bucket" name="Disability benefits helpers:  groupTimelineActivity should group events into correct bucket" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  isPopulatedClaim should return false if any field is empty" name="Disability benefits helpers:  isPopulatedClaim should return false if any field is empty" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  isPopulatedClaim should return true if no field is empty" name="Disability benefits helpers:  isPopulatedClaim should return true if no field is empty" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  isPopulatedClaim should return false if contention list is empty" name="Disability benefits helpers:  isPopulatedClaim should return false if contention list is empty" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  truncateDescription should truncate text longer than 120 characters" name="Disability benefits helpers:  truncateDescription should truncate text longer than 120 characters" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  hasBeenReviewed should check that item is reviewed" name="Disability benefits helpers:  hasBeenReviewed should check that item is reviewed" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  hasBeenReviewed should check that item has not been reviewed" name="Disability benefits helpers:  hasBeenReviewed should check that item has not been reviewed" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getDocTypeDescription should get description by type" name="Disability benefits helpers:  getDocTypeDescription should get description by type" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  displayFileSize should show size in bytes" name="Disability benefits helpers:  displayFileSize should show size in bytes" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  displayFileSize should show size in kilobytes" name="Disability benefits helpers:  displayFileSize should show size in kilobytes" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  displayFileSize should show size in megabytes" name="Disability benefits helpers:  displayFileSize should show size in megabytes" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getUserPhase should get phase 3 desc for 4-6" name="Disability benefits helpers:  getUserPhase should get phase 3 desc for 4-6" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getUserPhaseDescription should get description for 3" name="Disability benefits helpers:  getUserPhaseDescription should get description for 3" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getPhaseDescription should display description from map" name="Disability benefits helpers:  getPhaseDescription should display description from map" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getItemDate should use the received date" name="Disability benefits helpers:  getItemDate should use the received date" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getItemDate should use the last document upload date" name="Disability benefits helpers:  getItemDate should use the last document upload date" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getItemDate should use the date" name="Disability benefits helpers:  getItemDate should use the date" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  getItemDate should use the upload date" name="Disability benefits helpers:  getItemDate should use the upload date" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  isClaimComplete should check if claim is in complete phase" name="Disability benefits helpers:  isClaimComplete should check if claim is in complete phase" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  isClaimComplete should check if claim has decision letter" name="Disability benefits helpers:  isClaimComplete should check if claim has decision letter" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  itemsNeedingAttentionFromVet should return number of needed items from vet" name="Disability benefits helpers:  itemsNeedingAttentionFromVet should return number of needed items from vet" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  getClaimType should return the claim type" name="Disability benefits helpers:  getClaimType should return the claim type" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getClaimType should return the default claim type" name="Disability benefits helpers:  getClaimType should return the default claim type" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeAuthRequest should make a fetch request" name="Disability benefits helpers:  makeAuthRequest should make a fetch request" time="0.042">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeAuthRequest should reject promise when there is an error" name="Disability benefits helpers:  makeAuthRequest should reject promise when there is an error" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeAuthRequest should dispatch auth error" name="Disability benefits helpers:  makeAuthRequest should dispatch auth error" time="0.01">
    </testcase>
    <testcase classname="Disability benefits helpers:  getStatusContents returns an object with correct title &amp; description" name="Disability benefits helpers:  getStatusContents returns an object with correct title &amp; description" time="0.161">
    </testcase>
    <testcase classname="Disability benefits helpers:  getStatusContents returns sane object when given unknown type" name="Disability benefits helpers:  getStatusContents returns sane object when given unknown type" time="0.005">
    </testcase>
    <testcase classname="Disability benefits helpers:  getStatusContents returns the right number of allowed / denied / remand items for remand status" name="Disability benefits helpers:  getStatusContents returns the right number of allowed / denied / remand items for remand status" time="0.007">
    </testcase>
    <testcase classname="Disability benefits helpers:  getStatusContents returns the right number of allowed / denied items for bva_decision status" name="Disability benefits helpers:  getStatusContents returns the right number of allowed / denied items for bva_decision status" time="0.005">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDurationText should return an object with header and description properties" name="Disability benefits helpers:  makeDurationText should return an object with header and description properties" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDurationText should return an object with header and description properties with nonsense input" name="Disability benefits helpers:  makeDurationText should return an object with header and description properties with nonsense input" time="0.085">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDurationText should return an object with header and description properties with empty array input" name="Disability benefits helpers:  makeDurationText should return an object with header and description properties with empty array input" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDurationText should return an object with header and description properties with no input" name="Disability benefits helpers:  makeDurationText should return an object with header and description properties with no input" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDurationText should format exact singular time estimates" name="Disability benefits helpers:  makeDurationText should format exact singular time estimates" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDurationText should format exact plural time estimates" name="Disability benefits helpers:  makeDurationText should format exact plural time estimates" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDurationText should format range time estimates" name="Disability benefits helpers:  makeDurationText should format range time estimates" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  getNextEvents returns an object with a header property" name="Disability benefits helpers:  getNextEvents returns an object with a header property" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  getNextEvents returns an object with an events array property" name="Disability benefits helpers:  getNextEvents returns an object with an events array property" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  getAlertContent returns an object with title, desc, displayType, and type" name="Disability benefits helpers:  getAlertContent returns an object with title, desc, displayType, and type" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  addStatusToIssues returns an array of same length as input array" name="Disability benefits helpers:  addStatusToIssues returns an array of same length as input array" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  addStatusToIssues returns an array of objects, each with status and description" name="Disability benefits helpers:  addStatusToIssues returns an array of objects, each with status and description" time="0">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDecisionReviewContent returns the default content if no additional content is provided" name="Disability benefits helpers:  makeDecisionReviewContent returns the default content if no additional content is provided" time="0.007">
    </testcase>
    <testcase classname="Disability benefits helpers:  makeDecisionReviewContent returns additional content when provided" name="Disability benefits helpers:  makeDecisionReviewContent returns additional content when provided" time="0.005">
    </testcase>
    <testcase classname="Disability benefits helpers:  isolateAppeal should find the right appeal if the given id matches" name="Disability benefits helpers:  isolateAppeal should find the right appeal if the given id matches" time="0.002">
    </testcase>
    <testcase classname="Disability benefits helpers:  isolateAppeal should find the right appeal if the given v1 id matches a v2 appeal" name="Disability benefits helpers:  isolateAppeal should find the right appeal if the given v1 id matches a v2 appeal" time="0.001">
    </testcase>
    <testcase classname="Disability benefits helpers:  isolateAppeal should return undefined if no appeal matches the id given" name="Disability benefits helpers:  isolateAppeal should return undefined if no appeal matches the id given" time="0">
    </testcase>
  </testsuite>
  <testsuite name="526 adaptive benefits page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:14" time="0.568" tests="2">
    <testcase classname="526 adaptive benefits page should render" name="526 adaptive benefits page should render" time="0.119">
    </testcase>
    <testcase classname="526 adaptive benefits page should show the double vehicle allowance alert" name="526 adaptive benefits page should show the double vehicle allowance alert" time="0.039">
    </testcase>
  </testsuite>
  <testsuite name="trainingPayWaiver" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:14" time="1.524" tests="3">
    <testcase classname="trainingPayWaiver should render" name="trainingPayWaiver should render" time="0.827">
    </testcase>
    <testcase classname="trainingPayWaiver should not submit when user does not make a selection" name="trainingPayWaiver should not submit when user does not make a selection" time="0.078">
    </testcase>
    <testcase classname="trainingPayWaiver should submit when user makes a selection" name="trainingPayWaiver should submit when user makes a selection" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Summary of Evidence" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:15" time="0.631" tests="5">
    <testcase classname="Summary of Evidence should render" name="Summary of Evidence should render" time="0.091">
    </testcase>
    <testcase classname="Summary of Evidence should render private medical facility list when &apos;no evidence&apos; selected" name="Summary of Evidence should render private medical facility list when &apos;no evidence&apos; selected" time="0.015">
    </testcase>
    <testcase classname="Summary of Evidence should render VA evidence list when VA evidence submitted" name="Summary of Evidence should render VA evidence list when VA evidence submitted" time="0.007">
    </testcase>
    <testcase classname="Summary of Evidence should render private evidence list when private evidence submitted" name="Summary of Evidence should render private evidence list when private evidence submitted" time="0.005">
    </testcase>
    <testcase classname="Summary of Evidence should render lay evidence list when lay evidence submitted" name="Summary of Evidence should render lay evidence list when lay evidence submitted" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990n applicantService" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:15" time="0.567" tests="2">
    <testcase classname="Edu 1990n applicantService should render" name="Edu 1990n applicantService should render" time="0.1">
    </testcase>
    <testcase classname="Edu 1990n applicantService should expand tours and other questions" name="Edu 1990n applicantService should expand tours and other questions" time="0.097">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ErrorableTextInput&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:16" time="0.231" tests="7">
    <testcase classname="&lt;ErrorableTextInput&gt; should render the value prop" name="&lt;ErrorableTextInput&gt; should render the value prop" time="0.065">
    </testcase>
    <testcase classname="&lt;ErrorableTextInput&gt; ensure value changes propagate" name="&lt;ErrorableTextInput&gt; ensure value changes propagate" time="0.004">
    </testcase>
    <testcase classname="&lt;ErrorableTextInput&gt; no error styles when errorMessage undefined" name="&lt;ErrorableTextInput&gt; no error styles when errorMessage undefined" time="0.02">
    </testcase>
    <testcase classname="&lt;ErrorableTextInput&gt; has error styles when errorMessage is set" name="&lt;ErrorableTextInput&gt; has error styles when errorMessage is set" time="0.003">
    </testcase>
    <testcase classname="&lt;ErrorableTextInput&gt; required=false does not have required asterisk" name="&lt;ErrorableTextInput&gt; required=false does not have required asterisk" time="0">
    </testcase>
    <testcase classname="&lt;ErrorableTextInput&gt; required=true has required asterisk" name="&lt;ErrorableTextInput&gt; required=true has required asterisk" time="0.001">
    </testcase>
    <testcase classname="&lt;ErrorableTextInput&gt; label attribute propagates" name="&lt;ErrorableTextInput&gt; label attribute propagates" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="781a additonal events yes/no" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:16" time="0.54" tests="3">
    <testcase classname="781a additonal events yes/no should render" name="781a additonal events yes/no should render" time="0.117">
    </testcase>
    <testcase classname="781a additonal events yes/no should submit when no data is filled out" name="781a additonal events yes/no should submit when no data is filled out" time="0.02">
    </testcase>
    <testcase classname="781a additonal events yes/no should submit when data filled in" name="781a additonal events yes/no should submit when data filled in" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ -- Rated disabilities selection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:16" time="0.54" tests="4">
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection renders the rated disabilities selection field" name="Disability benefits 526EZ -- Rated disabilities selection renders the rated disabilities selection field" time="0.124">
    </testcase>
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection fails to submit without selecting a condition" name="Disability benefits 526EZ -- Rated disabilities selection fails to submit without selecting a condition" time="0.022">
    </testcase>
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection successfully submits when at least one condition is selected" name="Disability benefits 526EZ -- Rated disabilities selection successfully submits when at least one condition is selected" time="0.048">
    </testcase>
    <testcase classname="Disability benefits 526EZ -- Rated disabilities selection renders the information about each disability" name="Disability benefits 526EZ -- Rated disabilities selection renders the information about each disability" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="526 all claims schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:16" time="0.418" tests="2">
    <testcase classname="526 all claims schema tests should validate maximal-test.json" name="526 all claims schema tests should validate maximal-test.json" time="0.287">
    </testcase>
    <testcase classname="526 all claims schema tests should validate minimal-test.json" name="526 all claims schema tests should validate minimal-test.json" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="authorization to change claimant address" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:17" time="0.619" tests="2">
    <testcase classname="authorization to change claimant address should render" name="authorization to change claimant address should render" time="0.149">
    </testcase>
    <testcase classname="authorization to change claimant address should continue without any check boxes filled in" name="authorization to change claimant address should continue without any check boxes filled in" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DisabilityWizard&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:17" time="0.554" tests="12">
    <testcase classname="&lt;DisabilityWizard&gt; should show button and no questions" name="&lt;DisabilityWizard&gt; should show button and no questions" time="0.299">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show status page" name="&lt;DisabilityWizard&gt; should show status page" time="0.008">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should validate status page on submit" name="&lt;DisabilityWizard&gt; should validate status page on submit" time="0.014">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show update page" name="&lt;DisabilityWizard&gt; should show update page" time="0.013">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should validate update page on submit" name="&lt;DisabilityWizard&gt; should validate update page on submit" time="0.017">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show ebenefits guidance page for first claims" name="&lt;DisabilityWizard&gt; should show ebenefits guidance page for first claims" time="0.012">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show ebenefits guidance page for new claims" name="&lt;DisabilityWizard&gt; should show ebenefits guidance page for new claims" time="0.007">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show ebenefits guidance page for new and increase claims" name="&lt;DisabilityWizard&gt; should show ebenefits guidance page for new and increase claims" time="0.009">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show appeals guidance page" name="&lt;DisabilityWizard&gt; should show appeals guidance page" time="0.006">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show unauthenticated increase guidance page" name="&lt;DisabilityWizard&gt; should show unauthenticated increase guidance page" time="0.009">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show authenticated increase guidance page" name="&lt;DisabilityWizard&gt; should show authenticated increase guidance page" time="0.009">
    </testcase>
    <testcase classname="&lt;DisabilityWizard&gt; should show authenticated and verified increase guidance page" name="&lt;DisabilityWizard&gt; should show authenticated and verified increase guidance page" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="Pensions Reserve and National Guard" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:18" time="0.5" tests="4">
    <testcase classname="Pensions Reserve and National Guard should render" name="Pensions Reserve and National Guard should render" time="0.028">
    </testcase>
    <testcase classname="Pensions Reserve and National Guard should not submit empty form" name="Pensions Reserve and National Guard should not submit empty form" time="0.048">
    </testcase>
    <testcase classname="Pensions Reserve and National Guard should reveal unit fields" name="Pensions Reserve and National Guard should reveal unit fields" time="0.042">
    </testcase>
    <testcase classname="Pensions Reserve and National Guard should submit with valid data" name="Pensions Reserve and National Guard should submit with valid data" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform definition bankAccount" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:18" time="0.4" tests="2">
    <testcase classname="Schemaform definition bankAccount should render bankAccount" name="Schemaform definition bankAccount should render bankAccount" time="0.228">
    </testcase>
    <testcase classname="Schemaform definition bankAccount should render bankAccount with routing number error" name="Schemaform definition bankAccount should render bankAccount with routing number error" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="781a last incident details" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:18" time="0.524" tests="3">
    <testcase classname="781a last incident details should render" name="781a last incident details should render" time="0.084">
    </testcase>
    <testcase classname="781a last incident details should submit when no data is filled out" name="781a last incident details should submit when no data is filled out" time="0.018">
    </testcase>
    <testcase classname="781a last incident details should submit when data filled in" name="781a last incident details should submit when data filled in" time="0.034">
    </testcase>
  </testsuite>
  <testsuite name="5490 schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:19" time="0.422" tests="7">
    <testcase classname="5490 schema tests should validate highschool-test.json" name="5490 schema tests should validate highschool-test.json" time="0.01">
    </testcase>
    <testcase classname="5490 schema tests should validate maximal-test.json" name="5490 schema tests should validate maximal-test.json" time="0.008">
    </testcase>
    <testcase classname="5490 schema tests should validate minimal-test.json" name="5490 schema tests should validate minimal-test.json" time="0.004">
    </testcase>
    <testcase classname="5490 schema tests should validate previous-sponsor-checked.json" name="5490 schema tests should validate previous-sponsor-checked.json" time="0.006">
    </testcase>
    <testcase classname="5490 schema tests submitted data for previous-sponsor-checked.json should match expected data" name="5490 schema tests submitted data for previous-sponsor-checked.json should match expected data" time="0.002">
    </testcase>
    <testcase classname="5490 schema tests should validate previous-sponsor-unchecked.json" name="5490 schema tests should validate previous-sponsor-unchecked.json" time="0.013">
    </testcase>
    <testcase classname="5490 schema tests submitted data for previous-sponsor-unchecked.json should match expected data" name="5490 schema tests submitted data for previous-sponsor-unchecked.json should match expected data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 benefitsEligibility" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:19" time="0.552" tests="3">
    <testcase classname="Edu 1990 benefitsEligibility should render" name="Edu 1990 benefitsEligibility should render" time="0.046">
    </testcase>
    <testcase classname="Edu 1990 benefitsEligibility should not submit form without information" name="Edu 1990 benefitsEligibility should not submit form without information" time="0.037">
    </testcase>
    <testcase classname="Edu 1990 benefitsEligibility should submit with required information" name="Edu 1990 benefitsEligibility should submit with required information" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 contributions" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:19" time="0.511" tests="4">
    <testcase classname="Edu 1990 contributions should render" name="Edu 1990 contributions should render" time="0.024">
    </testcase>
    <testcase classname="Edu 1990 contributions should have no required inputs" name="Edu 1990 contributions should have no required inputs" time="0.055">
    </testcase>
    <testcase classname="Edu 1990 contributions should reveal warning" name="Edu 1990 contributions should reveal warning" time="0.035">
    </testcase>
    <testcase classname="Edu 1990 contributions should reveal date fields" name="Edu 1990 contributions should reveal date fields" time="0.036">
    </testcase>
  </testsuite>
  <testsuite name="servedInCombatZone" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:20" time="0.539" tests="3">
    <testcase classname="servedInCombatZone should render" name="servedInCombatZone should render" time="0.081">
    </testcase>
    <testcase classname="servedInCombatZone should not submit without required info" name="servedInCombatZone should not submit without required info" time="0.048">
    </testcase>
    <testcase classname="servedInCombatZone should submit with required info" name="servedInCombatZone should submit with required info" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="526 aid and attendance page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:20" time="0.487" tests="1">
    <testcase classname="526 aid and attendance page should render" name="526 aid and attendance page should render" time="0.105">
    </testcase>
  </testsuite>
  <testsuite name="781 last incident details" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:20" time="0.521" tests="3">
    <testcase classname="781 last incident details should render" name="781 last incident details should render" time="0.113">
    </testcase>
    <testcase classname="781 last incident details should submit when no data is filled out" name="781 last incident details should submit when no data is filled out" time="0.018">
    </testcase>
    <testcase classname="781 last incident details should submit when data filled in" name="781 last incident details should submit when data filled in" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 employmentHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:20" time="0.457" tests="2">
    <testcase classname="Edu 1990 employmentHistory should render" name="Edu 1990 employmentHistory should render" time="0.019">
    </testcase>
    <testcase classname="Edu 1990 employmentHistory should show history fields" name="Edu 1990 employmentHistory should show history fields" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990e benefitEligibility" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:21" time="0.395" tests="2">
    <testcase classname="Edu 1990e benefitEligibility should render" name="Edu 1990e benefitEligibility should render" time="0.023">
    </testcase>
    <testcase classname="Edu 1990e benefitEligibility should have no required inputs" name="Edu 1990e benefitEligibility should have no required inputs" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 benefitSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:21" time="0.447" tests="4">
    <testcase classname="Edu 5490 benefitSelection should render" name="Edu 5490 benefitSelection should render" time="0.032">
    </testcase>
    <testcase classname="Edu 5490 benefitSelection should show nested content" name="Edu 5490 benefitSelection should show nested content" time="0.03">
    </testcase>
    <testcase classname="Edu 5490 benefitSelection should show errors when required fields are empty" name="Edu 5490 benefitSelection should show errors when required fields are empty" time="0.021">
    </testcase>
    <testcase classname="Edu 5490 benefitSelection should show no errors when all required fields are filled" name="Edu 5490 benefitSelection should show no errors when all required fields are filled" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="781 / 781a Incident Support page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:21" time="0.468" tests="1">
    <testcase classname="781 / 781a Incident Support page should submit without validation errors" name="781 / 781a Incident Support page should submit without validation errors" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="ITF reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:21" time="0.484" tests="7">
    <testcase classname="ITF reducer should handle ITF_FETCH_INITIATED" name="ITF reducer should handle ITF_FETCH_INITIATED" time="0.003">
    </testcase>
    <testcase classname="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the active one if present" name="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the active one if present" time="0.001">
    </testcase>
    <testcase classname="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the one with the latest expiration date if no active one is present" name="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the one with the latest expiration date if no active one is present" time="0.001">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_FETCH_FAILED" name="ITF reducer should handle ITF_FETCH_FAILED" time="0">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_CREATION_INITIATED" name="ITF reducer should handle ITF_CREATION_INITIATED" time="0">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_CREATION_SUCCEEDED" name="ITF reducer should handle ITF_CREATION_SUCCEEDED" time="0">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_CREATION_FAILED" name="ITF reducer should handle ITF_CREATION_FAILED" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Burials helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:22" time="0.322" tests="3">
    <testcase classname="Burials helpers submit should reject if initial request fails" name="Burials helpers submit should reject if initial request fails" time="0.199">
    </testcase>
    <testcase classname="Burials helpers submit should resolve if polling state is success" name="Burials helpers submit should resolve if polling state is success" time="0.006">
    </testcase>
    <testcase classname="Burials helpers submit should reject if polling state is failed" name="Burials helpers submit should reject if polling state is failed" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="781 choice screen" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:22" time="0.467" tests="1">
    <testcase classname="781 choice screen should submit without validation errors" name="781 choice screen should submit without validation errors" time="0.109">
    </testcase>
  </testsuite>
  <testsuite name="VIC document upload" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:22" time="0.504" tests="5">
    <testcase classname="VIC document upload should render" name="VIC document upload should render" time="0.111">
    </testcase>
    <testcase classname="VIC document upload should not submit without required info" name="VIC document upload should not submit without required info" time="0.04">
    </testcase>
    <testcase classname="VIC document upload it should reject an invalid file" name="VIC document upload it should reject an invalid file" time="0.015">
    </testcase>
    <testcase classname="VIC document upload should submit with valid data" name="VIC document upload should submit with valid data" time="0.016">
    </testcase>
    <testcase classname="VIC document upload should parse doc response" name="VIC document upload should parse doc response" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Pensions marriage info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:23" time="0.458" tests="4">
    <testcase classname="Pensions marriage info should render" name="Pensions marriage info should render" time="0.023">
    </testcase>
    <testcase classname="Pensions marriage info should render marriage count" name="Pensions marriage info should render marriage count" time="0.057">
    </testcase>
    <testcase classname="Pensions marriage info should not submit empty form" name="Pensions marriage info should not submit empty form" time="0.019">
    </testcase>
    <testcase classname="Pensions marriage info should submit with valid data" name="Pensions marriage info should submit with valid data" time="0.027">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 employmentHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:23" time="0.485" tests="4">
    <testcase classname="Edu 5490 employmentHistory should render" name="Edu 5490 employmentHistory should render" time="0.02">
    </testcase>
    <testcase classname="Edu 5490 employmentHistory should render expanded" name="Edu 5490 employmentHistory should render expanded" time="0.033">
    </testcase>
    <testcase classname="Edu 5490 employmentHistory should have no required inputs" name="Edu 5490 employmentHistory should have no required inputs" time="0.014">
    </testcase>
    <testcase classname="Edu 5490 employmentHistory should add another" name="Edu 5490 employmentHistory should add another" time="0.089">
    </testcase>
  </testsuite>
  <testsuite name="limitation of consent" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:23" time="0.425" tests="2">
    <testcase classname="limitation of consent should render" name="limitation of consent should render" time="0.094">
    </testcase>
    <testcase classname="limitation of consent should continue without any check boxes filled in" name="limitation of consent should continue without any check boxes filled in" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:24" time="0.323" tests="1">
    <testcase classname="Edu 5490 &lt;ConfirmationPage&gt; should render" name="Edu 5490 &lt;ConfirmationPage&gt; should render" time="0.222">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MHVApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:24" time="0.37" tests="18">
    <testcase classname="&lt;MHVApp&gt; should show a loading indicator when fetching an account" name="&lt;MHVApp&gt; should show a loading indicator when fetching an account" time="0.211">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should create an account if the user does not have an account but is eligible" name="&lt;MHVApp&gt; should create an account if the user does not have an account but is eligible" time="0.014">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should redirect if the user needs to accepts T&amp;C" name="&lt;MHVApp&gt; should redirect if the user needs to accepts T&amp;C" time="0.003">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should invoke upgrade if the user is only registered" name="&lt;MHVApp&gt; should invoke upgrade if the user is only registered" time="0.001">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should invoke upgrade if the user is existing without access to the service" name="&lt;MHVApp&gt; should invoke upgrade if the user is existing without access to the service" time="0.002">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show a success message after the user accepts T&amp;C and gets upgraded" name="&lt;MHVApp&gt; should show a success message after the user accepts T&amp;C and gets upgraded" time="0.004">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show MHV access error if nothing is loading or processing" name="&lt;MHVApp&gt; should show MHV access error if nothing is loading or processing" time="0.002">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show MHV access error if user has an account but not the required service" name="&lt;MHVApp&gt; should show MHV access error if user has an account but not the required service" time="0.002">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should render children if user has the required service as an existing user" name="&lt;MHVApp&gt; should render children if user has the required service as an existing user" time="0.001">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should render children if user has the required service as a registered user" name="&lt;MHVApp&gt; should render children if user has the required service as a registered user" time="0.001">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show placeholder account error" name="&lt;MHVApp&gt; should show placeholder account error" time="0.002">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show error if unable to determine MHV account level" name="&lt;MHVApp&gt; should show error if unable to determine MHV account level" time="0.002">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show error if failed to register MHV account" name="&lt;MHVApp&gt; should show error if failed to register MHV account" time="0.001">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show error if failed to upgrade MHV account" name="&lt;MHVApp&gt; should show error if failed to upgrade MHV account" time="0.001">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show error if the user has mismatched SSNs" name="&lt;MHVApp&gt; should show error if the user has mismatched SSNs" time="0.001">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show error if the user is not a VA patient" name="&lt;MHVApp&gt; should show error if the user is not a VA patient" time="0.001">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show error if the user has a disabled MHV account" name="&lt;MHVApp&gt; should show error if the user has a disabled MHV account" time="0.002">
    </testcase>
    <testcase classname="&lt;MHVApp&gt; should show error if the user has multiple active MHV accounts" name="&lt;MHVApp&gt; should show error if the user has multiple active MHV accounts" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 dependents" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:24" time="0.413" tests="3">
    <testcase classname="Edu 1990 dependents should render" name="Edu 1990 dependents should render" time="0.029">
    </testcase>
    <testcase classname="Edu 1990 dependents should show errors if submitted without information" name="Edu 1990 dependents should show errors if submitted without information" time="0.034">
    </testcase>
    <testcase classname="Edu 1990 dependents should show page only if served before 1977" name="Edu 1990 dependents should show page only if served before 1977" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="pre-need schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:24" time="0.366" tests="2">
    <testcase classname="pre-need schema tests should validate maximal-test.json" name="pre-need schema tests should validate maximal-test.json" time="0.011">
    </testcase>
    <testcase classname="pre-need schema tests should validate minimal-test.json" name="pre-need schema tests should validate minimal-test.json" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SupportingDocumentsDescription&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:24" time="0.475" tests="4">
    <testcase classname="&lt;SupportingDocumentsDescription&gt; should render" name="&lt;SupportingDocumentsDescription&gt; should render" time="0.299">
    </testcase>
    <testcase classname="&lt;SupportingDocumentsDescription&gt; should render service member text" name="&lt;SupportingDocumentsDescription&gt; should render service member text" time="0.026">
    </testcase>
    <testcase classname="&lt;SupportingDocumentsDescription&gt; should render sponsor text" name="&lt;SupportingDocumentsDescription&gt; should render sponsor text" time="0.019">
    </testcase>
    <testcase classname="&lt;SupportingDocumentsDescription&gt; should render child text" name="&lt;SupportingDocumentsDescription&gt; should render child text" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5495 schoolSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:24" time="0.442" tests="2">
    <testcase classname="Edu 5495 schoolSelection should render" name="Edu 5495 schoolSelection should render" time="0.05">
    </testcase>
    <testcase classname="Edu 5495 schoolSelection should show errors when required fields are empty" name="Edu 5495 schoolSelection should show errors when required fields are empty" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="Downtime Notification Reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:25" time="0.115" tests="2">
    <testcase classname="Downtime Notification Reducer scheduledDowntime returns the initial state" name="Downtime Notification Reducer scheduledDowntime returns the initial state" time="0.007">
    </testcase>
    <testcase classname="Downtime Notification Reducer scheduledDowntime flips the isReady flag and sets value when RECEIVE_SCHEDULED_DOWNTIME is dispatched" name="Downtime Notification Reducer scheduledDowntime flips the isReady flag and sets value when RECEIVE_SCHEDULED_DOWNTIME is dispatched" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;RoutedSavablePage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:25" time="0.42" tests="2">
    <testcase classname="Schemaform &lt;RoutedSavablePage&gt; should include SaveLink and SaveStatus" name="Schemaform &lt;RoutedSavablePage&gt; should include SaveLink and SaveStatus" time="0.299">
    </testcase>
    <testcase classname="Schemaform &lt;RoutedSavablePage&gt; should auto save on change" name="Schemaform &lt;RoutedSavablePage&gt; should auto save on change" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SaveStatus&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:25" time="0.24" tests="7">
    <testcase classname="&lt;SaveStatus&gt; should render" name="&lt;SaveStatus&gt; should render" time="0.114">
    </testcase>
    <testcase classname="&lt;SaveStatus&gt; should show last saved date" name="&lt;SaveStatus&gt; should show last saved date" time="0.002">
    </testcase>
    <testcase classname="&lt;SaveStatus&gt; should show saving" name="&lt;SaveStatus&gt; should show saving" time="0.001">
    </testcase>
    <testcase classname="&lt;SaveStatus&gt; should not show a status for an unsaved form" name="&lt;SaveStatus&gt; should not show a status for an unsaved form" time="0">
    </testcase>
    <testcase classname="&lt;SaveStatus&gt; should show session expired error" name="&lt;SaveStatus&gt; should show session expired error" time="0.001">
    </testcase>
    <testcase classname="&lt;SaveStatus&gt; should show client error" name="&lt;SaveStatus&gt; should show client error" time="0">
    </testcase>
    <testcase classname="&lt;SaveStatus&gt; should show regular error" name="&lt;SaveStatus&gt; should show regular error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="686 marriage info" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:25" time="0.482" tests="4">
    <testcase classname="686 marriage info should render" name="686 marriage info should render" time="0.024">
    </testcase>
    <testcase classname="686 marriage info should render marriage count" name="686 marriage info should render marriage count" time="0.036">
    </testcase>
    <testcase classname="686 marriage info should not submit empty form" name="686 marriage info should not submit empty form" time="0.042">
    </testcase>
    <testcase classname="686 marriage info should submit with valid data" name="686 marriage info should submit with valid data" time="0.03">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Issues/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:26" time="0.41" tests="11">
    <testcase classname="&lt;Issues/&gt; should render" name="&lt;Issues/&gt; should render" time="0.194">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should render no panels when no issues passed in" name="&lt;Issues/&gt; should render no panels when no issues passed in" time="0.002">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should render one panel when only an open issue is passed in" name="&lt;Issues/&gt; should render one panel when only an open issue is passed in" time="0.007">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should render one panel when only a closed issue is passed in" name="&lt;Issues/&gt; should render one panel when only a closed issue is passed in" time="0.005">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should render two panels when both open *AND* closed issues are passed in" name="&lt;Issues/&gt; should render two panels when both open *AND* closed issues are passed in" time="0.002">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should render a list of open items when open items exist" name="&lt;Issues/&gt; should render a list of open items when open items exist" time="0.01">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should render a list of closed items when items exist" name="&lt;Issues/&gt; should render a list of closed items when items exist" time="0.006">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should pass auto-expand prop to active panel when both active and closed panels present" name="&lt;Issues/&gt; should pass auto-expand prop to active panel when both active and closed panels present" time="0.002">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should pass auto-expand prop to active panel when only active panel present" name="&lt;Issues/&gt; should pass auto-expand prop to active panel when only active panel present" time="0.01">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should pass auto-expand prop to closed panel when no active panel present" name="&lt;Issues/&gt; should pass auto-expand prop to closed panel when no active panel present" time="0.002">
    </testcase>
    <testcase classname="&lt;Issues/&gt; should not pass auto-expand prop to closed panel when active panel present" name="&lt;Issues/&gt; should not pass auto-expand prop to closed panel when active panel present" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DownloadPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:26" time="0.352" tests="5">
    <testcase classname="&lt;DownloadPage&gt; should render success state correctly" name="&lt;DownloadPage&gt; should render success state correctly" time="0.197">
    </testcase>
    <testcase classname="&lt;DownloadPage&gt; should render refresh error correctly" name="&lt;DownloadPage&gt; should render refresh error correctly" time="0.003">
    </testcase>
    <testcase classname="&lt;DownloadPage&gt; should render report generation error correctly" name="&lt;DownloadPage&gt; should render report generation error correctly" time="0.005">
    </testcase>
    <testcase classname="&lt;DownloadPage&gt; should render generic skipped update warning correctly" name="&lt;DownloadPage&gt; should render generic skipped update warning correctly" time="0.02">
    </testcase>
    <testcase classname="&lt;DownloadPage&gt; should render skipped update warning for specific categories" name="&lt;DownloadPage&gt; should render skipped update warning for specific categories" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 schoolSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:26" time="0.433" tests="1">
    <testcase classname="Edu 5490 schoolSelection should render" name="Edu 5490 schoolSelection should render" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Vet360ProfileField/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:26" time="0.393" tests="4">
    <testcase classname="&lt;Vet360ProfileField/&gt; renders the Content prop" name="&lt;Vet360ProfileField/&gt; renders the Content prop" time="0.224">
    </testcase>
    <testcase classname="&lt;Vet360ProfileField/&gt; conditional render based on existence of data" name="&lt;Vet360ProfileField/&gt; conditional render based on existence of data" time="0.007">
    </testcase>
    <testcase classname="&lt;Vet360ProfileField/&gt; renders the EditModal prop" name="&lt;Vet360ProfileField/&gt; renders the EditModal prop" time="0.015">
    </testcase>
    <testcase classname="&lt;Vet360ProfileField/&gt; renders the edit link" name="&lt;Vet360ProfileField/&gt; renders the edit link" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MhvTermsAndConditions&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:27" time="0.411" tests="10">
    <testcase classname="&lt;MhvTermsAndConditions&gt; should show an error when there are errors" name="&lt;MhvTermsAndConditions&gt; should show an error when there are errors" time="0.246">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should show a loading indicator when fetching terms and conditions" name="&lt;MhvTermsAndConditions&gt; should show a loading indicator when fetching terms and conditions" time="0.004">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should show a loading indicator when fetching previous acceptance" name="&lt;MhvTermsAndConditions&gt; should show a loading indicator when fetching previous acceptance" time="0.002">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should show a loading indicator when accepting terms and conditions" name="&lt;MhvTermsAndConditions&gt; should show a loading indicator when accepting terms and conditions" time="0.005">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should show a success message after acceptance" name="&lt;MhvTermsAndConditions&gt; should show a success message after acceptance" time="0.007">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should show a success message after acceptance" name="&lt;MhvTermsAndConditions&gt; should show a success message after acceptance" time="0.001">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should redirect after acceptance if there is a redirect URL" name="&lt;MhvTermsAndConditions&gt; should redirect after acceptance if there is a redirect URL" time="0.005">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should not allow the user to agree if they are not logged in" name="&lt;MhvTermsAndConditions&gt; should not allow the user to agree if they are not logged in" time="0.002">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should not allow the user to agree if they are not verified" name="&lt;MhvTermsAndConditions&gt; should not allow the user to agree if they are not verified" time="0.002">
    </testcase>
    <testcase classname="&lt;MhvTermsAndConditions&gt; should not allow the user to agree if they have already accepted" name="&lt;MhvTermsAndConditions&gt; should not allow the user to agree if they have already accepted" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Hca additionalInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:27" time="0.471" tests="2">
    <testcase classname="Hca additionalInformation should render" name="Hca additionalInformation should render" time="0.024">
    </testcase>
    <testcase classname="Hca additionalInformation should submit without data" name="Hca additionalInformation should submit without data" time="0.047">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 sponsorService" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:27" time="0.395" tests="2">
    <testcase classname="Edu 5490 sponsorService should render" name="Edu 5490 sponsorService should render" time="0.022">
    </testcase>
    <testcase classname="Edu 5490 sponsorService should have no required inputs" name="Edu 5490 sponsorService should have no required inputs" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Vet360Transaction/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:27" time="0.327" tests="1">
    <testcase classname="&lt;Vet360Transaction/&gt; renders" name="&lt;Vet360Transaction/&gt; renders" time="0.208">
    </testcase>
  </testsuite>
  <testsuite name="VIC helpers:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:27" time="0.418" tests="12">
    <testcase classname="VIC helpers: submit should reject if initial request fails" name="VIC helpers: submit should reject if initial request fails" time="0.2">
    </testcase>
    <testcase classname="VIC helpers: submit should resolve if polling state is success" name="VIC helpers: submit should resolve if polling state is success" time="0.011">
    </testcase>
    <testcase classname="VIC helpers: submit should reject if polling state is failed" name="VIC helpers: submit should reject if polling state is failed" time="0.006">
    </testcase>
    <testcase classname="VIC helpers: submit should resolve with image request" name="VIC helpers: submit should resolve with image request" time="0.006">
    </testcase>
    <testcase classname="VIC helpers: submit should resolve with failed image request" name="VIC helpers: submit should resolve with failed image request" time="0.041">
    </testcase>
    <testcase classname="VIC helpers: prefillTransformer should do nothing if there is no branch list" name="VIC helpers: prefillTransformer should do nothing if there is no branch list" time="0.001">
    </testcase>
    <testcase classname="VIC helpers: prefillTransformer should set serviceBranch to first branch and enum to list" name="VIC helpers: prefillTransformer should set serviceBranch to first branch and enum to list" time="0.002">
    </testcase>
    <testcase classname="VIC helpers: prefillTransformer should filter out invalid branches" name="VIC helpers: prefillTransformer should filter out invalid branches" time="0.001">
    </testcase>
    <testcase classname="VIC helpers: prefillTransformer should leave full list when no valid branches" name="VIC helpers: prefillTransformer should leave full list when no valid branches" time="0.001">
    </testcase>
    <testcase classname="VIC helpers: prefillTransformer should set id proofed flag and original user data" name="VIC helpers: prefillTransformer should set id proofed flag and original user data" time="0">
    </testcase>
    <testcase classname="VIC helpers: transform should remove identity fields" name="VIC helpers: transform should remove identity fields" time="0.018">
    </testcase>
    <testcase classname="VIC helpers: transform should process as anonymous if fields are different" name="VIC helpers: transform should process as anonymous if fields are different" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 applicantInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:28" time="0.416" tests="1">
    <testcase classname="Edu 5490 applicantInformation should render" name="Edu 5490 applicantInformation should render" time="0.05">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;SaveInProgressIntro&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:28" time="0.441" tests="12">
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render in progress message" name="Schemaform &lt;SaveInProgressIntro&gt; should render in progress message" time="0.243">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should pass prefills available prop" name="Schemaform &lt;SaveInProgressIntro&gt; should pass prefills available prop" time="0.005">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render sign in message" name="Schemaform &lt;SaveInProgressIntro&gt; should render sign in message" time="0.005">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render prefill Notification when prefill enabled and not signed in" name="Schemaform &lt;SaveInProgressIntro&gt; should render prefill Notification when prefill enabled and not signed in" time="0.006">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render message if signed in with no saved form" name="Schemaform &lt;SaveInProgressIntro&gt; should render message if signed in with no saved form" time="0.003">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render prefill notification if signed in with no saved form and prefill available" name="Schemaform &lt;SaveInProgressIntro&gt; should render prefill notification if signed in with no saved form and prefill available" time="0.004">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should over-ride the default retentionPeriod prop when one supplied" name="Schemaform &lt;SaveInProgressIntro&gt; should over-ride the default retentionPeriod prop when one supplied" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render loading indicator while profile is loading" name="Schemaform &lt;SaveInProgressIntro&gt; should render loading indicator while profile is loading" time="0.004">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render expired message if signed in with an expired form" name="Schemaform &lt;SaveInProgressIntro&gt; should render expired message if signed in with an expired form" time="0.004">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render sign in message from render prop" name="Schemaform &lt;SaveInProgressIntro&gt; should render sign in message from render prop" time="0.003">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should render downtime notification" name="Schemaform &lt;SaveInProgressIntro&gt; should render downtime notification" time="0.015">
    </testcase>
    <testcase classname="Schemaform &lt;SaveInProgressIntro&gt; should not render downtime notification when logged in" name="Schemaform &lt;SaveInProgressIntro&gt; should not render downtime notification when logged in" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Edu educationProgram" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:28" time="0.502" tests="2">
    <testcase classname="Edu educationProgram should render" name="Edu educationProgram should render" time="0.183">
    </testcase>
    <testcase classname="Edu educationProgram should show address conditionally" name="Edu educationProgram should show address conditionally" time="0.121">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990N applicantInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:29" time="0.409" tests="1">
    <testcase classname="Edu 1990N applicantInformation should render" name="Edu 1990N applicantInformation should render" time="0.071">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EmailNotifications&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:29" time="0.386" tests="9">
    <testcase classname="&lt;EmailNotifications&gt; should render" name="&lt;EmailNotifications&gt; should render" time="0.123">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should show a loading screen when getting preferences" name="&lt;EmailNotifications&gt; should show a loading screen when getting preferences" time="0.003">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should show a loading screen when saving preferences" name="&lt;EmailNotifications&gt; should show a loading screen when saving preferences" time="0">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should disable save button when nothing has changed" name="&lt;EmailNotifications&gt; should disable save button when nothing has changed" time="0.002">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should enable save button and show cancel button if email is modified" name="&lt;EmailNotifications&gt; should enable save button and show cancel button if email is modified" time="0.001">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should enable save button and show cancel button if frequency is modified" name="&lt;EmailNotifications&gt; should enable save button and show cancel button if frequency is modified" time="0.032">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should hide frequency suboptions when notifications are off" name="&lt;EmailNotifications&gt; should hide frequency suboptions when notifications are off" time="0.001">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should show frequency suboptions when notifications are on" name="&lt;EmailNotifications&gt; should show frequency suboptions when notifications are on" time="0.001">
    </testcase>
    <testcase classname="&lt;EmailNotifications&gt; should hide email input if notifications are off" name="&lt;EmailNotifications&gt; should hide email input if notifications are off" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PreferencesWidget&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:29" time="0.386" tests="2">
    <testcase classname="&lt;PreferencesWidget&gt; should render empty view" name="&lt;PreferencesWidget&gt; should render empty view" time="0.258">
    </testcase>
    <testcase classname="&lt;PreferencesWidget&gt; should render view with preferences" name="&lt;PreferencesWidget&gt; should render view with preferences" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="HCA migrations" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:29" time="0.382" tests="18">
    <testcase classname="HCA migrations first migration should remove hispanic property and add in view: object" name="HCA migrations first migration should remove hispanic property and add in view: object" time="0.001">
    </testcase>
    <testcase classname="HCA migrations first migration should not remove existing hispanic choice" name="HCA migrations first migration should not remove existing hispanic choice" time="0.001">
    </testcase>
    <testcase classname="HCA migrations second migration should convert report children field" name="HCA migrations second migration should convert report children field" time="0">
    </testcase>
    <testcase classname="HCA migrations second migration should change name of empty children array" name="HCA migrations second migration should change name of empty children array" time="0.001">
    </testcase>
    <testcase classname="HCA migrations second migration should change field names inside children items" name="HCA migrations second migration should change field names inside children items" time="0">
    </testcase>
    <testcase classname="HCA migrations third migration should update url when it matches" name="HCA migrations third migration should update url when it matches" time="0.001">
    </testcase>
    <testcase classname="HCA migrations third migration should leave url alone when it does not match" name="HCA migrations third migration should leave url alone when it does not match" time="0">
    </testcase>
    <testcase classname="HCA migrations fourth migration should leave data alone if not set" name="HCA migrations fourth migration should leave data alone if not set" time="0.001">
    </testcase>
    <testcase classname="HCA migrations fourth migration should set to none if all false" name="HCA migrations fourth migration should set to none if all false" time="0.001">
    </testcase>
    <testcase classname="HCA migrations fourth migration should set to highDisability if isVaServiceConnected" name="HCA migrations fourth migration should set to highDisability if isVaServiceConnected" time="0">
    </testcase>
    <testcase classname="HCA migrations fourth migration should set to lowDisability if compensableVaServiceConnected" name="HCA migrations fourth migration should set to lowDisability if compensableVaServiceConnected" time="0.001">
    </testcase>
    <testcase classname="HCA migrations fourth migration should set to pension if receivesVaPension" name="HCA migrations fourth migration should set to pension if receivesVaPension" time="0.001">
    </testcase>
    <testcase classname="HCA migrations fourth migration should set url if any other combination of choices" name="HCA migrations fourth migration should set url if any other combination of choices" time="0">
    </testcase>
    <testcase classname="HCA migrations fourth migration should not set url if prefill" name="HCA migrations fourth migration should not set url if prefill" time="0.001">
    </testcase>
    <testcase classname="HCA migrations fifth migration should unset required fields that are blank strings" name="HCA migrations fifth migration should unset required fields that are blank strings" time="0.001">
    </testcase>
    <testcase classname="HCA migrations fifth migration set the return URL to veteran address when address updated" name="HCA migrations fifth migration set the return URL to veteran address when address updated" time="0.001">
    </testcase>
    <testcase classname="HCA migrations fifth migration set the return URL to veteran information when veteranFullName updated" name="HCA migrations fifth migration set the return URL to veteran information when veteranFullName updated" time="0.001">
    </testcase>
    <testcase classname="HCA migrations sixth migration should unset insurance fields that are blank strings" name="HCA migrations sixth migration should unset insurance fields that are blank strings" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="EDU migrations" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:29" time="0.373" tests="1">
    <testcase classname="EDU migrations first migration should remove urlPrefix from returnUrl" name="EDU migrations first migration should remove urlPrefix from returnUrl" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SelectArrayItemsWidget&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:30" time="0.338" tests="4">
    <testcase classname="&lt;SelectArrayItemsWidget&gt; should render a list of check boxes" name="&lt;SelectArrayItemsWidget&gt; should render a list of check boxes" time="0.169">
    </testcase>
    <testcase classname="&lt;SelectArrayItemsWidget&gt; should render a custom label component for the checkboxes" name="&lt;SelectArrayItemsWidget&gt; should render a custom label component for the checkboxes" time="0.001">
    </testcase>
    <testcase classname="&lt;SelectArrayItemsWidget&gt; should pass the custom label the form data for that item" name="&lt;SelectArrayItemsWidget&gt; should pass the custom label the form data for that item" time="0.021">
    </testcase>
    <testcase classname="&lt;SelectArrayItemsWidget&gt; should call onChange with the toggled the selected property when the checkbox is toggled" name="&lt;SelectArrayItemsWidget&gt; should call onChange with the toggled the selected property when the checkbox is toggled" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealInfo/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:30" time="0.419" tests="14">
    <testcase classname="&lt;AppealInfo/&gt; should render" name="&lt;AppealInfo/&gt; should render" time="0.26">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render LoadingIndicator when appeals loading" name="&lt;AppealInfo/&gt; should render LoadingIndicator when appeals loading" time="0.004">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render the breadcrumbs" name="&lt;AppealInfo/&gt; should render the breadcrumbs" time="0.003">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render a header" name="&lt;AppealInfo/&gt; should render a header" time="0.002">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render a tabbed navigator" name="&lt;AppealInfo/&gt; should render a tabbed navigator" time="0.002">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render its children" name="&lt;AppealInfo/&gt; should render its children" time="0.003">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should pass appeal as a prop to its children" name="&lt;AppealInfo/&gt; should pass appeal as a prop to its children" time="0.004">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should have access to the appeal id in route params" name="&lt;AppealInfo/&gt; should have access to the appeal id in route params" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render no records warning when user forbidden" name="&lt;AppealInfo/&gt; should render no records warning when user forbidden" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render no records warning when RECORD_NOT_FOUND_ERROR present" name="&lt;AppealInfo/&gt; should render no records warning when RECORD_NOT_FOUND_ERROR present" time="0.003">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render system down message when VALIDATION_ERROR present" name="&lt;AppealInfo/&gt; should render system down message when VALIDATION_ERROR present" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render system down message when BACKEND_SERVICE_ERROR present" name="&lt;AppealInfo/&gt; should render system down message when BACKEND_SERVICE_ERROR present" time="0.002">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render system down message when FETCH_APPEALS_ERROR present" name="&lt;AppealInfo/&gt; should render system down message when FETCH_APPEALS_ERROR present" time="0.004">
    </testcase>
    <testcase classname="&lt;AppealInfo/&gt; should render appeals down message when other error present" name="&lt;AppealInfo/&gt; should render appeals down message when other error present" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SetPreferences&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:30" time="0.434" tests="3">
    <testcase classname="&lt;SetPreferences&gt; should render" name="&lt;SetPreferences&gt; should render" time="0.277">
    </testcase>
    <testcase classname="&lt;SetPreferences&gt; should handle updates" name="&lt;SetPreferences&gt; should handle updates" time="0.038">
    </testcase>
    <testcase classname="&lt;SetPreferences&gt; should render loading view" name="&lt;SetPreferences&gt; should render loading view" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SearchPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:31" time="0.411" tests="3">
    <testcase classname="&lt;SearchPage&gt; should render" name="&lt;SearchPage&gt; should render" time="0.155">
    </testcase>
    <testcase classname="&lt;SearchPage&gt; should render LoadingIndicator" name="&lt;SearchPage&gt; should render LoadingIndicator" time="0.002">
    </testcase>
    <testcase classname="&lt;SearchPage&gt; should call expected actions when mounted" name="&lt;SearchPage&gt; should call expected actions when mounted" time="0.029">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;FormPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:31" time="0.367" tests="7">
    <testcase classname="Schemaform &lt;FormPage&gt; should render" name="Schemaform &lt;FormPage&gt; should render" time="0.236">
    </testcase>
    <testcase classname="Schemaform &lt;FormPage&gt; should handle change" name="Schemaform &lt;FormPage&gt; should handle change" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;FormPage&gt; should handle submit" name="Schemaform &lt;FormPage&gt; should handle submit" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;FormPage&gt; should go back" name="Schemaform &lt;FormPage&gt; should go back" time="0.004">
    </testcase>
    <testcase classname="Schemaform &lt;FormPage&gt; should render array page" name="Schemaform &lt;FormPage&gt; should render array page" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;FormPage&gt; should handle change in array page" name="Schemaform &lt;FormPage&gt; should handle change in array page" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;FormPage&gt; should update data when submitting on array page" name="Schemaform &lt;FormPage&gt; should update data when submitting on array page" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="removeEmptyStringProperties" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:31" time="0.362" tests="23">
    <testcase classname="removeEmptyStringProperties removes keys that have empty string values" name="removeEmptyStringProperties removes keys that have empty string values" time="0.001">
    </testcase>
    <testcase classname="removeEmptyStringProperties converts preserves non-empty strings" name="removeEmptyStringProperties converts preserves non-empty strings" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: transformSearchToolAddress converts international address data to the proper format" name="feedback-tool helpers: transformSearchToolAddress converts international address data to the proper format" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: transformSearchToolAddress converts domestic address data to the proper format" name="feedback-tool helpers: transformSearchToolAddress converts domestic address data to the proper format" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: transformSearchToolAddress trims fields that are too long" name="feedback-tool helpers: transformSearchToolAddress trims fields that are too long" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: transformSearchToolAddress converts empty strings to `undefined`" name="feedback-tool helpers: transformSearchToolAddress converts empty strings to `undefined`" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: removeFacilityCodeIfManualEntry removes the facility code if manual entry is used" name="feedback-tool helpers: removeFacilityCodeIfManualEntry removes the facility code if manual entry is used" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: removeFacilityCodeIfManualEntry does not manipulate the object if manual entry is not used" name="feedback-tool helpers: removeFacilityCodeIfManualEntry does not manipulate the object if manual entry is not used" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: transform calls the `formTransformer` with the `form` object" name="feedback-tool helpers: transform calls the `formTransformer` with the `form` object" time="0.166">
    </testcase>
    <testcase classname="feedback-tool helpers: submit should reject if initial request fails" name="feedback-tool helpers: submit should reject if initial request fails" time="0.033">
    </testcase>
    <testcase classname="feedback-tool helpers: submit should resolve if polling state is success" name="feedback-tool helpers: submit should resolve if polling state is success" time="0.008">
    </testcase>
    <testcase classname="feedback-tool helpers: submit should reject if polling state is failed" name="feedback-tool helpers: submit should reject if polling state is failed" time="0.005">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:applicantInformationWasPrefilled&quot; flag is added when a `fullName` is set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:applicantInformationWasPrefilled&quot; flag is added when a `fullName` is set on the formData" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:applicantInformationWasPrefilled&quot; flag is not added when a `fullName` is not set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:applicantInformationWasPrefilled&quot; flag is not added when a `fullName` is not set on the formData" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:serviceInformationWasPrefilled&quot; flag is added when a `serviceBranch` is set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:serviceInformationWasPrefilled&quot; flag is added when a `serviceBranch` is set on the formData" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:serviceInformationWasPrefilled&quot; flag is added when a `serviceDateRange` is set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:serviceInformationWasPrefilled&quot; flag is added when a `serviceDateRange` is set on the formData" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:serviceInformationWasPrefilled&quot; flag is not added when neither `serviceBranch` or `serviceDateRange` are not set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:serviceInformationWasPrefilled&quot; flag is not added when neither `serviceBranch` or `serviceDateRange` are not set on the formData" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is added when an `applicantEmail` is set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is added when an `applicantEmail` is set on the formData" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is added when a `phone` is set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is added when a `phone` is set on the formData" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is added when an `address` is set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is added when an `address` is set on the formData" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is not added when neither `address`, `phone`, or `applicantEmail` are set on the formData" name="feedback-tool helpers: prefillTransformer &quot;view:contactInformationWasPrefilled&quot; flag is not added when neither `address`, `phone`, or `applicantEmail` are set on the formData" time="0">
    </testcase>
    <testcase classname="feedback-tool helpers: conditionalPrefillMessage calls the `messageComponent` param if the correct flag is set on data.formData" name="feedback-tool helpers: conditionalPrefillMessage calls the `messageComponent` param if the correct flag is set on data.formData" time="0.001">
    </testcase>
    <testcase classname="feedback-tool helpers: conditionalPrefillMessage does not call the `messageComponent` param if the correct flag is not set data.formData" name="feedback-tool helpers: conditionalPrefillMessage does not call the `messageComponent` param if the correct flag is not set data.formData" time="0">
    </testcase>
  </testsuite>
  <testsuite name="hca schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:31" time="0.366" tests="3">
    <testcase classname="hca schema tests should validate foreign-address-test.json" name="hca schema tests should validate foreign-address-test.json" time="0.229">
    </testcase>
    <testcase classname="hca schema tests should validate maximal-test.json" name="hca schema tests should validate maximal-test.json" time="0.016">
    </testcase>
    <testcase classname="hca schema tests should validate minimal-test.json" name="hca schema tests should validate minimal-test.json" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="781/781a incident form config iterators" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:31" time="0.399" tests="8">
    <testcase classname="781/781a incident form config iterators 781 incident form config should return a config object" name="781/781a incident form config iterators 781 incident form config should return a config object" time="0.244">
    </testcase>
    <testcase classname="781/781a incident form config iterators 781 incident form config should return three incident date page config objects" name="781/781a incident form config iterators 781 incident form config should return three incident date page config objects" time="0.002">
    </testcase>
    <testcase classname="781/781a incident form config iterators 781 incident form config should return three incident description page config objects" name="781/781a incident form config iterators 781 incident form config should return three incident description page config objects" time="0.001">
    </testcase>
    <testcase classname="781/781a incident form config iterators 781 incident form config should contain three incident properties" name="781/781a incident form config iterators 781 incident form config should contain three incident properties" time="0.001">
    </testcase>
    <testcase classname="781/781a incident form config iterators 781a incident form config should return a config object" name="781/781a incident form config iterators 781a incident form config should return a config object" time="0.026">
    </testcase>
    <testcase classname="781/781a incident form config iterators 781a incident form config should return three incident date page config objects" name="781/781a incident form config iterators 781a incident form config should return three incident date page config objects" time="0.002">
    </testcase>
    <testcase classname="781/781a incident form config iterators 781a incident form config should return three incident description page config objects" name="781/781a incident form config iterators 781a incident form config should return three incident description page config objects" time="0.001">
    </testcase>
    <testcase classname="781/781a incident form config iterators 781a incident form config should contain three incident properties within incident date pages" name="781/781a incident form config iterators 781a incident form config should contain three incident properties within incident date pages" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Edu personId" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:31" time="0.453" tests="3">
    <testcase classname="Edu personId should render" name="Edu personId should render" time="0.025">
    </testcase>
    <testcase classname="Edu personId should conditionally require SSN or file number" name="Edu personId should conditionally require SSN or file number" time="0.032">
    </testcase>
    <testcase classname="Edu personId should submit with no errors when required field is filled" name="Edu personId should submit with no errors when required field is filled" time="0.082">
    </testcase>
  </testsuite>
  <testsuite name="VetsDotGov" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:32" time="0.378" tests="2">
    <testcase classname="VetsDotGov renders children when brandConsolidationEnabled is false" name="VetsDotGov renders children when brandConsolidationEnabled is false" time="0.26">
    </testcase>
    <testcase classname="VetsDotGov does not render children when brandConsolidationEnabled is true" name="VetsDotGov does not render children when brandConsolidationEnabled is true" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990e applicantInformation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:32" time="0.442" tests="1">
    <testcase classname="Edu 1990e applicantInformation should render" name="Edu 1990e applicantInformation should render" time="0.077">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Announcement/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:33" time="0.33" tests="4">
    <testcase classname="&lt;Announcement/&gt; calls the init action when isInitialized is false" name="&lt;Announcement/&gt; calls the init action when isInitialized is false" time="0.198">
    </testcase>
    <testcase classname="&lt;Announcement/&gt; renders an empty div when there is no announcement" name="&lt;Announcement/&gt; renders an empty div when there is no announcement" time="0.001">
    </testcase>
    <testcase classname="&lt;Announcement/&gt; renders a child announcement component when there is an announcement prop" name="&lt;Announcement/&gt; renders a child announcement component when there is an announcement prop" time="0.002">
    </testcase>
    <testcase classname="&lt;Announcement/&gt; can dismiss announcements and any related announcements using a dismiss prop" name="&lt;Announcement/&gt; can dismiss announcements and any related announcements using a dismiss prop" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="1990e schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:33" time="0.346" tests="2">
    <testcase classname="1990e schema tests should validate maximal-test.json" name="1990e schema tests should validate maximal-test.json" time="0.238">
    </testcase>
    <testcase classname="1990e schema tests should validate minimal-test.json" name="1990e schema tests should validate minimal-test.json" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="authorization686 reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:33" time="0.367" tests="4">
    <testcase classname="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_STARTED" name="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_STARTED" time="0.003">
    </testcase>
    <testcase classname="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED with authorization" name="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED with authorization" time="0.001">
    </testcase>
    <testcase classname="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED without authorization" name="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED without authorization" time="0">
    </testcase>
    <testcase classname="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_FAILED" name="authorization686 reducer should handle LOAD_30_PERCENT_DISABILITY_RATING_FAILED" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealsV2StatusPage/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:33" time="0.366" tests="10">
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should render" name="&lt;AppealsV2StatusPage/&gt; should render" time="0.213">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should render an unexpanded &lt;Timeline/&gt;" name="&lt;AppealsV2StatusPage/&gt; should render an unexpanded &lt;Timeline/&gt;" time="0.015">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should pass down events as props to Timeline" name="&lt;AppealsV2StatusPage/&gt; should pass down events as props to Timeline" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should render a &lt;CurrentStatus/&gt; with title and description" name="&lt;AppealsV2StatusPage/&gt; should render a &lt;CurrentStatus/&gt; with title and description" time="0.002">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should render an &lt;AlertsList/&gt; with alerts" name="&lt;AppealsV2StatusPage/&gt; should render an &lt;AlertsList/&gt; with alerts" time="0.002">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should render a &lt;WhatsNext/&gt; with nextEvents" name="&lt;AppealsV2StatusPage/&gt; should render a &lt;WhatsNext/&gt; with nextEvents" time="0.005">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should render a &lt;Docket/&gt; when applicable" name="&lt;AppealsV2StatusPage/&gt; should render a &lt;Docket/&gt; when applicable" time="0.002">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should not render a &lt;Docket/&gt; when appeal status is a forbidden type" name="&lt;AppealsV2StatusPage/&gt; should not render a &lt;Docket/&gt; when appeal status is a forbidden type" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should not render a &lt;Docket/&gt; when appeal type is a forbidden type" name="&lt;AppealsV2StatusPage/&gt; should not render a &lt;Docket/&gt; when appeal type is a forbidden type" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealsV2StatusPage/&gt; should not render a &lt;Docket/&gt; when appeal is closed" name="&lt;AppealsV2StatusPage/&gt; should not render a &lt;Docket/&gt; when appeal is closed" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="530 schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:33" time="0.433" tests="2">
    <testcase classname="530 schema tests should validate maximal-test.json" name="530 schema tests should validate maximal-test.json" time="0.004">
    </testcase>
    <testcase classname="530 schema tests should validate minimal-test.json" name="530 schema tests should validate minimal-test.json" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;CurrentStatus/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:34" time="0.304" tests="2">
    <testcase classname="&lt;CurrentStatus/&gt; should render" name="&lt;CurrentStatus/&gt; should render" time="0.182">
    </testcase>
    <testcase classname="&lt;CurrentStatus/&gt; should render title and description from passed in props" name="&lt;CurrentStatus/&gt; should render title and description from passed in props" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Root property names" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:34" time="0.408" tests="1">
    <testcase classname="Root property names should not be duplicated" name="Root property names should not be duplicated" time="0.283">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AdditionalEvidencePage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:34" time="0.308" tests="7">
    <testcase classname="&lt;AdditionalEvidencePage&gt; should render loading div" name="&lt;AdditionalEvidencePage&gt; should render loading div" time="0.128">
    </testcase>
    <testcase classname="&lt;AdditionalEvidencePage&gt; should render upload error alert" name="&lt;AdditionalEvidencePage&gt; should render upload error alert" time="0.016">
    </testcase>
    <testcase classname="&lt;AdditionalEvidencePage&gt; should clear upload error when leaving" name="&lt;AdditionalEvidencePage&gt; should clear upload error when leaving" time="0.002">
    </testcase>
    <testcase classname="&lt;AdditionalEvidencePage&gt; should not clear notification after completed upload" name="&lt;AdditionalEvidencePage&gt; should not clear notification after completed upload" time="0.001">
    </testcase>
    <testcase classname="&lt;AdditionalEvidencePage&gt; should handle submit files" name="&lt;AdditionalEvidencePage&gt; should handle submit files" time="0.001">
    </testcase>
    <testcase classname="&lt;AdditionalEvidencePage&gt; should reset uploads and set title on mount" name="&lt;AdditionalEvidencePage&gt; should reset uploads and set title on mount" time="0.043">
    </testcase>
    <testcase classname="&lt;AdditionalEvidencePage&gt; should set details and go to files page if complete" name="&lt;AdditionalEvidencePage&gt; should set details and go to files page if complete" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FormFooter" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:35" time="0.29" tests="3">
    <testcase classname="FormFooter should render" name="FormFooter should render" time="0.172">
    </testcase>
    <testcase classname="FormFooter should not render if on the confirmation page" name="FormFooter should not render if on the confirmation page" time="0.001">
    </testcase>
    <testcase classname="FormFooter should render &lt;GetFormHelp&gt; if passed to config" name="FormFooter should render &lt;GetFormHelp&gt; if passed to config" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990n benefitSelection" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:35" time="0.363" tests="2">
    <testcase classname="Edu 1990n benefitSelection should render" name="Edu 1990n benefitSelection should render" time="0.014">
    </testcase>
    <testcase classname="Edu 1990n benefitSelection should show no errors when are empty" name="Edu 1990n benefitSelection should show no errors when are empty" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 employmentHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:35" time="0.385" tests="2">
    <testcase classname="Edu 1990 employmentHistory should render" name="Edu 1990 employmentHistory should render" time="0.017">
    </testcase>
    <testcase classname="Edu 1990 employmentHistory should show history fields" name="Edu 1990 employmentHistory should show history fields" time="0.042">
    </testcase>
  </testsuite>
  <testsuite name="686 &lt;AuthorizationMessage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:35" time="0.338" tests="4">
    <testcase classname="686 &lt;AuthorizationMessage&gt; should render SERVER_ERROR profile status error message" name="686 &lt;AuthorizationMessage&gt; should render SERVER_ERROR profile status error message" time="0.146">
    </testcase>
    <testcase classname="686 &lt;AuthorizationMessage&gt; should render NOT_FOUND profile status error message" name="686 &lt;AuthorizationMessage&gt; should render NOT_FOUND profile status error message" time="0.006">
    </testcase>
    <testcase classname="686 &lt;AuthorizationMessage&gt; should render unverified error message" name="686 &lt;AuthorizationMessage&gt; should render unverified error message" time="0.001">
    </testcase>
    <testcase classname="686 &lt;AuthorizationMessage&gt; should render 30 percent disability rating error message" name="686 &lt;AuthorizationMessage&gt; should render 30 percent disability rating error message" time="0">
    </testcase>
  </testsuite>
  <testsuite name="hca validation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:35" time="0.327" tests="12">
    <testcase classname="hca validation validateServiceDates should set message if discharge date is before entry date" name="hca validation validateServiceDates should set message if discharge date is before entry date" time="0.194">
    </testcase>
    <testcase classname="hca validation validateServiceDates should set message if discharge date is later than 730 days" name="hca validation validateServiceDates should set message if discharge date is later than 730 days" time="0.002">
    </testcase>
    <testcase classname="hca validation validateServiceDates should set message if entry date is less than 15 years after dob" name="hca validation validateServiceDates should set message if entry date is less than 15 years after dob" time="0.001">
    </testcase>
    <testcase classname="hca validation validateMarriageDate should set message if marriage date is after spouse dob" name="hca validation validateMarriageDate should set message if marriage date is after spouse dob" time="0.001">
    </testcase>
    <testcase classname="hca validation validateMarriageDate should set message if marriage date is after veteran dob" name="hca validation validateMarriageDate should set message if marriage date is after veteran dob" time="0.001">
    </testcase>
    <testcase classname="hca validation validateMarriageDate should not set message if not disclosing financials" name="hca validation validateMarriageDate should not set message if not disclosing financials" time="0.001">
    </testcase>
    <testcase classname="hca validation validateDependentDate should set message if birth date is after dependent date" name="hca validation validateDependentDate should set message if birth date is after dependent date" time="0.001">
    </testcase>
    <testcase classname="hca validation validateDependentDate should not set message if not disclosing financials" name="hca validation validateDependentDate should not set message if not disclosing financials" time="0.001">
    </testcase>
    <testcase classname="hca validation validateCurrency should set message if value has three decimals" name="hca validation validateCurrency should set message if value has three decimals" time="0.001">
    </testcase>
    <testcase classname="hca validation validateCurrency should set message if value has trailing whitespace" name="hca validation validateCurrency should set message if value has trailing whitespace" time="0">
    </testcase>
    <testcase classname="hca validation validateCurrency should set message if value has leading whitespace" name="hca validation validateCurrency should set message if value has leading whitespace" time="0.001">
    </testcase>
    <testcase classname="hca validation validateCurrency should not set message if value includes dollar sign" name="hca validation validateCurrency should not set message if value includes dollar sign" time="0">
    </testcase>
  </testsuite>
  <testsuite name="1995 schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:35" time="0.344" tests="2">
    <testcase classname="1995 schema tests should validate maximal-test.json" name="1995 schema tests should validate maximal-test.json" time="0.232">
    </testcase>
    <testcase classname="1995 schema tests should validate minimal-test.json" name="1995 schema tests should validate minimal-test.json" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990e &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:36" time="0.342" tests="1">
    <testcase classname="Edu 1990e &lt;ConfirmationPage&gt; should render" name="Edu 1990e &lt;ConfirmationPage&gt; should render" time="0.23">
    </testcase>
  </testsuite>
  <testsuite name="526 helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:36" time="0.36" tests="24">
    <testcase classname="526 helpers transform should return stringified, transformed data for submit" name="526 helpers transform should return stringified, transformed data for submit" time="0.206">
    </testcase>
    <testcase classname="526 helpers transform should not submit uploads when corresponding evidence type not selected" name="526 helpers transform should not submit uploads when corresponding evidence type not selected" time="0.003">
    </testcase>
    <testcase classname="526 helpers transform should submit uploads when parent disability is selected" name="526 helpers transform should submit uploads when parent disability is selected" time="0.002">
    </testcase>
    <testcase classname="526 helpers transform should not submit uploads when parent disability not selected" name="526 helpers transform should not submit uploads when parent disability not selected" time="0.002">
    </testcase>
    <testcase classname="526 helpers validateDisability should reject invalid disability data" name="526 helpers validateDisability should reject invalid disability data" time="0.004">
    </testcase>
    <testcase classname="526 helpers validateDisability should accept valid disability data" name="526 helpers validateDisability should accept valid disability data" time="0.001">
    </testcase>
    <testcase classname="526 helpers addPhoneEmailToCard should return formData when veteran property does not exist" name="526 helpers addPhoneEmailToCard should return formData when veteran property does not exist" time="0">
    </testcase>
    <testcase classname="526 helpers addPhoneEmailToCard should return a new object with correctly-modified formData" name="526 helpers addPhoneEmailToCard should return a new object with correctly-modified formData" time="0.001">
    </testcase>
    <testcase classname="526 helpers transformObligationDates adds obligation dates to the top level formData" name="526 helpers transformObligationDates adds obligation dates to the top level formData" time="0">
    </testcase>
    <testcase classname="526 helpers transformObligationDates returns original form data if reserves data is missing" name="526 helpers transformObligationDates returns original form data if reserves data is missing" time="0">
    </testcase>
    <testcase classname="526 helpers prefillTransformer should transform prefilled disabilities" name="526 helpers prefillTransformer should transform prefilled disabilities" time="0.004">
    </testcase>
    <testcase classname="526 helpers prefillTransformer should add phone and email to phoneEmailCard" name="526 helpers prefillTransformer should add phone and email to phoneEmailCard" time="0.001">
    </testcase>
    <testcase classname="526 helpers prefillTransformer should return original data when no disabilities returned" name="526 helpers prefillTransformer should return original data when no disabilities returned" time="0">
    </testcase>
    <testcase classname="526 helpers prefillTransformer should return original data if disabilities is not an array" name="526 helpers prefillTransformer should return original data if disabilities is not an array" time="0.001">
    </testcase>
    <testcase classname="526 helpers prefillTransformer should transform prefilled data when disability name has special chars" name="526 helpers prefillTransformer should transform prefilled data when disability name has special chars" time="0.002">
    </testcase>
    <testcase classname="526 helpers prefillTransformer should put obligation dates into the parent level" name="526 helpers prefillTransformer should put obligation dates into the parent level" time="0.001">
    </testcase>
    <testcase classname="526 helpers get4142Selection should return true when at least one disability has 4142 selected" name="526 helpers get4142Selection should return true when at least one disability has 4142 selected" time="0.001">
    </testcase>
    <testcase classname="526 helpers get4142Selection should return false when disability not selected for increase" name="526 helpers get4142Selection should return false when disability not selected for increase" time="0">
    </testcase>
    <testcase classname="526 helpers get4142Selection should return false when disability has upload PMR selected" name="526 helpers get4142Selection should return false when disability has upload PMR selected" time="0">
    </testcase>
    <testcase classname="526 helpers get4142Selection should return false when disability has no PMR supporting evidence" name="526 helpers get4142Selection should return false when disability has no PMR supporting evidence" time="0">
    </testcase>
    <testcase classname="526 helpers get4142Selection should return false when no disabilities have 4142 selected" name="526 helpers get4142Selection should return false when no disabilities have 4142 selected" time="0.001">
    </testcase>
    <testcase classname="526 helpers getReservesGuardData gets reserve &amp; national guard data when available" name="526 helpers getReservesGuardData gets reserve &amp; national guard data when available" time="0">
    </testcase>
    <testcase classname="526 helpers getReservesGuardData get title 10 data when available" name="526 helpers getReservesGuardData get title 10 data when available" time="0">
    </testcase>
    <testcase classname="526 helpers getReservesGuardData returns null when some required data is missing" name="526 helpers getReservesGuardData returns null when some required data is missing" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="hca &lt;DemographicField&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:36" time="0.362" tests="2">
    <testcase classname="hca &lt;DemographicField&gt; should render ObjectField" name="hca &lt;DemographicField&gt; should render ObjectField" time="0.208">
    </testcase>
    <testcase classname="hca &lt;DemographicField&gt; should render review version" name="hca &lt;DemographicField&gt; should render review version" time="0.045">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimsListItemV2&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:36" time="0.362" tests="10">
    <testcase classname="&lt;ClaimsListItemV2&gt; should not show any flags" name="&lt;ClaimsListItemV2&gt; should not show any flags" time="0.224">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should show closed status" name="&lt;ClaimsListItemV2&gt; should show closed status" time="0.004">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should show the status" name="&lt;ClaimsListItemV2&gt; should show the status" time="0.002">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should show development letter flag" name="&lt;ClaimsListItemV2&gt; should show development letter flag" time="0.003">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should show decision letter flag" name="&lt;ClaimsListItemV2&gt; should show decision letter flag" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should show items needed flag" name="&lt;ClaimsListItemV2&gt; should show items needed flag" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should hide flags when complete" name="&lt;ClaimsListItemV2&gt; should hide flags when complete" time="0.002">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should render a status circle with the `open` class" name="&lt;ClaimsListItemV2&gt; should render a status circle with the `open` class" time="0.006">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should render a status circle with the `closed` class" name="&lt;ClaimsListItemV2&gt; should render a status circle with the `closed` class" time="0.002">
    </testcase>
    <testcase classname="&lt;ClaimsListItemV2&gt; should render a link to the claim status page" name="&lt;ClaimsListItemV2&gt; should render a link to the claim status page" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AccountMain/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:37" time="0.336" tests="3">
    <testcase classname="&lt;AccountMain/&gt; should render the profile when the user is verified and status OK" name="&lt;AccountMain/&gt; should render the profile when the user is verified and status OK" time="0.212">
    </testcase>
    <testcase classname="&lt;AccountMain/&gt; should prompt to increase LOA when a user is not verified" name="&lt;AccountMain/&gt; should prompt to increase LOA when a user is not verified" time="0.005">
    </testcase>
    <testcase classname="&lt;AccountMain/&gt; should show an MVI error when status is not OK" name="&lt;AccountMain/&gt; should show an MVI error when status is not OK" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PreferenceItem&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:37" time="0.327" tests="2">
    <testcase classname="&lt;PreferenceItem&gt; should render" name="&lt;PreferenceItem&gt; should render" time="0.214">
    </testcase>
    <testcase classname="&lt;PreferenceItem&gt; should render remove view" name="&lt;PreferenceItem&gt; should render remove view" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Folder" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:37" time="0.31" tests="8">
    <testcase classname="Folder should render" name="Folder should render" time="0.18">
    </testcase>
    <testcase classname="Folder should show a loading screen" name="Folder should show a loading screen" time="0.002">
    </testcase>
    <testcase classname="Folder should show an error message without a reload" name="Folder should show an error message without a reload" time="0.003">
    </testcase>
    <testcase classname="Folder should show an error message with a reload" name="Folder should show an error message with a reload" time="0.002">
    </testcase>
    <testcase classname="Folder should say that there are no messages in the folder" name="Folder should say that there are no messages in the folder" time="0.001">
    </testcase>
    <testcase classname="Folder should say that no messages were found through search" name="Folder should say that no messages were found through search" time="0.001">
    </testcase>
    <testcase classname="Folder should show folder controls and messages" name="Folder should show folder controls and messages" time="0.003">
    </testcase>
    <testcase classname="Folder should show messages found through search" name="Folder should show messages found through search" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;StatusPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:37" time="0.256" tests="3">
    <testcase classname="&lt;StatusPage&gt; should render" name="&lt;StatusPage&gt; should render" time="0.08">
    </testcase>
    <testcase classname="&lt;StatusPage&gt; should show title and print button" name="&lt;StatusPage&gt; should show title and print button" time="0.045">
    </testcase>
    <testcase classname="&lt;StatusPage&gt; should not show intro and print button if veteran is not eligible" name="&lt;StatusPage&gt; should not show intro and print button if veteran is not eligible" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:37" time="0.36" tests="2">
    <testcase classname="&lt;ConfirmationPage&gt; should render" name="&lt;ConfirmationPage&gt; should render" time="0.237">
    </testcase>
    <testcase classname="&lt;ConfirmationPage&gt; should expand documents" name="&lt;ConfirmationPage&gt; should expand documents" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;IntroPage/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:37" time="0.348" tests="6">
    <testcase classname="&lt;IntroPage/&gt; should call getServiceAvailability()" name="&lt;IntroPage/&gt; should call getServiceAvailability()" time="0.21">
    </testcase>
    <testcase classname="&lt;IntroPage/&gt; should render a LoadingIndicator" name="&lt;IntroPage/&gt; should render a LoadingIndicator" time="0.004">
    </testcase>
    <testcase classname="&lt;IntroPage/&gt; should render a link to /status" name="&lt;IntroPage/&gt; should render a link to /status" time="0.02">
    </testcase>
    <testcase classname="&lt;IntroPage/&gt; when brand consolidation is enabled should render a success Alert when downtime is not scheduled to start soon" name="&lt;IntroPage/&gt; when brand consolidation is enabled should render a success Alert when downtime is not scheduled to start soon" time="0.004">
    </testcase>
    <testcase classname="&lt;IntroPage/&gt; when brand consolidation is enabled should render a warning Alert when downtime is scheduled to start soon" name="&lt;IntroPage/&gt; when brand consolidation is enabled should render a warning Alert when downtime is scheduled to start soon" time="0.002">
    </testcase>
    <testcase classname="&lt;IntroPage/&gt; should render an error Alert when GIBS status down" name="&lt;IntroPage/&gt; should render an error Alert when GIBS status down" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Disability benefits 526EZ payment view" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:38" time="0.388" tests="3">
    <testcase classname="Disability benefits 526EZ payment view should render payment info when available" name="Disability benefits 526EZ payment view should render payment info when available" time="0.188">
    </testcase>
    <testcase classname="Disability benefits 526EZ payment view should render payment info when provided" name="Disability benefits 526EZ payment view should render payment info when provided" time="0.029">
    </testcase>
    <testcase classname="Disability benefits 526EZ payment view should render help when no payment info provided" name="Disability benefits 526EZ payment view should render help when no payment info provided" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="5495 schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:38" time="0.366" tests="2">
    <testcase classname="5495 schema tests should validate maximal-test.json" name="5495 schema tests should validate maximal-test.json" time="0.007">
    </testcase>
    <testcase classname="5495 schema tests should validate minimal-test.json" name="5495 schema tests should validate minimal-test.json" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform definition fullName" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:38" time="0.361" tests="1">
    <testcase classname="Schemaform definition fullName should render fullName" name="Schemaform definition fullName should render fullName" time="0.254">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Main&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:39" time="0.361" tests="1">
    <testcase classname="&lt;Main&gt; should render" name="&lt;Main&gt; should render" time="0.237">
    </testcase>
  </testsuite>
  <testsuite name="mapStateToProps" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:39" time="0.347" tests="8">
    <testcase classname="mapStateToProps should set shouldSendRequest to true when scheduled downtime is not ready and a request is not pending" name="mapStateToProps should set shouldSendRequest to true when scheduled downtime is not ready and a request is not pending" time="0.017">
    </testcase>
    <testcase classname="mapStateToProps should have properties of a downtime object if downtime is found" name="mapStateToProps should have properties of a downtime object if downtime is found" time="0.026">
    </testcase>
    <testcase classname="&lt;DowntimeNotification/&gt; calls getScheduledDowntime when rendered" name="&lt;DowntimeNotification/&gt; calls getScheduledDowntime when rendered" time="0.151">
    </testcase>
    <testcase classname="&lt;DowntimeNotification/&gt; No impending downtime should render the children components when there are no dependencies" name="&lt;DowntimeNotification/&gt; No impending downtime should render the children components when there are no dependencies" time="0.002">
    </testcase>
    <testcase classname="&lt;DowntimeNotification/&gt; No impending downtime should render the children components when dependencies have no downtime" name="&lt;DowntimeNotification/&gt; No impending downtime should render the children components when dependencies have no downtime" time="0.002">
    </testcase>
    <testcase classname="&lt;DowntimeNotification/&gt; Approaching downtime should render the children and a Modal when downtime is approaching" name="&lt;DowntimeNotification/&gt; Approaching downtime should render the children and a Modal when downtime is approaching" time="0.019">
    </testcase>
    <testcase classname="&lt;DowntimeNotification/&gt; In downtime should not render the children when we are in downtime and instead show an AlertBox" name="&lt;DowntimeNotification/&gt; In downtime should not render the children when we are in downtime and instead show an AlertBox" time="0.008">
    </testcase>
    <testcase classname="&lt;DowntimeNotification/&gt; custom render allows a custom render property" name="&lt;DowntimeNotification/&gt; custom render allows a custom render property" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1995 &lt;IntroductionPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:39" time="0.333" tests="1">
    <testcase classname="Edu 1995 &lt;IntroductionPage&gt; should render" name="Edu 1995 &lt;IntroductionPage&gt; should render" time="0.217">
    </testcase>
  </testsuite>
  <testsuite name="Edu additionalBenefits page" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:39" time="0.387" tests="2">
    <testcase classname="Edu additionalBenefits page should render" name="Edu additionalBenefits page should render" time="0.248">
    </testcase>
    <testcase classname="Edu additionalBenefits page should show fund source when checked" name="Edu additionalBenefits page should show fund source when checked" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Alert/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:39" time="0.276" tests="5">
    <testcase classname="&lt;Alert/&gt; should render" name="&lt;Alert/&gt; should render" time="0.166">
    </testcase>
    <testcase classname="&lt;Alert/&gt; should apply warning styling on take_action alert types" name="&lt;Alert/&gt; should apply warning styling on take_action alert types" time="0.003">
    </testcase>
    <testcase classname="&lt;Alert/&gt; should apply info styling on info alert types" name="&lt;Alert/&gt; should apply info styling on info alert types" time="0.002">
    </testcase>
    <testcase classname="&lt;Alert/&gt; should display a title passed in as a prop" name="&lt;Alert/&gt; should display a title passed in as a prop" time="0.003">
    </testcase>
    <testcase classname="&lt;Alert/&gt; should display a description passed in as a prop" name="&lt;Alert/&gt; should display a description passed in as a prop" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealListItemV2/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:39" time="0.439" tests="9">
    <testcase classname="&lt;AppealListItemV2/&gt; should render" name="&lt;AppealListItemV2/&gt; should render" time="0.248">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should append open class to status-circle div when status active" name="&lt;AppealListItemV2/&gt; should append open class to status-circle div when status active" time="0.003">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should append closed class to status-circle div when status inactive" name="&lt;AppealListItemV2/&gt; should append closed class to status-circle div when status inactive" time="0.017">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should show the right date in the header" name="&lt;AppealListItemV2/&gt; should show the right date in the header" time="0.01">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should say &quot;issue&quot; if there is only one issue on appeal" name="&lt;AppealListItemV2/&gt; should say &quot;issue&quot; if there is only one issue on appeal" time="0.006">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should say &quot;issues&quot; if there are multiple issues on appeal" name="&lt;AppealListItemV2/&gt; should say &quot;issues&quot; if there are multiple issues on appeal" time="0.006">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should create a link to the appeal status page" name="&lt;AppealListItemV2/&gt; should create a link to the appeal status page" time="0.002">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should not show the issue text if no description is given" name="&lt;AppealListItemV2/&gt; should not show the issue text if no description is given" time="0.003">
    </testcase>
    <testcase classname="&lt;AppealListItemV2/&gt; should show the issue text if a description is given" name="&lt;AppealListItemV2/&gt; should show the issue text if a description is given" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5495 &lt;IntroductionPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:40" time="0.315" tests="1">
    <testcase classname="Edu 5495 &lt;IntroductionPage&gt; should render" name="Edu 5495 &lt;IntroductionPage&gt; should render" time="0.203">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1995 militaryHistory" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:40" time="0.334" tests="1">
    <testcase classname="Edu 1995 militaryHistory should render" name="Edu 1995 militaryHistory should render" time="0.017">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PhotoPreview&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:40" time="0.292" tests="4">
    <testcase classname="&lt;PhotoPreview&gt; should render preview with src" name="&lt;PhotoPreview&gt; should render preview with src" time="0.168">
    </testcase>
    <testcase classname="&lt;PhotoPreview&gt; should fetch file metadata and update" name="&lt;PhotoPreview&gt; should fetch file metadata and update" time="0.01">
    </testcase>
    <testcase classname="&lt;PhotoPreview&gt; should render no photo chosen" name="&lt;PhotoPreview&gt; should render no photo chosen" time="0.001">
    </testcase>
    <testcase classname="&lt;PhotoPreview&gt; should render processing message" name="&lt;PhotoPreview&gt; should render processing message" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="781 getPtsdClassification" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:41" time="0.302" tests="7">
    <testcase classname="781 getPtsdClassification Combat classification content is correct" name="781 getPtsdClassification Combat classification content is correct" time="0.003">
    </testcase>
    <testcase classname="781 getPtsdClassification Non-combat classification content is correct" name="781 getPtsdClassification Non-combat classification content is correct" time="0.001">
    </testcase>
    <testcase classname="781 getPtsdClassification Combat and non-combat incident text is correct" name="781 getPtsdClassification Combat and non-combat incident text is correct" time="0">
    </testcase>
    <testcase classname="781a getPtsdClassification Assault classification content is correct" name="781a getPtsdClassification Assault classification content is correct" time="0.001">
    </testcase>
    <testcase classname="781a getPtsdClassification MST classification content is correct" name="781a getPtsdClassification MST classification content is correct" time="0">
    </testcase>
    <testcase classname="781a getPtsdClassification Assault and MST classification content is correct" name="781a getPtsdClassification Assault and MST classification content is correct" time="0.001">
    </testcase>
    <testcase classname="PtsdNameTitle renders correctly" name="PtsdNameTitle renders correctly" time="0.182">
    </testcase>
  </testsuite>
  <testsuite name="createRoutes" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:41" time="0.317" tests="1">
    <testcase classname="createRoutes should create routes with save enabled" name="createRoutes should create routes with save enabled" time="0.217">
    </testcase>
  </testsuite>
  <testsuite name="&lt;KeywordSearch&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:41" time="0.331" tests="3">
    <testcase classname="&lt;KeywordSearch&gt; should render" name="&lt;KeywordSearch&gt; should render" time="0.193">
    </testcase>
    <testcase classname="&lt;KeywordSearch&gt; should open suggestion list when input is filled with text" name="&lt;KeywordSearch&gt; should open suggestion list when input is filled with text" time="0.014">
    </testcase>
    <testcase classname="&lt;KeywordSearch&gt; should call on select when an suggestion is selected" name="&lt;KeywordSearch&gt; should call on select when an suggestion is selected" time="0.016">
    </testcase>
  </testsuite>
  <testsuite name="Pensions helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:41" time="0.314" tests="6">
    <testcase classname="Pensions helpers fileHelp should render" name="Pensions helpers fileHelp should render" time="0.056">
    </testcase>
    <testcase classname="Pensions helpers fileHelp should show disabled child bullet" name="Pensions helpers fileHelp should show disabled child bullet" time="0.001">
    </testcase>
    <testcase classname="Pensions helpers fileHelp should show school child bullet" name="Pensions helpers fileHelp should show school child bullet" time="0">
    </testcase>
    <testcase classname="Pensions helpers submit should reject if initial request fails" name="Pensions helpers submit should reject if initial request fails" time="0.14">
    </testcase>
    <testcase classname="Pensions helpers submit should resolve if polling state is success" name="Pensions helpers submit should resolve if polling state is success" time="0.006">
    </testcase>
    <testcase classname="Pensions helpers submit should reject if polling state is failed" name="Pensions helpers submit should reject if polling state is failed" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Vet360EditModal/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:41" time="0.305" tests="1">
    <testcase classname="&lt;Vet360EditModal/&gt; renders with the correct props" name="&lt;Vet360EditModal/&gt; renders with the correct props" time="0.189">
    </testcase>
  </testsuite>
  <testsuite name="1990n schema tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:41" time="0.337" tests="2">
    <testcase classname="1990n schema tests should validate maximal-test.json" name="1990n schema tests should validate maximal-test.json" time="0.005">
    </testcase>
    <testcase classname="1990n schema tests should validate minimal-test.json" name="1990n schema tests should validate minimal-test.json" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;OptOutWizard&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:42" time="0.377" tests="3">
    <testcase classname="&lt;OptOutWizard&gt; should show opt out button" name="&lt;OptOutWizard&gt; should show opt out button" time="0.204">
    </testcase>
    <testcase classname="&lt;OptOutWizard&gt; should show modal when opt out button is clicked" name="&lt;OptOutWizard&gt; should show modal when opt out button is clicked" time="0.011">
    </testcase>
    <testcase classname="&lt;OptOutWizard&gt; should close modal" name="&lt;OptOutWizard&gt; should close modal" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="MessagingApp" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:42" time="0.36" tests="1">
    <testcase classname="MessagingApp should render" name="MessagingApp should render" time="0.112">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Main/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:42" time="0.351" tests="3">
    <testcase classname="&lt;Main/&gt; should render with DefaultView" name="&lt;Main/&gt; should render with DefaultView" time="0.196">
    </testcase>
    <testcase classname="&lt;Main/&gt; should render FeedbackForm with correct props" name="&lt;Main/&gt; should render FeedbackForm with correct props" time="0.02">
    </testcase>
    <testcase classname="&lt;Main/&gt; should render FeedbackSubmitted" name="&lt;Main/&gt; should render FeedbackSubmitted" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="1" timestamp="2018-12-06T00:50:42" time="0.33" tests="3">
    <testcase classname="&lt;ConfirmationPage&gt; should render unverified" name="&lt;ConfirmationPage&gt; should render unverified" time="0.206">
    </testcase>
    <testcase classname="&lt;ConfirmationPage&gt; should render not signed in" name="&lt;ConfirmationPage&gt; should render not signed in" time="0.012">
    </testcase>
    <testcase classname="&lt;ConfirmationPage&gt; should render verified and signed in" name="&lt;ConfirmationPage&gt; should render verified and signed in" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="eligibility reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:43" time="0.155" tests="3">
    <testcase classname="eligibility reducer should reset spouse active duty field after choosing military status" name="eligibility reducer should reset spouse active duty field after choosing military status" time="0.044">
    </testcase>
    <testcase classname="eligibility reducer should reset fields after choosing GI Bill" name="eligibility reducer should reset fields after choosing GI Bill" time="0.004">
    </testcase>
    <testcase classname="eligibility reducer should update eligibility for general field" name="eligibility reducer should update eligibility for general field" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ITF reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:42" time="0.37" tests="7">
    <testcase classname="ITF reducer should handle ITF_FETCH_INITIATED" name="ITF reducer should handle ITF_FETCH_INITIATED" time="0.008">
    </testcase>
    <testcase classname="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the active one if present" name="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the active one if present" time="0.001">
    </testcase>
    <testcase classname="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the one with the latest expiration date if no active one is present" name="ITF reducer ITF_FETCH_SUCCEEDED should set the currentITF to the one with the latest expiration date if no active one is present" time="0.001">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_FETCH_FAILED" name="ITF reducer should handle ITF_FETCH_FAILED" time="0">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_CREATION_INITIATED" name="ITF reducer should handle ITF_CREATION_INITIATED" time="0">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_CREATION_SUCCEEDED" name="ITF reducer should handle ITF_CREATION_SUCCEEDED" time="0">
    </testcase>
    <testcase classname="ITF reducer should handle ITF_CREATION_FAILED" name="ITF reducer should handle ITF_CREATION_FAILED" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;VeteranBenefitSummaryLetter&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:43" time="0.337" tests="7">
    <testcase classname="&lt;VeteranBenefitSummaryLetter&gt; renders" name="&lt;VeteranBenefitSummaryLetter&gt; renders" time="0.102">
    </testcase>
    <testcase classname="&lt;VeteranBenefitSummaryLetter&gt; should show benefit info options" name="&lt;VeteranBenefitSummaryLetter&gt; should show benefit info options" time="0.004">
    </testcase>
    <testcase classname="&lt;VeteranBenefitSummaryLetter&gt; should show service info options" name="&lt;VeteranBenefitSummaryLetter&gt; should show service info options" time="0.002">
    </testcase>
    <testcase classname="&lt;VeteranBenefitSummaryLetter&gt; renders error and hides benefit table if options not available" name="&lt;VeteranBenefitSummaryLetter&gt; renders error and hides benefit table if options not available" time="0.046">
    </testcase>
    <testcase classname="&lt;VeteranBenefitSummaryLetter&gt; maps each service entry to its own table row" name="&lt;VeteranBenefitSummaryLetter&gt; maps each service entry to its own table row" time="0.002">
    </testcase>
    <testcase classname="&lt;VeteranBenefitSummaryLetter&gt; handles check and uncheck events" name="&lt;VeteranBenefitSummaryLetter&gt; handles check and uncheck events" time="0.02">
    </testcase>
    <testcase classname="&lt;VeteranBenefitSummaryLetter&gt; Does not render dependent options for veterans" name="&lt;VeteranBenefitSummaryLetter&gt; Does not render dependent options for veterans" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RateLimiter&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:43" time="0.301" tests="5">
    <testcase classname="&lt;RateLimiter&gt; should display limited content when under threshold" name="&lt;RateLimiter&gt; should display limited content when under threshold" time="0.19">
    </testcase>
    <testcase classname="&lt;RateLimiter&gt; should display loading indicator when waiting for profile" name="&lt;RateLimiter&gt; should display loading indicator when waiting for profile" time="0.006">
    </testcase>
    <testcase classname="&lt;RateLimiter&gt; should display real content when over threshold" name="&lt;RateLimiter&gt; should display real content when over threshold" time="0.001">
    </testcase>
    <testcase classname="&lt;RateLimiter&gt; should display real content when bypassLimit returns true" name="&lt;RateLimiter&gt; should display real content when bypassLimit returns true" time="0.001">
    </testcase>
    <testcase classname="&lt;RateLimiter&gt; should display real content when disabled through session storage" name="&lt;RateLimiter&gt; should display real content when disabled through session storage" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;FeedbackForm/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:43" time="0.328" tests="3">
    <testcase classname="&lt;FeedbackForm/&gt; should render" name="&lt;FeedbackForm/&gt; should render" time="0.204">
    </testcase>
    <testcase classname="&lt;FeedbackForm/&gt; should render with an error message" name="&lt;FeedbackForm/&gt; should render with an error message" time="0.004">
    </testcase>
    <testcase classname="&lt;FeedbackForm/&gt; submits the form information" name="&lt;FeedbackForm/&gt; submits the form information" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="686 &lt;AuthorizationComponent&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:44" time="0.307" tests="3">
    <testcase classname="686 &lt;AuthorizationComponent&gt; should render loading indicator" name="686 &lt;AuthorizationComponent&gt; should render loading indicator" time="0.172">
    </testcase>
    <testcase classname="686 &lt;AuthorizationComponent&gt; should display inner content if authorized" name="686 &lt;AuthorizationComponent&gt; should display inner content if authorized" time="0.002">
    </testcase>
    <testcase classname="686 &lt;AuthorizationComponent&gt; should not display inner content if not authorized" name="686 &lt;AuthorizationComponent&gt; should not display inner content if not authorized" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Preneed helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:44" time="0.296" tests="3">
    <testcase classname="Preneed helpers transform should remove view fields" name="Preneed helpers transform should remove view fields" time="0.187">
    </testcase>
    <testcase classname="Preneed helpers transform should populate service name" name="Preneed helpers transform should populate service name" time="0">
    </testcase>
    <testcase classname="Preneed helpers transform should remove partial addresses" name="Preneed helpers transform should remove partial addresses" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="VRE Chapter 36 &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:44" time="0.306" tests="2">
    <testcase classname="VRE Chapter 36 &lt;ConfirmationPage&gt; should render" name="VRE Chapter 36 &lt;ConfirmationPage&gt; should render" time="0.201">
    </testcase>
    <testcase classname="VRE Chapter 36 &lt;ConfirmationPage&gt; should render applicant name" name="VRE Chapter 36 &lt;ConfirmationPage&gt; should render applicant name" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DownloadLetters&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:44" time="0.332" tests="3">
    <testcase classname="&lt;DownloadLetters&gt; should render" name="&lt;DownloadLetters&gt; should render" time="0.198">
    </testcase>
    <testcase classname="&lt;DownloadLetters&gt; should render button when at /confirm-address" name="&lt;DownloadLetters&gt; should render button when at /confirm-address" time="0.002">
    </testcase>
    <testcase classname="&lt;DownloadLetters&gt; should navigate to /letter-list when button is clicked" name="&lt;DownloadLetters&gt; should navigate to /letter-list when button is clicked" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="MessageSearch" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:44" time="0.276" tests="5">
    <testcase classname="MessageSearch should render" name="MessageSearch should render" time="0.107">
    </testcase>
    <testcase classname="MessageSearch should show basic search" name="MessageSearch should show basic search" time="0.001">
    </testcase>
    <testcase classname="MessageSearch should not show basic search when showing advanced search" name="MessageSearch should not show basic search when showing advanced search" time="0">
    </testcase>
    <testcase classname="MessageSearch should submit basic search when advanced is hidden" name="MessageSearch should submit basic search when advanced is hidden" time="0.018">
    </testcase>
    <testcase classname="MessageSearch should submit advanced search when advanced is visible" name="MessageSearch should submit advanced search when advanced is visible" time="0.051">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DurationCard/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:44" time="0.289" tests="4">
    <testcase classname="&lt;DurationCard/&gt; should render" name="&lt;DurationCard/&gt; should render" time="0.179">
    </testcase>
    <testcase classname="&lt;DurationCard/&gt; should not render if no duration text passed in" name="&lt;DurationCard/&gt; should not render if no duration text passed in" time="0">
    </testcase>
    <testcase classname="&lt;DurationCard/&gt; should render a passed in durationText string" name="&lt;DurationCard/&gt; should render a passed in durationText string" time="0.005">
    </testcase>
    <testcase classname="&lt;DurationCard/&gt; should render a passed in cardDescription string" name="&lt;DurationCard/&gt; should render a passed in cardDescription string" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Vet360EditModalActionButtons/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:45" time="0.303" tests="3">
    <testcase classname="&lt;Vet360EditModalActionButtons/&gt; renders correctly when delete enabled" name="&lt;Vet360EditModalActionButtons/&gt; renders correctly when delete enabled" time="0.18">
    </testcase>
    <testcase classname="&lt;Vet360EditModalActionButtons/&gt; renders correctly when delete triggered" name="&lt;Vet360EditModalActionButtons/&gt; renders correctly when delete triggered" time="0.008">
    </testcase>
    <testcase classname="&lt;Vet360EditModalActionButtons/&gt; renders correctly when delete disabled" name="&lt;Vet360EditModalActionButtons/&gt; renders correctly when delete disabled" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="Appeals V2 Docket" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:45" time="0.296" tests="9">
    <testcase classname="Appeals V2 Docket should render" name="Appeals V2 Docket should render" time="0.17">
    </testcase>
    <testcase classname="Appeals V2 Docket should display frontOfDocket text" name="Appeals V2 Docket should display frontOfDocket text" time="0.001">
    </testcase>
    <testcase classname="Appeals V2 Docket should display non-frontOfDocket text" name="Appeals V2 Docket should display non-frontOfDocket text" time="0.002">
    </testcase>
    <testcase classname="Appeals V2 Docket should render DocketCard" name="Appeals V2 Docket should render DocketCard" time="0.003">
    </testcase>
    <testcase classname="Appeals V2 Docket should not render DocketCard for aod" name="Appeals V2 Docket should not render DocketCard for aod" time="0.002">
    </testcase>
    <testcase classname="Appeals V2 Docket should not render DocketCard for postCavcRemand" name="Appeals V2 Docket should not render DocketCard for postCavcRemand" time="0.002">
    </testcase>
    <testcase classname="Appeals V2 Docket should render aod when both aod and appeal type postCavcRemand" name="Appeals V2 Docket should render aod when both aod and appeal type postCavcRemand" time="0.005">
    </testcase>
    <testcase classname="Appeals V2 Docket should display aod text" name="Appeals V2 Docket should display aod text" time="0">
    </testcase>
    <testcase classname="Appeals V2 Docket should display postCavcRemand text" name="Appeals V2 Docket should display postCavcRemand text" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="GI Feedback Tool &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:45" time="0.365" tests="3">
    <testcase classname="GI Feedback Tool &lt;ConfirmationPage&gt; should render" name="GI Feedback Tool &lt;ConfirmationPage&gt; should render" time="0.254">
    </testcase>
    <testcase classname="GI Feedback Tool &lt;ConfirmationPage&gt; should render without the name properties" name="GI Feedback Tool &lt;ConfirmationPage&gt; should render without the name properties" time="0.004">
    </testcase>
    <testcase classname="GI Feedback Tool &lt;ConfirmationPage&gt; should render without the response properties" name="GI Feedback Tool &lt;ConfirmationPage&gt; should render without the response properties" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="DisabilityGate" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:46" time="0.391" tests="4">
    <testcase classname="DisabilityGate should render the children if pre-fill hasn&apos;t returned yet" name="DisabilityGate should render the children if pre-fill hasn&apos;t returned yet" time="0.246">
    </testcase>
    <testcase classname="DisabilityGate should render the children if there is at least one eligible disability" name="DisabilityGate should render the children if there is at least one eligible disability" time="0.002">
    </testcase>
    <testcase classname="DisabilityGate should render an alert if there are no eligible disabilities" name="DisabilityGate should render an alert if there are no eligible disabilities" time="0.016">
    </testcase>
    <testcase classname="DisabilityGate should render an alert if the pre-fill call failed" name="DisabilityGate should render an alert if the pre-fill call failed" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonBack&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:46" time="0.375" tests="1">
    <testcase classname="&lt;ButtonBack&gt; should render correctly" name="&lt;ButtonBack&gt; should render correctly" time="0.251">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Vet360ProfileField/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:46" time="0.827" tests="3">
    <testcase classname="&lt;Vet360ProfileField/&gt; renders nothing when there are no successful or errored transactions" name="&lt;Vet360ProfileField/&gt; renders nothing when there are no successful or errored transactions" time="0.64">
    </testcase>
    <testcase classname="&lt;Vet360ProfileField/&gt; renders a success or error component when there are success or errored transactions" name="&lt;Vet360ProfileField/&gt; renders a success or error component when there are success or errored transactions" time="0.008">
    </testcase>
    <testcase classname="&lt;Vet360ProfileField/&gt; calls clearTransaction on each errored transaction" name="&lt;Vet360ProfileField/&gt; calls clearTransaction on each errored transaction" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealsV2DetailPage/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:46" time="0.299" tests="2">
    <testcase classname="&lt;AppealsV2DetailPage/&gt; renders" name="&lt;AppealsV2DetailPage/&gt; renders" time="0.183">
    </testcase>
    <testcase classname="&lt;AppealsV2DetailPage/&gt; renders the &lt;Issues/&gt; component" name="&lt;AppealsV2DetailPage/&gt; renders the &lt;Issues/&gt; component" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Timeline/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:46" time="0.319" tests="12">
    <testcase classname="&lt;Timeline/&gt; should render" name="&lt;Timeline/&gt; should render" time="0.18">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should render one expander item if events present" name="&lt;Timeline/&gt; should render one expander item if events present" time="0.002">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should not render any past events by default" name="&lt;Timeline/&gt; should not render any past events by default" time="0.002">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should toggle expanded state when toggleExpanded called" name="&lt;Timeline/&gt; should toggle expanded state when toggleExpanded called" time="0.004">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should render past events when expanded state is true" name="&lt;Timeline/&gt; should render past events when expanded state is true" time="0.002">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should render nothing for past events if no events in list" name="&lt;Timeline/&gt; should render nothing for past events if no events in list" time="0.002">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should pass formatted date range to the Expander" name="&lt;Timeline/&gt; should pass formatted date range to the Expander" time="0.001">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should pass empty string as dateRange to Expander when no events" name="&lt;Timeline/&gt; should pass empty string as dateRange to Expander when no events" time="0.001">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should pass all required props to PastEvents" name="&lt;Timeline/&gt; should pass all required props to PastEvents" time="0.004">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should pass all required props to Expander" name="&lt;Timeline/&gt; should pass all required props to Expander" time="0.002">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should pass updated props to Expander when state toggled" name="&lt;Timeline/&gt; should pass updated props to Expander when state toggled" time="0.003">
    </testcase>
    <testcase classname="&lt;Timeline/&gt; should not render unknown events" name="&lt;Timeline/&gt; should not render unknown events" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990n &lt;IntroductionPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:47" time="0.397" tests="1">
    <testcase classname="Edu 1990n &lt;IntroductionPage&gt; should render" name="Edu 1990n &lt;IntroductionPage&gt; should render" time="0.266">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5490 &lt;IntroductionPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:47" time="0.427" tests="1">
    <testcase classname="Edu 5490 &lt;IntroductionPage&gt; should render" name="Edu 5490 &lt;IntroductionPage&gt; should render" time="0.28">
    </testcase>
  </testsuite>
  <testsuite name="Edu 5495 &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:47" time="0.419" tests="1">
    <testcase classname="Edu 5495 &lt;ConfirmationPage&gt; should render" name="Edu 5495 &lt;ConfirmationPage&gt; should render" time="0.279">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PrintPage/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:47" time="0.323" tests="6">
    <testcase classname="&lt;PrintPage/&gt; should render" name="&lt;PrintPage/&gt; should render" time="0.188">
    </testcase>
    <testcase classname="&lt;PrintPage/&gt; renders a UserInfoSection child" name="&lt;PrintPage/&gt; renders a UserInfoSection child" time="0.003">
    </testcase>
    <testcase classname="&lt;PrintPage/&gt; should render a print button" name="&lt;PrintPage/&gt; should render a print button" time="0.002">
    </testcase>
    <testcase classname="&lt;PrintPage/&gt; should render a back to statement button" name="&lt;PrintPage/&gt; should render a back to statement button" time="0.002">
    </testcase>
    <testcase classname="&lt;PrintPage/&gt; should fire a print request when print button clicked" name="&lt;PrintPage/&gt; should fire a print request when print button clicked" time="0.004">
    </testcase>
    <testcase classname="&lt;PrintPage/&gt; should navigate to statement when back to statement button clicked" name="&lt;PrintPage/&gt; should navigate to statement when back to statement button clicked" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DashboardApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:48" time="0.339" tests="4">
    <testcase classname="&lt;DashboardApp&gt; should render" name="&lt;DashboardApp&gt; should render" time="0.2">
    </testcase>
    <testcase classname="&lt;DashboardApp&gt; should render verification state if LOA != 3" name="&lt;DashboardApp&gt; should render verification state if LOA != 3" time="0.005">
    </testcase>
    <testcase classname="&lt;DashboardApp&gt; should render MVI warning state if status not OK" name="&lt;DashboardApp&gt; should render MVI warning state if status not OK" time="0.004">
    </testcase>
    <testcase classname="&lt;DashboardApp&gt; should not render warnings if information available" name="&lt;DashboardApp&gt; should not render warnings if information available" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="686 &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:48" time="0.337" tests="2">
    <testcase classname="686 &lt;ConfirmationPage&gt; should render" name="686 &lt;ConfirmationPage&gt; should render" time="0.226">
    </testcase>
    <testcase classname="686 &lt;ConfirmationPage&gt; should render without the response properties" name="686 &lt;ConfirmationPage&gt; should render without the response properties" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Opt Out &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:48" time="0.375" tests="2">
    <testcase classname="Opt Out &lt;ConfirmationPage&gt; should render" name="Opt Out &lt;ConfirmationPage&gt; should render" time="0.26">
    </testcase>
    <testcase classname="Opt Out &lt;ConfirmationPage&gt; should render without the response properties" name="Opt Out &lt;ConfirmationPage&gt; should render without the response properties" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealNotFound/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:48" time="0.305" tests="3">
    <testcase classname="&lt;AppealNotFound/&gt; renders" name="&lt;AppealNotFound/&gt; renders" time="0.184">
    </testcase>
    <testcase classname="&lt;AppealNotFound/&gt; renders a heading" name="&lt;AppealNotFound/&gt; renders a heading" time="0.003">
    </testcase>
    <testcase classname="&lt;AppealNotFound/&gt; renders a React Router link back to claims page" name="&lt;AppealNotFound/&gt; renders a React Router link back to claims page" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PreferenceOption&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:48" time="0.29" tests="1">
    <testcase classname="&lt;PreferenceOption&gt; should render" name="&lt;PreferenceOption&gt; should render" time="0.182">
    </testcase>
  </testsuite>
  <testsuite name="brand-consolidation/feature-flag" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:49" time="0.318" tests="2">
    <testcase classname="brand-consolidation/feature-flag renders Vets.gov when the feature-flag is false" name="brand-consolidation/feature-flag renders Vets.gov when the feature-flag is false" time="0.207">
    </testcase>
    <testcase classname="brand-consolidation/feature-flag renders VA.gov when the feature-flag is true" name="brand-consolidation/feature-flag renders VA.gov when the feature-flag is true" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimPhase&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:49" time="0.249" tests="18">
    <testcase classname="&lt;ClaimPhase&gt; should render activity when on current phase" name="&lt;ClaimPhase&gt; should render activity when on current phase" time="0.003">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; should not render activity when on current phase" name="&lt;ClaimPhase&gt; should not render activity when on current phase" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; should display filed message" name="&lt;ClaimPhase&gt; should display filed message" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; should display requested message" name="&lt;ClaimPhase&gt; should display requested message" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; should display show older updates button" name="&lt;ClaimPhase&gt; should display show older updates button" time="0.044">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show entered description" name="&lt;ClaimPhase&gt; event descriptions should show entered description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show file description" name="&lt;ClaimPhase&gt; event descriptions should show file description" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show completed description" name="&lt;ClaimPhase&gt; event descriptions should show completed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show received from you reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show received from you reviewed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show received from you not reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show received from you not reviewed description" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show received from others reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show received from others reviewed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show received from others not reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show received from others not reviewed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show still need from you not reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show still need from you not reviewed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show still need from you reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show still need from you reviewed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show still need from others reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show still need from others reviewed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show still need from others not reviewed description" name="&lt;ClaimPhase&gt; event descriptions should show still need from others not reviewed description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show never received from others description" name="&lt;ClaimPhase&gt; event descriptions should show never received from others description" time="0">
    </testcase>
    <testcase classname="&lt;ClaimPhase&gt; event descriptions should show never received from you description" name="&lt;ClaimPhase&gt; event descriptions should show never received from you description" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ErrorView&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:49" time="0.257" tests="5">
    <testcase classname="&lt;ErrorView&gt; should render" name="&lt;ErrorView&gt; should render" time="0.079">
    </testcase>
    <testcase classname="&lt;ErrorView&gt; should render children when there are no errors" name="&lt;ErrorView&gt; should render children when there are no errors" time="0.018">
    </testcase>
    <testcase classname="&lt;ErrorView&gt; should render children when errors are non-blocking" name="&lt;ErrorView&gt; should render children when errors are non-blocking" time="0.011">
    </testcase>
    <testcase classname="&lt;ErrorView&gt; should render alert errors as expected" name="&lt;ErrorView&gt; should render alert errors as expected" time="0.017">
    </testcase>
    <testcase classname="&lt;ErrorView&gt; should render non-alert errors correctly" name="&lt;ErrorView&gt; should render non-alert errors correctly" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Pension migrations" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:49" time="0.309" tests="8">
    <testcase classname="Pension migrations should set url to service history if validation error" name="Pension migrations should set url to service history if validation error" time="0.196">
    </testcase>
    <testcase classname="Pension migrations should set url to marriage page if dates are invalid" name="Pension migrations should set url to marriage page if dates are invalid" time="0.001">
    </testcase>
    <testcase classname="Pension migrations should set url to spouse marriage page if dates are invalid" name="Pension migrations should set url to spouse marriage page if dates are invalid" time="0.001">
    </testcase>
    <testcase classname="Pension migrations should leave return url alone if no validation issues are found" name="Pension migrations should leave return url alone if no validation issues are found" time="0.001">
    </testcase>
    <testcase classname="Pension migrations should leave return url alone if no matching data exists" name="Pension migrations should leave return url alone if no matching data exists" time="0.001">
    </testcase>
    <testcase classname="Pension migrations should set url to address page if zip is bad" name="Pension migrations should set url to address page if zip is bad" time="0.001">
    </testcase>
    <testcase classname="Pension migrations should set url to applicant info page if file number is bad" name="Pension migrations should set url to applicant info page if file number is bad" time="0.001">
    </testcase>
    <testcase classname="Pension migrations should set url to spouse info page if file number is bad" name="Pension migrations should set url to spouse info page if file number is bad" time="0">
    </testcase>
  </testsuite>
  <testsuite name="schemaform createSaveInProgressInitialState" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:50" time="0.291" tests="13">
    <testcase classname="schemaform createSaveInProgressInitialState creates a reducer with initial state for each page" name="schemaform createSaveInProgressInitialState creates a reducer with initial state for each page" time="0.002">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should set save form status" name="schemaform createSaveInProgressInitialState reducer should set save form status" time="0.001">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should set auto save form status" name="schemaform createSaveInProgressInitialState reducer should set auto save form status" time="0">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should reset auto saved form status on error" name="schemaform createSaveInProgressInitialState reducer should reset auto saved form status on error" time="0">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should set fetch form status" name="schemaform createSaveInProgressInitialState reducer should set fetch form status" time="0">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should set in progress form data" name="schemaform createSaveInProgressInitialState reducer should set in progress form data" time="0.001">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should merge prefill data with current form" name="schemaform createSaveInProgressInitialState reducer should merge prefill data with current form" time="0.001">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should not mark prefill successful when data is empty" name="schemaform createSaveInProgressInitialState reducer should not mark prefill successful when data is empty" time="0.001">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should handle undefined formData" name="schemaform createSaveInProgressInitialState reducer should handle undefined formData" time="0">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should set fetch form pending" name="schemaform createSaveInProgressInitialState reducer should set fetch form pending" time="0">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should set fetch form pending and prefill" name="schemaform createSaveInProgressInitialState reducer should set fetch form pending and prefill" time="0.001">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should start over form" name="schemaform createSaveInProgressInitialState reducer should start over form" time="0">
    </testcase>
    <testcase classname="schemaform createSaveInProgressInitialState reducer should set prefill as unfilled" name="schemaform createSaveInProgressInitialState reducer should set prefill as unfilled" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;UserInteractionRecorder&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:50" time="0.293" tests="4">
    <testcase classname="&lt;UserInteractionRecorder&gt; does not render anything to the DOM" name="&lt;UserInteractionRecorder&gt; does not render anything to the DOM" time="0.18">
    </testcase>
    <testcase classname="&lt;UserInteractionRecorder&gt; when its props change calls the passed-in `recordEvent` function when the new value of selectedValue is in the event map" name="&lt;UserInteractionRecorder&gt; when its props change calls the passed-in `recordEvent` function when the new value of selectedValue is in the event map" time="0.004">
    </testcase>
    <testcase classname="&lt;UserInteractionRecorder&gt; when its props change does not call the passed-in `recordEvent` function when the new value of selectedValue is the same as the old value" name="&lt;UserInteractionRecorder&gt; when its props change does not call the passed-in `recordEvent` function when the new value of selectedValue is the same as the old value" time="0.002">
    </testcase>
    <testcase classname="&lt;UserInteractionRecorder&gt; when its props change does not call the passed-in `recordEvent` function when the new value of props.selectedValue is not in the event map" name="&lt;UserInteractionRecorder&gt; when its props change does not call the passed-in `recordEvent` function when the new value of props.selectedValue is not in the event map" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Appeals V2 DocketCard" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:50" time="0.31" tests="4">
    <testcase classname="Appeals V2 DocketCard should render" name="Appeals V2 DocketCard should render" time="0.195">
    </testcase>
    <testcase classname="Appeals V2 DocketCard should show the number of appeals ahead of the appellant" name="Appeals V2 DocketCard should show the number of appeals ahead of the appellant" time="0.003">
    </testcase>
    <testcase classname="Appeals V2 DocketCard should show the total number of appeals on the docket" name="Appeals V2 DocketCard should show the total number of appeals on the docket" time="0.003">
    </testcase>
    <testcase classname="Appeals V2 DocketCard should show a visual representaton of where the appellant is in the line" name="Appeals V2 DocketCard should show a visual representaton of where the appellant is in the line" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EducationWizard&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:50" time="0.258" tests="10">
    <testcase classname="&lt;EducationWizard&gt; should show button and no questions" name="&lt;EducationWizard&gt; should show button and no questions" time="0.112">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show button and first question" name="&lt;EducationWizard&gt; should show button and first question" time="0.003">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show own service question for new benefit" name="&lt;EducationWizard&gt; should show own service question for new benefit" time="0.025">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show 1990 button" name="&lt;EducationWizard&gt; should show 1990 button" time="0.002">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show 1995 button" name="&lt;EducationWizard&gt; should show 1995 button" time="0.002">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show 5495 button" name="&lt;EducationWizard&gt; should show 5495 button" time="0.001">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show 1990N button" name="&lt;EducationWizard&gt; should show 1990N button" time="0.002">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show 5490 button" name="&lt;EducationWizard&gt; should show 5490 button" time="0.002">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show 1990E button" name="&lt;EducationWizard&gt; should show 1990E button" time="0.003">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show transfer warning" name="&lt;EducationWizard&gt; should show transfer warning" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="BrandConsolidation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:50" time="0.296" tests="2">
    <testcase classname="BrandConsolidation does not render children when brandConsolidationEnabled is false" name="BrandConsolidation does not render children when brandConsolidationEnabled is false" time="0.179">
    </testcase>
    <testcase classname="BrandConsolidation does render children when brandConsolidationEnabled is true" name="BrandConsolidation does render children when brandConsolidationEnabled is true" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="VIC &lt;IntroducionPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:50" time="0.291" tests="3">
    <testcase classname="VIC &lt;IntroducionPage&gt; should render" name="VIC &lt;IntroducionPage&gt; should render" time="0.193">
    </testcase>
    <testcase classname="VIC &lt;IntroducionPage&gt; should render signed in and unverified" name="VIC &lt;IntroducionPage&gt; should render signed in and unverified" time="0.005">
    </testcase>
    <testcase classname="VIC &lt;IntroducionPage&gt; should render signed in and verified" name="VIC &lt;IntroducionPage&gt; should render signed in and verified" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="ITFBanner" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:51" time="0.326" tests="4">
    <testcase classname="ITFBanner should render an error message" name="ITFBanner should render an error message" time="0.207">
    </testcase>
    <testcase classname="ITFBanner should render an itf found message" name="ITFBanner should render an itf found message" time="0.009">
    </testcase>
    <testcase classname="ITFBanner should render an itf created message" name="ITFBanner should render an itf created message" time="0.004">
    </testcase>
    <testcase classname="ITFBanner should throw an error" name="ITFBanner should throw an error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="VRE Chapter 31 &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:51" time="0.303" tests="1">
    <testcase classname="VRE Chapter 31 &lt;ConfirmationPage&gt; should render" name="VRE Chapter 31 &lt;ConfirmationPage&gt; should render" time="0.19">
    </testcase>
  </testsuite>
  <testsuite name="EVSSClaimsGate" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:51" time="0.306" tests="2">
    <testcase classname="EVSSClaimsGate should not gate the form on the intro page" name="EVSSClaimsGate should not gate the form on the intro page" time="0.175">
    </testcase>
    <testcase classname="EVSSClaimsGate should render a RequiredLoginView" name="EVSSClaimsGate should render a RequiredLoginView" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="getCalculatedBenefits" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:51" time="0.303" tests="15">
    <testcase classname="getCalculatedBenefits should calculate no housing allowance for active duty and Ch 33" name="getCalculatedBenefits should calculate no housing allowance for active duty and Ch 33" time="0.082">
    </testcase>
    <testcase classname="getCalculatedBenefits should show Yellow Ribbon fields when eligible" name="getCalculatedBenefits should show Yellow Ribbon fields when eligible" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide Yellow Ribbon fields when school does not offer it" name="getCalculatedBenefits should hide Yellow Ribbon fields when school does not offer it" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should show the books field for GI Bill Ch 31" name="getCalculatedBenefits should show the books field for GI Bill Ch 31" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should show the buy-up field for GI Bill Ch 30" name="getCalculatedBenefits should show the buy-up field for GI Bill Ch 30" time="0">
    </testcase>
    <testcase classname="getCalculatedBenefits should show the tuition assistance field for GI Bill Ch 33 with eligible military status" name="getCalculatedBenefits should show the tuition assistance field for GI Bill Ch 33 with eligible military status" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide kicker fields for GI Bill Ch 35" name="getCalculatedBenefits should hide kicker fields for GI Bill Ch 35" time="0">
    </testcase>
    <testcase classname="getCalculatedBenefits should show the in-state field for public schols" name="getCalculatedBenefits should show the in-state field for public schols" time="0">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide kicker fields for flight schools" name="getCalculatedBenefits should hide kicker fields for flight schools" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide kicker fields for correspondence schools" name="getCalculatedBenefits should hide kicker fields for correspondence schools" time="0">
    </testcase>
    <testcase classname="getCalculatedBenefits should show scholarships in calculations if there were any" name="getCalculatedBenefits should show scholarships in calculations if there were any" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide scholarships in calculations if there were none" name="getCalculatedBenefits should hide scholarships in calculations if there were none" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide school-related fields for OJT" name="getCalculatedBenefits should hide school-related fields for OJT" time="0.001">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide term 2 and 3 calculations if only attending 1 term" name="getCalculatedBenefits should hide term 2 and 3 calculations if only attending 1 term" time="0.002">
    </testcase>
    <testcase classname="getCalculatedBenefits should hide term 3 calculations if attending fewer than 3 terms" name="getCalculatedBenefits should hide term 3 calculations if attending fewer than 3 terms" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;IdentifyFieldsWarning&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:51" time="0.277" tests="3">
    <testcase classname="&lt;IdentifyFieldsWarning&gt; should render prefill message" name="&lt;IdentifyFieldsWarning&gt; should render prefill message" time="0.176">
    </testcase>
    <testcase classname="&lt;IdentifyFieldsWarning&gt; should render warning" name="&lt;IdentifyFieldsWarning&gt; should render warning" time="0.002">
    </testcase>
    <testcase classname="&lt;IdentifyFieldsWarning&gt; should render nothing" name="&lt;IdentifyFieldsWarning&gt; should render nothing" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="summaryOfDisabilitiesDescription" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:51" time="0.289" tests="3">
    <testcase classname="summaryOfDisabilitiesDescription renders selected rated disabilities" name="summaryOfDisabilitiesDescription renders selected rated disabilities" time="0.176">
    </testcase>
    <testcase classname="summaryOfDisabilitiesDescription does not render unselected rated disabilities" name="summaryOfDisabilitiesDescription does not render unselected rated disabilities" time="0.001">
    </testcase>
    <testcase classname="summaryOfDisabilitiesDescription renders new disabilities" name="summaryOfDisabilitiesDescription renders new disabilities" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PreferenceList&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:52" time="0.266" tests="1">
    <testcase classname="&lt;PreferenceList&gt; should render" name="&lt;PreferenceList&gt; should render" time="0.159">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Expander/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:52" time="0.285" tests="6">
    <testcase classname="&lt;Expander/&gt; should render as an &lt;li/&gt;" name="&lt;Expander/&gt; should render as an &lt;li/&gt;" time="0.17">
    </testcase>
    <testcase classname="&lt;Expander/&gt; should render a button that calls onToggle prop when clicked" name="&lt;Expander/&gt; should render a button that calls onToggle prop when clicked" time="0.003">
    </testcase>
    <testcase classname="&lt;Expander/&gt; should render the correct expanded attributes" name="&lt;Expander/&gt; should render the correct expanded attributes" time="0.003">
    </testcase>
    <testcase classname="&lt;Expander/&gt; should render the correct unexpanded attributes" name="&lt;Expander/&gt; should render the correct unexpanded attributes" time="0.002">
    </testcase>
    <testcase classname="&lt;Expander/&gt; should render the missing events alert" name="&lt;Expander/&gt; should render the missing events alert" time="0.002">
    </testcase>
    <testcase classname="&lt;Expander/&gt; should not render the missing events alert when there are no missing events" name="&lt;Expander/&gt; should not render the missing events alert when there are no missing events" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 &lt;IntroductionPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:52" time="0.303" tests="1">
    <testcase classname="Edu 1990 &lt;IntroductionPage&gt; should render" name="Edu 1990 &lt;IntroductionPage&gt; should render" time="0.201">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PastEvent" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:52" time="0.278" tests="1">
    <testcase classname="&lt;PastEvent should render an &lt;li/&gt;" name="&lt;PastEvent should render an &lt;li/&gt;" time="0.174">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealHelpSidebar&gt;" errors="0" failures="0" skipped="2" timestamp="2018-12-06T00:50:52" time="0.27" tests="6">
    <testcase classname="&lt;AppealHelpSidebar&gt; should render" name="&lt;AppealHelpSidebar&gt; should render" time="0.161">
    </testcase>
    <testcase classname="&lt;AppealHelpSidebar&gt; should render the board version if location is bva" name="&lt;AppealHelpSidebar&gt; should render the board version if location is bva" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealHelpSidebar&gt; should render the board version if location is &quot;aoj&quot; and aoj is &quot;other&quot;" name="&lt;AppealHelpSidebar&gt; should render the board version if location is &quot;aoj&quot; and aoj is &quot;other&quot;" time="0.001">
    </testcase>
    <testcase classname="&lt;AppealHelpSidebar&gt; should render the vba version" name="&lt;AppealHelpSidebar&gt; should render the vba version" time="0">
    </testcase>
    <testcase classname="&lt;AppealHelpSidebar&gt; should render the vha version" name="&lt;AppealHelpSidebar&gt; should render the vha version" time="0">
      <skipped/>
    </testcase>
    <testcase classname="&lt;AppealHelpSidebar&gt; should render the nca version" name="&lt;AppealHelpSidebar&gt; should render the nca version" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealHeader/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:53" time="0.285" tests="3">
    <testcase classname="&lt;AppealHeader/&gt; renders" name="&lt;AppealHeader/&gt; renders" time="0.171">
    </testcase>
    <testcase classname="&lt;AppealHeader/&gt; renders the heading text passed in as a prop" name="&lt;AppealHeader/&gt; renders the heading text passed in as a prop" time="0.003">
    </testcase>
    <testcase classname="&lt;AppealHeader/&gt; renders a last updated &lt;p/&gt; with a formatted date and time" name="&lt;AppealHeader/&gt; renders a last updated &lt;p/&gt; with a formatted date and time" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="526 &lt;FormStartControls&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:53" time="0.288" tests="3">
    <testcase classname="526 &lt;FormStartControls&gt; should render unauthenticated view" name="526 &lt;FormStartControls&gt; should render unauthenticated view" time="0.179">
    </testcase>
    <testcase classname="526 &lt;FormStartControls&gt; should render authenticated view" name="526 &lt;FormStartControls&gt; should render authenticated view" time="0.002">
    </testcase>
    <testcase classname="526 &lt;FormStartControls&gt; should render verified view" name="526 &lt;FormStartControls&gt; should render verified view" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DefaultView/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:53" time="0.283" tests="1">
    <testcase classname="&lt;DefaultView/&gt; should render" name="&lt;DefaultView/&gt; should render" time="0.18">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Main&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:53" time="0.264" tests="2">
    <testcase classname="&lt;Main&gt; should render" name="&lt;Main&gt; should render" time="0.152">
    </testcase>
    <testcase classname="&lt;Main&gt; submit button should be enabled if form is valid" name="&lt;Main&gt; submit button should be enabled if form is valid" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="IntroductionPage" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:54" time="0.26" tests="1">
    <testcase classname="IntroductionPage should render FormStartControls" name="IntroductionPage should render FormStartControls" time="0.164">
    </testcase>
  </testsuite>
  <testsuite name="Pension validation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:54" time="0.288" tests="2">
    <testcase classname="Pension validation validateAfterMarriageDate should add error if date of marriage is after date of separation" name="Pension validation validateAfterMarriageDate should add error if date of marriage is after date of separation" time="0.175">
    </testcase>
    <testcase classname="Pension validation validateServiceBirthDates should add error if date entered is before birth date" name="Pension validation validateServiceBirthDates should add error if date entered is before birth date" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AlertsList/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:54" time="0.284" tests="4">
    <testcase classname="&lt;AlertsList/&gt; renders" name="&lt;AlertsList/&gt; renders" time="0.17">
    </testcase>
    <testcase classname="&lt;AlertsList/&gt; should render all alerts" name="&lt;AlertsList/&gt; should render all alerts" time="0.001">
    </testcase>
    <testcase classname="&lt;AlertsList/&gt; should return null if alerts prop missing" name="&lt;AlertsList/&gt; should return null if alerts prop missing" time="0.001">
    </testcase>
    <testcase classname="&lt;AlertsList/&gt; should return null if alerts array empty" name="&lt;AlertsList/&gt; should return null if alerts array empty" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DocumentRequestPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:54" time="0.276" tests="9">
    <testcase classname="&lt;DocumentRequestPage&gt; should render loading div" name="&lt;DocumentRequestPage&gt; should render loading div" time="0.115">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should render upload error alert" name="&lt;DocumentRequestPage&gt; should render upload error alert" time="0.007">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should clear upload error when leaving" name="&lt;DocumentRequestPage&gt; should clear upload error when leaving" time="0.002">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should not clear notification after completed upload" name="&lt;DocumentRequestPage&gt; should not clear notification after completed upload" time="0.001">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should render due date info" name="&lt;DocumentRequestPage&gt; should render due date info" time="0.001">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should render optional upload alert" name="&lt;DocumentRequestPage&gt; should render optional upload alert" time="0.001">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should handle submit files" name="&lt;DocumentRequestPage&gt; should handle submit files" time="0.001">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should reset uploads and set title on mount" name="&lt;DocumentRequestPage&gt; should reset uploads and set title on mount" time="0.025">
    </testcase>
    <testcase classname="&lt;DocumentRequestPage&gt; should set details and go to files page if complete" name="&lt;DocumentRequestPage&gt; should set details and go to files page if complete" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;WhatsNext/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:54" time="0.288" tests="5">
    <testcase classname="&lt;WhatsNext/&gt; renders" name="&lt;WhatsNext/&gt; renders" time="0.164">
    </testcase>
    <testcase classname="&lt;WhatsNext/&gt; renders a header title" name="&lt;WhatsNext/&gt; renders a header title" time="0.007">
    </testcase>
    <testcase classname="&lt;WhatsNext/&gt; renders a header DurationCard if headerCard property exists" name="&lt;WhatsNext/&gt; renders a header DurationCard if headerCard property exists" time="0.003">
    </testcase>
    <testcase classname="&lt;WhatsNext/&gt; does not render a header DurationCard if no headerCard property exists" name="&lt;WhatsNext/&gt; does not render a header DurationCard if no headerCard property exists" time="0.001">
    </testcase>
    <testcase classname="&lt;WhatsNext/&gt; renders a list of all next events for a given currentStatus" name="&lt;WhatsNext/&gt; renders a list of all next events for a given currentStatus" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EnrollmentPeriod&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:55" time="0.252" tests="6">
    <testcase classname="&lt;EnrollmentPeriod&gt; should render" name="&lt;EnrollmentPeriod&gt; should render" time="0.098">
    </testcase>
    <testcase classname="&lt;EnrollmentPeriod&gt; should display enrollment data" name="&lt;EnrollmentPeriod&gt; should display enrollment data" time="0.002">
    </testcase>
    <testcase classname="&lt;EnrollmentPeriod&gt; should not show change history there are no amendments" name="&lt;EnrollmentPeriod&gt; should not show change history there are no amendments" time="0">
    </testcase>
    <testcase classname="&lt;EnrollmentPeriod&gt; should show change history if there are amendments" name="&lt;EnrollmentPeriod&gt; should show change history if there are amendments" time="0.018">
    </testcase>
    <testcase classname="&lt;EnrollmentPeriod&gt; should not show change history contents when panel is collapsed" name="&lt;EnrollmentPeriod&gt; should not show change history contents when panel is collapsed" time="0.001">
    </testcase>
    <testcase classname="&lt;EnrollmentPeriod&gt; should show or hide change history contents when panel is expanded or collapsed" name="&lt;EnrollmentPeriod&gt; should show or hide change history contents when panel is expanded or collapsed" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;NextEvent/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:55" time="0.264" tests="3">
    <testcase classname="&lt;NextEvent/&gt; should render" name="&lt;NextEvent/&gt; should render" time="0.166">
    </testcase>
    <testcase classname="&lt;NextEvent/&gt; should render a separator when prop true" name="&lt;NextEvent/&gt; should render a separator when prop true" time="0.003">
    </testcase>
    <testcase classname="&lt;NextEvent/&gt; should not render a separator when prop false" name="&lt;NextEvent/&gt; should not render a separator when prop false" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Actions" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:55" time="0.241" tests="34">
    <testcase classname="Actions setNotification should return the correct action object" name="Actions setNotification should return the correct action object" time="0.003">
    </testcase>
    <testcase classname="Actions changePage should return the correct action object" name="Actions changePage should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions setUnavailable should return the correct action object" name="Actions setUnavailable should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions resetUploads should return the correct action object" name="Actions resetUploads should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions addFile should return the correct action object" name="Actions addFile should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions removeFile should return the correct action object" name="Actions removeFile should return the correct action object" time="0.001">
    </testcase>
    <testcase classname="Actions clearNotification should return the correct action object" name="Actions clearNotification should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions updateField should return the correct action object" name="Actions updateField should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions showMailOrFaxModal should return the correct action object" name="Actions showMailOrFaxModal should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions setFieldsDirty should return the correct action object" name="Actions setFieldsDirty should return the correct action object" time="0.001">
    </testcase>
    <testcase classname="Actions showConsolidatedMessage should return the correct action object" name="Actions showConsolidatedMessage should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions setLastPage should return the correct action object" name="Actions setLastPage should return the correct action object" time="0">
    </testcase>
    <testcase classname="Actions cancelUpload should call cancel on uploader" name="Actions cancelUpload should call cancel on uploader" time="0.003">
    </testcase>
    <testcase classname="Actions getAppeals should fetch claims" name="Actions getAppeals should fetch claims" time="0.046">
    </testcase>
    <testcase classname="Actions getAppeals should fail on error" name="Actions getAppeals should fail on error" time="0.001">
    </testcase>
    <testcase classname="Actions getClaimsV2 should call dispatch and pollStatus" name="Actions getClaimsV2 should call dispatch and pollStatus" time="0.002">
    </testcase>
    <testcase classname="Actions getClaimsV2 onError callback should dispatch a FETCH_CLAIMS_ERROR action" name="Actions getClaimsV2 onError callback should dispatch a FETCH_CLAIMS_ERROR action" time="0.058">
    </testcase>
    <testcase classname="Actions getClaimsV2 onSuccess callback should dispatch a FETCH_CLAIMS_SUCCESS action" name="Actions getClaimsV2 onSuccess callback should dispatch a FETCH_CLAIMS_SUCCESS action" time="0.001">
    </testcase>
    <testcase classname="Actions getClaimsV2 shouldFail predicate should return true when response.meta.syncStatus is FAILED" name="Actions getClaimsV2 shouldFail predicate should return true when response.meta.syncStatus is FAILED" time="0.002">
    </testcase>
    <testcase classname="Actions getClaimsV2 shouldFail predicate should return false when response.meta.syncStatus is not FAILED" name="Actions getClaimsV2 shouldFail predicate should return false when response.meta.syncStatus is not FAILED" time="0">
    </testcase>
    <testcase classname="Actions getClaimsV2 shouldSucceed predicate should return true when response.meta.syncStatus is SUCCESS" name="Actions getClaimsV2 shouldSucceed predicate should return true when response.meta.syncStatus is SUCCESS" time="0.001">
    </testcase>
    <testcase classname="Actions getClaimsV2 shouldSucceed predicate should return false when response.meta.syncStatus is not SUCCESS" name="Actions getClaimsV2 shouldSucceed predicate should return false when response.meta.syncStatus is not SUCCESS" time="0">
    </testcase>
    <testcase classname="Actions getClaimDetail should call dispatch and pollStatus" name="Actions getClaimDetail should call dispatch and pollStatus" time="0.001">
    </testcase>
    <testcase classname="Actions getClaimDetail onError callback should dispatch a SET_CLAIMS_UNAVAILABLE action" name="Actions getClaimDetail onError callback should dispatch a SET_CLAIMS_UNAVAILABLE action" time="0">
    </testcase>
    <testcase classname="Actions getClaimDetail onSuccess callback should dispatch a SET_CLAIM_DETAIL action" name="Actions getClaimDetail onSuccess callback should dispatch a SET_CLAIM_DETAIL action" time="0.001">
    </testcase>
    <testcase classname="Actions getClaimDetail shouldFail predicate should return true when response.meta.syncStatus is FAILED" name="Actions getClaimDetail shouldFail predicate should return true when response.meta.syncStatus is FAILED" time="0">
    </testcase>
    <testcase classname="Actions getClaimDetail shouldFail predicate should return false when response.meta.syncStatus is not FAILED" name="Actions getClaimDetail shouldFail predicate should return false when response.meta.syncStatus is not FAILED" time="0">
    </testcase>
    <testcase classname="Actions getClaimDetail shouldSucceed predicate should return true when response.meta.syncStatus is SUCCESS" name="Actions getClaimDetail shouldSucceed predicate should return true when response.meta.syncStatus is SUCCESS" time="0.001">
    </testcase>
    <testcase classname="Actions getClaimDetail shouldSucceed predicate should return false when response.meta.syncStatus is not SUCCESS" name="Actions getClaimDetail shouldSucceed predicate should return false when response.meta.syncStatus is not SUCCESS" time="0">
    </testcase>
    <testcase classname="Actions pollClaimStatus should call apiRequest" name="Actions pollClaimStatus should call apiRequest" time="0.001">
    </testcase>
    <testcase classname="Actions pollClaimStatus apiRequest response handler should call onSuccess when shouldSucceed returns true" name="Actions pollClaimStatus apiRequest response handler should call onSuccess when shouldSucceed returns true" time="0.001">
    </testcase>
    <testcase classname="Actions pollClaimStatus apiRequest response handler should call onError when shouldSuccess return false shouldFail returns true" name="Actions pollClaimStatus apiRequest response handler should call onError when shouldSuccess return false shouldFail returns true" time="0.001">
    </testcase>
    <testcase classname="Actions submitRequest should submit request" name="Actions submitRequest should submit request" time="0.002">
    </testcase>
    <testcase classname="Actions submitRequest should fail on error" name="Actions submitRequest should fail on error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DowntimeMessage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:55" time="0.299" tests="2">
    <testcase classname="&lt;DowntimeMessage&gt; should render with generic message" name="&lt;DowntimeMessage&gt; should render with generic message" time="0.186">
    </testcase>
    <testcase classname="&lt;DowntimeMessage&gt; should render with window message" name="&lt;DowntimeMessage&gt; should render with window message" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="routingReducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:56" time="0.159" tests="2">
    <testcase classname="routingReducer should set the last page to null on first call" name="routingReducer should set the last page to null on first call" time="0.057">
    </testcase>
    <testcase classname="routingReducer should set the last page with history items" name="routingReducer should set the last page with history items" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990e &lt;IntroductionPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:56" time="0.296" tests="1">
    <testcase classname="Edu 1990e &lt;IntroductionPage&gt; should render" name="Edu 1990e &lt;IntroductionPage&gt; should render" time="0.207">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;PrefillMessage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:56" time="0.313" tests="3">
    <testcase classname="Schemaform &lt;PrefillMessage&gt; should render" name="Schemaform &lt;PrefillMessage&gt; should render" time="0.206">
    </testcase>
    <testcase classname="Schemaform &lt;PrefillMessage&gt; should not render when not prefilled" name="Schemaform &lt;PrefillMessage&gt; should not render when not prefilled" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;PrefillMessage&gt; should render child message" name="Schemaform &lt;PrefillMessage&gt; should render child message" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;FeedbackSubmitted/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:56" time="0.297" tests="2">
    <testcase classname="&lt;FeedbackSubmitted/&gt; should render with follow-up message" name="&lt;FeedbackSubmitted/&gt; should render with follow-up message" time="0.179">
    </testcase>
    <testcase classname="&lt;FeedbackSubmitted/&gt; should render without follow-up message" name="&lt;FeedbackSubmitted/&gt; should render without follow-up message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Settings&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:56" time="0.318" tests="7">
    <testcase classname="&lt;Settings&gt; should render" name="&lt;Settings&gt; should render" time="0.158">
    </testcase>
    <testcase classname="&lt;Settings&gt; should show a loading screen when getting preferences" name="&lt;Settings&gt; should show a loading screen when getting preferences" time="0.001">
    </testcase>
    <testcase classname="&lt;Settings&gt; should show a loading screen when saving preferences" name="&lt;Settings&gt; should show a loading screen when saving preferences" time="0.001">
    </testcase>
    <testcase classname="&lt;Settings&gt; should disable save button when nothing has changed" name="&lt;Settings&gt; should disable save button when nothing has changed" time="0.001">
    </testcase>
    <testcase classname="&lt;Settings&gt; should enable save button and show cancel button if email is modified" name="&lt;Settings&gt; should enable save button and show cancel button if email is modified" time="0.001">
    </testcase>
    <testcase classname="&lt;Settings&gt; should enable save button and show cancel button if flag is modified" name="&lt;Settings&gt; should enable save button and show cancel button if flag is modified" time="0.002">
    </testcase>
    <testcase classname="&lt;Settings&gt; should hide email input if notifications are off" name="&lt;Settings&gt; should hide email input if notifications are off" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AddFilesForm&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:56" time="0.29" tests="9">
    <testcase classname="&lt;AddFilesForm&gt; should render component" name="&lt;AddFilesForm&gt; should render component" time="0.125">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should show uploading modal" name="&lt;AddFilesForm&gt; should show uploading modal" time="0.004">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should show mail or fax modal" name="&lt;AddFilesForm&gt; should show mail or fax modal" time="0.002">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should not submit if files empty" name="&lt;AddFilesForm&gt; should not submit if files empty" time="0.001">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should submit if files are valid" name="&lt;AddFilesForm&gt; should submit if files are valid" time="0.032">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should not add an invalid file type" name="&lt;AddFilesForm&gt; should not add an invalid file type" time="0.003">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should not add an invalid file size" name="&lt;AddFilesForm&gt; should not add an invalid file size" time="0.002">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should add a valid file" name="&lt;AddFilesForm&gt; should add a valid file" time="0.001">
    </testcase>
    <testcase classname="&lt;AddFilesForm&gt; should return an error message when no files present and field is dirty" name="&lt;AddFilesForm&gt; should return an error message when no files present and field is dirty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;LettersApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:57" time="0.228" tests="3">
    <testcase classname="&lt;LettersApp&gt; should render AppContent" name="&lt;LettersApp&gt; should render AppContent" time="0.091">
    </testcase>
    <testcase classname="&lt;LettersApp&gt; &lt;AppContent&gt; should render children if data available" name="&lt;LettersApp&gt; &lt;AppContent&gt; should render children if data available" time="0.001">
    </testcase>
    <testcase classname="&lt;LettersApp&gt; &lt;AppContent&gt; should display error message if data is not available" name="&lt;LettersApp&gt; &lt;AppContent&gt; should display error message if data is not available" time="0.018">
    </testcase>
  </testsuite>
  <testsuite name="&lt;NoticeBox&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:57" time="0.183" tests="2">
    <testcase classname="&lt;NoticeBox&gt; should render correctly" name="&lt;NoticeBox&gt; should render correctly" time="0.071">
    </testcase>
    <testcase classname="&lt;NoticeBox&gt; should have the expected classname" name="&lt;NoticeBox&gt; should have the expected classname" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;GiBillApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:57" time="0.283" tests="2">
    <testcase classname="&lt;GiBillApp&gt; should render" name="&lt;GiBillApp&gt; should render" time="0.121">
    </testcase>
    <testcase classname="&lt;GiBillApp&gt; should render LoadingIndicator" name="&lt;GiBillApp&gt; should render LoadingIndicator" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DownloadLetterLink&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:57" time="0.283" tests="6">
    <testcase classname="&lt;DownloadLetterLink&gt; should render" name="&lt;DownloadLetterLink&gt; should render" time="0.105">
    </testcase>
    <testcase classname="&lt;DownloadLetterLink&gt; should show download button" name="&lt;DownloadLetterLink&gt; should show download button" time="0.004">
    </testcase>
    <testcase classname="&lt;DownloadLetterLink&gt; should call getLetterPdf when clicked" name="&lt;DownloadLetterLink&gt; should call getLetterPdf when clicked" time="0.044">
    </testcase>
    <testcase classname="&lt;DownloadLetterLink&gt; should update button when status is downloading" name="&lt;DownloadLetterLink&gt; should update button when status is downloading" time="0.003">
    </testcase>
    <testcase classname="&lt;DownloadLetterLink&gt; should show success message" name="&lt;DownloadLetterLink&gt; should show success message" time="0.004">
    </testcase>
    <testcase classname="&lt;DownloadLetterLink&gt; should show failure message" name="&lt;DownloadLetterLink&gt; should show failure message" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageWrite&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:57" time="0.208" tests="3">
    <testcase classname="&lt;MessageWrite&gt; should render correctly" name="&lt;MessageWrite&gt; should render correctly" time="0.101">
    </testcase>
    <testcase classname="&lt;MessageWrite&gt; should have the expected className" name="&lt;MessageWrite&gt; should have the expected className" time="0">
    </testcase>
    <testcase classname="&lt;MessageWrite&gt; should render the expected child elements" name="&lt;MessageWrite&gt; should render the expected child elements" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClosedClaimMessage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:57" time="0.214" tests="3">
    <testcase classname="&lt;ClosedClaimMessage&gt; should render closed claims within 30 days" name="&lt;ClosedClaimMessage&gt; should render closed claims within 30 days" time="0.103">
    </testcase>
    <testcase classname="&lt;ClosedClaimMessage&gt; should not render closed claims at 30 days" name="&lt;ClosedClaimMessage&gt; should not render closed claims at 30 days" time="0.001">
    </testcase>
    <testcase classname="&lt;ClosedClaimMessage&gt; should render nothing when no closed claims" name="&lt;ClosedClaimMessage&gt; should render nothing when no closed claims" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Breadcrumbs&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:58" time="0.181" tests="4">
    <testcase classname="&lt;Breadcrumbs&gt; should render" name="&lt;Breadcrumbs&gt; should render" time="0.067">
    </testcase>
    <testcase classname="&lt;Breadcrumbs&gt; should have the expected classname" name="&lt;Breadcrumbs&gt; should have the expected classname" time="0">
    </testcase>
    <testcase classname="&lt;Breadcrumbs&gt; should render on prescription detail pages correctly" name="&lt;Breadcrumbs&gt; should render on prescription detail pages correctly" time="0.02">
    </testcase>
    <testcase classname="&lt;Breadcrumbs&gt; should render on glossary page correctly" name="&lt;Breadcrumbs&gt; should render on glossary page correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:58" time="0.19" tests="1">
    <testcase classname="&lt;ConfirmationPage&gt; should render" name="&lt;ConfirmationPage&gt; should render" time="0.08">
    </testcase>
  </testsuite>
  <testsuite name="&lt;TrackPackage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:58" time="0.217" tests="4">
    <testcase classname="&lt;TrackPackage&gt; should render" name="&lt;TrackPackage&gt; should render" time="0.095">
    </testcase>
    <testcase classname="&lt;TrackPackage&gt; should render tracking info when available" name="&lt;TrackPackage&gt; should render tracking info when available" time="0.008">
    </testcase>
    <testcase classname="&lt;TrackPackage&gt; should show a message when tracking info is not yet available" name="&lt;TrackPackage&gt; should show a message when tracking info is not yet available" time="0">
    </testcase>
    <testcase classname="&lt;TrackPackage&gt; should show a message when tracking info has expired" name="&lt;TrackPackage&gt; should show a message when tracking info has expired" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimsStatusApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:58" time="0.179" tests="2">
    <testcase classname="&lt;ClaimsStatusApp&gt; should render children and login view" name="&lt;ClaimsStatusApp&gt; should render children and login view" time="0.08">
    </testcase>
    <testcase classname="&lt;ClaimsStatusApp&gt; should render children" name="&lt;ClaimsStatusApp&gt; should render children" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EligibilityForm&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:58" time="0.217" tests="8">
    <testcase classname="&lt;EligibilityForm&gt; should render" name="&lt;EligibilityForm&gt; should render" time="0.088">
    </testcase>
    <testcase classname="&lt;EligibilityForm&gt; should render default fields" name="&lt;EligibilityForm&gt; should render default fields" time="0.002">
    </testcase>
    <testcase classname="&lt;EligibilityForm&gt; should render spouse active duty field" name="&lt;EligibilityForm&gt; should render spouse active duty field" time="0.001">
    </testcase>
    <testcase classname="&lt;EligibilityForm&gt; should render fields for Post-9/11 GI Bill (Ch 33)" name="&lt;EligibilityForm&gt; should render fields for Post-9/11 GI Bill (Ch 33)" time="0.001">
    </testcase>
    <testcase classname="&lt;EligibilityForm&gt; should render fields for Montgomery GI Bill (Ch 30)" name="&lt;EligibilityForm&gt; should render fields for Montgomery GI Bill (Ch 30)" time="0.001">
    </testcase>
    <testcase classname="&lt;EligibilityForm&gt; should render fields for REAP GI Bill (Ch 1607)" name="&lt;EligibilityForm&gt; should render fields for REAP GI Bill (Ch 1607)" time="0.001">
    </testcase>
    <testcase classname="&lt;EligibilityForm&gt; should render fields for VR&amp;E (Ch 31)" name="&lt;EligibilityForm&gt; should render fields for VR&amp;E (Ch 31)" time="0.001">
    </testcase>
    <testcase classname="&lt;EligibilityForm&gt; should render fields for VR&amp;E (Ch 31) when eligible for Post-9/11 GI Bill" name="&lt;EligibilityForm&gt; should render fields for VR&amp;E (Ch 31) when eligible for Post-9/11 GI Bill" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990 &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:58" time="0.252" tests="2">
    <testcase classname="Edu 1990 &lt;ConfirmationPage&gt; should render" name="Edu 1990 &lt;ConfirmationPage&gt; should render" time="0.136">
    </testcase>
    <testcase classname="Edu 1990 &lt;ConfirmationPage&gt; should expand documents" name="Edu 1990 &lt;ConfirmationPage&gt; should expand documents" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform save / load actions:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:59" time="0.256" tests="33">
    <testcase classname="Schemaform save / load actions: setSaveFormStatus should return action" name="Schemaform save / load actions: setSaveFormStatus should return action" time="0.004">
    </testcase>
    <testcase classname="Schemaform save / load actions: setSaveFormStatus should return different action for auto saveType" name="Schemaform save / load actions: setSaveFormStatus should return different action for auto saveType" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: setFetchFormStatus should return action" name="Schemaform save / load actions: setFetchFormStatus should return action" time="0">
    </testcase>
    <testcase classname="Schemaform save / load actions: setInProgressForm should return action" name="Schemaform save / load actions: setInProgressForm should return action" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: migrateFormData should return migrated data" name="Schemaform save / load actions: migrateFormData should return migrated data" time="0">
    </testcase>
    <testcase classname="Schemaform save / load actions: migrateFormData should migrate multiple times" name="Schemaform save / load actions: migrateFormData should migrate multiple times" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a no-auth if the user has no session token" name="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a no-auth if the user has no session token" time="0.017">
    </testcase>
    <testcase classname="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a pending" name="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a pending" time="0.014">
    </testcase>
    <testcase classname="Schemaform save / load actions: saveAndRedirectToReturnUrl calls the api to save the form" name="Schemaform save / load actions: saveAndRedirectToReturnUrl calls the api to save the form" time="0.01">
    </testcase>
    <testcase classname="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a success if the form is saved" name="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a success if the form is saved" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a no-auth if the api returns a 401" name="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a no-auth if the api returns a 401" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a failure on any other failure" name="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a failure on any other failure" time="0.002">
    </testcase>
    <testcase classname="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a client failure when a network error occurs" name="Schemaform save / load actions: saveAndRedirectToReturnUrl dispatches a client failure when a network error occurs" time="0.031">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a no-auth if the user has no session token" name="Schemaform save / load actions: fetchInProgressForm dispatches a no-auth if the user has no session token" time="0.002">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a pending" name="Schemaform save / load actions: fetchInProgressForm dispatches a pending" time="0.002">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm attempts to fetch an in-progress form" name="Schemaform save / load actions: fetchInProgressForm attempts to fetch an in-progress form" time="0.022">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a success if the form is loaded" name="Schemaform save / load actions: fetchInProgressForm dispatches a success if the form is loaded" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a no-auth if the api returns a 401" name="Schemaform save / load actions: fetchInProgressForm dispatches a no-auth if the api returns a 401" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a not-found if the api returns a 404" name="Schemaform save / load actions: fetchInProgressForm dispatches a not-found if the api returns a 404" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a not-found if the api returns an empty object" name="Schemaform save / load actions: fetchInProgressForm dispatches a not-found if the api returns an empty object" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches an invalid-data if the data returned from the api isn&apos;t an object" name="Schemaform save / load actions: fetchInProgressForm dispatches an invalid-data if the data returned from the api isn&apos;t an object" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches an invalid-data if the api doesn&apos;t return valid json" name="Schemaform save / load actions: fetchInProgressForm dispatches an invalid-data if the api doesn&apos;t return valid json" time="0.002">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a failure on api response error" name="Schemaform save / load actions: fetchInProgressForm dispatches a failure on api response error" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm dispatches a failure on network error" name="Schemaform save / load actions: fetchInProgressForm dispatches a failure on network error" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm prefill dispatches a no-auth if the api returns a 401" name="Schemaform save / load actions: fetchInProgressForm prefill dispatches a no-auth if the api returns a 401" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm prefill dispatches a success if the api returns a 404" name="Schemaform save / load actions: fetchInProgressForm prefill dispatches a success if the api returns a 404" time="0">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm prefill dispatches a success if the api returns an empty object" name="Schemaform save / load actions: fetchInProgressForm prefill dispatches a success if the api returns an empty object" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: fetchInProgressForm prefill calls prefill transform when response is prefilled" name="Schemaform save / load actions: fetchInProgressForm prefill calls prefill transform when response is prefilled" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: removeInProgressForm dispatches a start over action" name="Schemaform save / load actions: removeInProgressForm dispatches a start over action" time="0.004">
    </testcase>
    <testcase classname="Schemaform save / load actions: removeInProgressForm attempts to remove an in-progress form" name="Schemaform save / load actions: removeInProgressForm attempts to remove an in-progress form" time="0.001">
    </testcase>
    <testcase classname="Schemaform save / load actions: removeInProgressForm removes a form and fetches prefill data" name="Schemaform save / load actions: removeInProgressForm removes a form and fetches prefill data" time="0">
    </testcase>
    <testcase classname="Schemaform save / load actions: removeInProgressForm handles remove error and fetches prefill data" name="Schemaform save / load actions: removeInProgressForm handles remove error and fetches prefill data" time="0.002">
    </testcase>
    <testcase classname="Schemaform save / load actions: removeInProgressForm sets no-auth status if session expires" name="Schemaform save / load actions: removeInProgressForm sets no-auth status if session expires" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Letters helpers: " errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:59" time="0.265" tests="17">
    <testcase classname="Letters helpers:  getBenefitOptionText should be defined for both veterans and dependents" name="Letters helpers:  getBenefitOptionText should be defined for both veterans and dependents" time="0.073">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should only be defined for veterans" name="Letters helpers:  getBenefitOptionText should only be defined for veterans" time="0.002">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should only be defined for dependents" name="Letters helpers:  getBenefitOptionText should only be defined for dependents" time="0.001">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should only be defined for veterans if value is true" name="Letters helpers:  getBenefitOptionText should only be defined for veterans if value is true" time="0.001">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should only be defined for dependents if value is true" name="Letters helpers:  getBenefitOptionText should only be defined for dependents if value is true" time="0">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should be defined whether value is true or false" name="Letters helpers:  getBenefitOptionText should be defined whether value is true or false" time="0.003">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should never be defined" name="Letters helpers:  getBenefitOptionText should never be defined" time="0">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should only be defined if value is valid" name="Letters helpers:  getBenefitOptionText should only be defined if value is valid" time="0.005">
    </testcase>
    <testcase classname="Letters helpers:  getBenefitOptionText should include the awardEffectiveDate in the text for monthlyAward" name="Letters helpers:  getBenefitOptionText should include the awardEffectiveDate in the text for monthlyAward" time="0.065">
    </testcase>
    <testcase classname="Letters helpers:  inferAddressType should set the type to international if USA isn&apos;t selected" name="Letters helpers:  inferAddressType should set the type to international if USA isn&apos;t selected" time="0">
    </testcase>
    <testcase classname="Letters helpers:  inferAddressType should set the type to military if a military stateCode is chosen" name="Letters helpers:  inferAddressType should set the type to military if a military stateCode is chosen" time="0.001">
    </testcase>
    <testcase classname="Letters helpers:  inferAddressType should set the type to domestic if none of the above are true" name="Letters helpers:  inferAddressType should set the type to domestic if none of the above are true" time="0">
    </testcase>
    <testcase classname="Letters helpers:  resetDisallowedAddressFields should clear state and zipCode for international addresses" name="Letters helpers:  resetDisallowedAddressFields should clear state and zipCode for international addresses" time="0">
    </testcase>
    <testcase classname="Letters helpers:  stripEmpties should only remove all zero-length properties from an object" name="Letters helpers:  stripEmpties should only remove all zero-length properties from an object" time="0.001">
    </testcase>
    <testcase classname="Letters helpers:  toGenericAddress translates military addresses to generic" name="Letters helpers:  toGenericAddress translates military addresses to generic" time="0">
    </testcase>
    <testcase classname="Letters helpers:  toGenericAddress translates non-military address to generic" name="Letters helpers:  toGenericAddress translates non-military address to generic" time="0">
    </testcase>
    <testcase classname="Letters helpers:  toGenericAddress returns a clone for all cases" name="Letters helpers:  toGenericAddress returns a clone for all cases" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Pensions DisclosureTitle" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:59" time="0.254" tests="2">
    <testcase classname="Pensions DisclosureTitle should render" name="Pensions DisclosureTitle should render" time="0.129">
    </testcase>
    <testcase classname="Pensions DisclosureTitle should render spouse name" name="Pensions DisclosureTitle should render spouse name" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;LandingPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:59" time="0.222" tests="2">
    <testcase classname="&lt;LandingPage&gt; should render" name="&lt;LandingPage&gt; should render" time="0.104">
    </testcase>
    <testcase classname="&lt;LandingPage&gt; should handleSubmit correctly" name="&lt;LandingPage&gt; should handleSubmit correctly" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ProfilePage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:50:59" time="0.229" tests="2">
    <testcase classname="&lt;ProfilePage&gt; should render" name="&lt;ProfilePage&gt; should render" time="0.078">
    </testcase>
    <testcase classname="&lt;ProfilePage&gt; should show LoadingState when profile is fetching" name="&lt;ProfilePage&gt; should show LoadingState when profile is fetching" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SaveInProgressErrorPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:00" time="0.288" tests="6">
    <testcase classname="&lt;SaveInProgressErrorPage&gt; should render the no auth error" name="&lt;SaveInProgressErrorPage&gt; should render the no auth error" time="0.14">
    </testcase>
    <testcase classname="&lt;SaveInProgressErrorPage&gt; should render the unrecoverable failure error" name="&lt;SaveInProgressErrorPage&gt; should render the unrecoverable failure error" time="0.005">
    </testcase>
    <testcase classname="&lt;SaveInProgressErrorPage&gt; should render the recoverable failure error" name="&lt;SaveInProgressErrorPage&gt; should render the recoverable failure error" time="0.003">
    </testcase>
    <testcase classname="&lt;SaveInProgressErrorPage&gt; should go back" name="&lt;SaveInProgressErrorPage&gt; should go back" time="0.004">
    </testcase>
    <testcase classname="&lt;SaveInProgressErrorPage&gt; should attempt to fetch the form again" name="&lt;SaveInProgressErrorPage&gt; should attempt to fetch the form again" time="0.002">
    </testcase>
    <testcase classname="&lt;SaveInProgressErrorPage&gt; should call remove form if user was starting over" name="&lt;SaveInProgressErrorPage&gt; should call remove form if user was starting over" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;LetterList&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:00" time="0.245" tests="7">
    <testcase classname="&lt;LetterList&gt; renders" name="&lt;LetterList&gt; renders" time="0.11">
    </testcase>
    <testcase classname="&lt;LetterList&gt; renders collapsible panels for each letter" name="&lt;LetterList&gt; renders collapsible panels for each letter" time="0.002">
    </testcase>
    <testcase classname="&lt;LetterList&gt; passes the right title prop for each panel" name="&lt;LetterList&gt; passes the right title prop for each panel" time="0.001">
    </testcase>
    <testcase classname="&lt;LetterList&gt; renders DL buttons for all letters in list" name="&lt;LetterList&gt; renders DL buttons for all letters in list" time="0.002">
    </testcase>
    <testcase classname="&lt;LetterList&gt; does not render DL button for BSL if !optionsAvailable" name="&lt;LetterList&gt; does not render DL button for BSL if !optionsAvailable" time="0.001">
    </testcase>
    <testcase classname="&lt;LetterList&gt; renders DL button for non-benefit-summary letters if !optionsAvailable" name="&lt;LetterList&gt; renders DL button for non-benefit-summary letters if !optionsAvailable" time="0.001">
    </testcase>
    <testcase classname="&lt;LetterList&gt; renders eligibility error when letters not available" name="&lt;LetterList&gt; renders eligibility error when letters not available" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;SaveFormLink&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:00" time="0.253" tests="7">
    <testcase classname="Schemaform &lt;SaveFormLink&gt; should render save message when not logged in" name="Schemaform &lt;SaveFormLink&gt; should render save message when not logged in" time="0.079">
    </testcase>
    <testcase classname="Schemaform &lt;SaveFormLink&gt; should render finish message when logged in" name="Schemaform &lt;SaveFormLink&gt; should render finish message when logged in" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;SaveFormLink&gt; should render expired message when not logged in and noAuth status" name="Schemaform &lt;SaveFormLink&gt; should render expired message when not logged in and noAuth status" time="0.048">
    </testcase>
    <testcase classname="Schemaform &lt;SaveFormLink&gt; should render save message when logged in" name="Schemaform &lt;SaveFormLink&gt; should render save message when logged in" time="0">
    </testcase>
    <testcase classname="Schemaform &lt;SaveFormLink&gt; should show error message" name="Schemaform &lt;SaveFormLink&gt; should show error message" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;SaveFormLink&gt; should show client error message" name="Schemaform &lt;SaveFormLink&gt; should show client error message" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;SaveFormLink&gt; should call saveInProgressForm if logged in" name="Schemaform &lt;SaveFormLink&gt; should call saveInProgressForm if logged in" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MoveTo&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:00" time="0.213" tests="4">
    <testcase classname="&lt;MoveTo&gt; should render correctly" name="&lt;MoveTo&gt; should render correctly" time="0.083">
    </testcase>
    <testcase classname="&lt;MoveTo&gt; should have the expected classname" name="&lt;MoveTo&gt; should have the expected classname" time="0.002">
    </testcase>
    <testcase classname="&lt;MoveTo&gt; should open create folder modal correctly" name="&lt;MoveTo&gt; should open create folder modal correctly" time="0.011">
    </testcase>
    <testcase classname="&lt;MoveTo&gt; should handle choose folder correctly" name="&lt;MoveTo&gt; should handle choose folder correctly" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Main&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:00" time="0.211" tests="13">
    <testcase classname="&lt;Main&gt; renders" name="&lt;Main&gt; renders" time="0.07">
    </testcase>
    <testcase classname="&lt;Main&gt; shows a loading spinner when awaiting response" name="&lt;Main&gt; shows a loading spinner when awaiting response" time="0.001">
    </testcase>
    <testcase classname="&lt;Main&gt; shows a loading spinner when letters is available, but address is awaiting response" name="&lt;Main&gt; shows a loading spinner when letters is available, but address is awaiting response" time="0.013">
    </testcase>
    <testcase classname="&lt;Main&gt; shows a loading spinner when letters is awaiting response, but address is available" name="&lt;Main&gt; shows a loading spinner when letters is awaiting response, but address is available" time="0.001">
    </testcase>
    <testcase classname="&lt;Main&gt; renders its children when letters and address are available" name="&lt;Main&gt; renders its children when letters and address are available" time="0">
    </testcase>
    <testcase classname="&lt;Main&gt; renders a system down message when letters is available but address is unavailable" name="&lt;Main&gt; renders a system down message when letters is available but address is unavailable" time="0.008">
    </testcase>
    <testcase classname="&lt;Main&gt; shows a system down message for backend service error" name="&lt;Main&gt; shows a system down message for backend service error" time="0">
    </testcase>
    <testcase classname="&lt;Main&gt; should show backend authentication error" name="&lt;Main&gt; should show backend authentication error" time="0.002">
    </testcase>
    <testcase classname="&lt;Main&gt; should show system down message for invalid address error" name="&lt;Main&gt; should show system down message for invalid address error" time="0">
    </testcase>
    <testcase classname="&lt;Main&gt; renders children for letter eligibility errors" name="&lt;Main&gt; renders children for letter eligibility errors" time="0.001">
    </testcase>
    <testcase classname="&lt;Main&gt; should show system down message when service is unavailable" name="&lt;Main&gt; should show system down message when service is unavailable" time="0">
    </testcase>
    <testcase classname="&lt;Main&gt; renders system down message for all unspecified errors" name="&lt;Main&gt; renders system down message for all unspecified errors" time="0.001">
    </testcase>
    <testcase classname="&lt;Main&gt; fetches all necessary data after mounting" name="&lt;Main&gt; fetches all necessary data after mounting" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimStatusPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:01" time="0.237" tests="12">
    <testcase classname="&lt;ClaimStatusPage&gt; should render page with no alerts and a timeline" name="&lt;ClaimStatusPage&gt; should render page with no alerts and a timeline" time="0.108">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should not render a timeline when closed" name="&lt;ClaimStatusPage&gt; should not render a timeline when closed" time="0.008">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should not render ClaimComplete with decision letter" name="&lt;ClaimStatusPage&gt; should not render ClaimComplete with decision letter" time="0.005">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should render need files from you component" name="&lt;ClaimStatusPage&gt; should render need files from you component" time="0.005">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should not render need files from you when closed" name="&lt;ClaimStatusPage&gt; should not render need files from you when closed" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should not render files needed from you when decision letter sent" name="&lt;ClaimStatusPage&gt; should not render files needed from you when decision letter sent" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should render claims decision alert" name="&lt;ClaimStatusPage&gt; should render claims decision alert" time="0">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should not render timeline without a phase" name="&lt;ClaimStatusPage&gt; should not render timeline without a phase" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should render empty content when loading" name="&lt;ClaimStatusPage&gt; should render empty content when loading" time="0">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should render notification" name="&lt;ClaimStatusPage&gt; should render notification" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should clear alert" name="&lt;ClaimStatusPage&gt; should clear alert" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimStatusPage&gt; should clear notification when leaving" name="&lt;ClaimStatusPage&gt; should clear notification when leaving" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessagingWidget&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:01" time="0.247" tests="4">
    <testcase classname="&lt;MessagingWidget&gt; should not render if messaging is inaccessible" name="&lt;MessagingWidget&gt; should not render if messaging is inaccessible" time="0.099">
    </testcase>
    <testcase classname="&lt;MessagingWidget&gt; should render if messaging is accessible" name="&lt;MessagingWidget&gt; should render if messaging is accessible" time="0.029">
    </testcase>
    <testcase classname="&lt;MessagingWidget&gt; should render only unread messages" name="&lt;MessagingWidget&gt; should render only unread messages" time="0.003">
    </testcase>
    <testcase classname="&lt;MessagingWidget&gt; should render empty state properly" name="&lt;MessagingWidget&gt; should render empty state properly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageNav&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:01" time="0.191" tests="3">
    <testcase classname="&lt;MessageNav&gt; should render correctly" name="&lt;MessageNav&gt; should render correctly" time="0.068">
    </testcase>
    <testcase classname="&lt;MessageNav&gt; should have the expected classname" name="&lt;MessageNav&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageNav&gt; render the correct message counts" name="&lt;MessageNav&gt; render the correct message counts" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageWriteGroup&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:01" time="0.181" tests="4">
    <testcase classname="&lt;MessageWriteGroup&gt; should render correctly" name="&lt;MessageWriteGroup&gt; should render correctly" time="0.075">
    </testcase>
    <testcase classname="&lt;MessageWriteGroup&gt; should have the expected classname if no error" name="&lt;MessageWriteGroup&gt; should have the expected classname if no error" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageWriteGroup&gt; should have the expected classname if there is an error" name="&lt;MessageWriteGroup&gt; should have the expected classname if there is an error" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageWriteGroup&gt; should render the expected child elements" name="&lt;MessageWriteGroup&gt; should render the expected child elements" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EducationWizard&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:01" time="0.227" tests="5">
    <testcase classname="&lt;EducationWizard&gt; should show button and no questions" name="&lt;EducationWizard&gt; should show button and no questions" time="0.114">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show button and first question" name="&lt;EducationWizard&gt; should show button and first question" time="0.003">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should show next relevant question" name="&lt;EducationWizard&gt; should show next relevant question" time="0.002">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should reset after earlier answer changed" name="&lt;EducationWizard&gt; should reset after earlier answer changed" time="0.003">
    </testcase>
    <testcase classname="&lt;EducationWizard&gt; should support multiple previous values" name="&lt;EducationWizard&gt; should support multiple previous values" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AskVAPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:01" time="0.254" tests="5">
    <testcase classname="&lt;AskVAPage&gt; should render disabled button" name="&lt;AskVAPage&gt; should render disabled button" time="0.115">
    </testcase>
    <testcase classname="&lt;AskVAPage&gt; should render enabled button" name="&lt;AskVAPage&gt; should render enabled button" time="0.004">
    </testcase>
    <testcase classname="&lt;AskVAPage&gt; should render disabled submitting button" name="&lt;AskVAPage&gt; should render disabled submitting button" time="0.002">
    </testcase>
    <testcase classname="&lt;AskVAPage&gt; should submit request" name="&lt;AskVAPage&gt; should submit request" time="0.01">
    </testcase>
    <testcase classname="&lt;AskVAPage&gt; should update claims and redirect after success" name="&lt;AskVAPage&gt; should update claims and redirect after success" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RequiredLoginView&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:02" time="0.256" tests="10">
    <testcase classname="&lt;RequiredLoginView&gt; should render" name="&lt;RequiredLoginView&gt; should render" time="0.111">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; should render a loading graphic while loading" name="&lt;RequiredLoginView&gt; should render a loading graphic while loading" time="0.002">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; should display children when service is available" name="&lt;RequiredLoginView&gt; should display children when service is available" time="0.001">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; should display children and pass prop when service is not available" name="&lt;RequiredLoginView&gt; should display children and pass prop when service is not available" time="0.004">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; logged in at LOA 1 needs verification should prompt for verification" name="&lt;RequiredLoginView&gt; logged in at LOA 1 needs verification should prompt for verification" time="0.002">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; logged in at LOA 1 does not need verification should display children elements" name="&lt;RequiredLoginView&gt; logged in at LOA 1 does not need verification should display children elements" time="0.001">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; logged in at LOA 3 should display children elements" name="&lt;RequiredLoginView&gt; logged in at LOA 3 should display children elements" time="0.001">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; logged in at LOA 3 user profile with SERVER_ERROR should display server error message" name="&lt;RequiredLoginView&gt; logged in at LOA 3 user profile with SERVER_ERROR should display server error message" time="0.003">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; logged in at LOA 3 user profile NOT_FOUND should display not found message" name="&lt;RequiredLoginView&gt; logged in at LOA 3 user profile NOT_FOUND should display not found message" time="0.003">
    </testcase>
    <testcase classname="&lt;RequiredLoginView&gt; not logged in should prompt for login" name="&lt;RequiredLoginView&gt; not logged in should prompt for login" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageSend&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:02" time="0.248" tests="5">
    <testcase classname="&lt;MessageSend&gt; should render correctly" name="&lt;MessageSend&gt; should render correctly" time="0.1">
    </testcase>
    <testcase classname="&lt;MessageSend&gt; should have the expected classname" name="&lt;MessageSend&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageSend&gt; should handle attachments change success correctly" name="&lt;MessageSend&gt; should handle attachments change success correctly" time="0.017">
    </testcase>
    <testcase classname="&lt;MessageSend&gt; should handle attachments change error for too many files" name="&lt;MessageSend&gt; should handle attachments change error for too many files" time="0.004">
    </testcase>
    <testcase classname="&lt;MessageSend&gt; should handle attachments change error for files too large" name="&lt;MessageSend&gt; should handle attachments change error for files too large" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="getAppealsV2" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:02" time="0.177" tests="7">
    <testcase classname="getAppealsV2 dispatches FETCH_APPEALS_PENDING" name="getAppealsV2 dispatches FETCH_APPEALS_PENDING" time="0.013">
    </testcase>
    <testcase classname="getAppealsV2 dispatches FETCH_APPEALS_SUCCESS" name="getAppealsV2 dispatches FETCH_APPEALS_SUCCESS" time="0.001">
    </testcase>
    <testcase classname="getAppealsV2 Dispatches USER_FORBIDDEN_ERROR when GET fails with 403" name="getAppealsV2 Dispatches USER_FORBIDDEN_ERROR when GET fails with 403" time="0.028">
    </testcase>
    <testcase classname="getAppealsV2 Dispatches RECORD_NOT_FOUND_ERROR when GET fails with 404" name="getAppealsV2 Dispatches RECORD_NOT_FOUND_ERROR when GET fails with 404" time="0.001">
    </testcase>
    <testcase classname="getAppealsV2 Dispatches VALIDATION_ERROR when GET fails with 422" name="getAppealsV2 Dispatches VALIDATION_ERROR when GET fails with 422" time="0.001">
    </testcase>
    <testcase classname="getAppealsV2 Dispatches BACKEND_SERVICE_ERROR when GET fails with 502" name="getAppealsV2 Dispatches BACKEND_SERVICE_ERROR when GET fails with 502" time="0.001">
    </testcase>
    <testcase classname="getAppealsV2 Dispatches FETCH_APPEALS_ERROR when GET fails with 504" name="getAppealsV2 Dispatches FETCH_APPEALS_ERROR when GET fails with 504" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Main" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:02" time="0.242" tests="7">
    <testcase classname="Main should render" name="Main should render" time="0.079">
    </testcase>
    <testcase classname="Main should show data when service is available" name="Main should show data when service is available" time="0">
    </testcase>
    <testcase classname="Main should show loading spinner when waiting for response" name="Main should show loading spinner when waiting for response" time="0.018">
    </testcase>
    <testcase classname="Main should show system down message for backend service error" name="Main should show system down message for backend service error" time="0.031">
    </testcase>
    <testcase classname="Main should show backend authentication error" name="Main should show backend authentication error" time="0.004">
    </testcase>
    <testcase classname="Main should show System Down warning when record not found" name="Main should show System Down warning when record not found" time="0">
    </testcase>
    <testcase classname="Main should show system down message when service is unavailable" name="Main should show system down message when service is unavailable" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;FolderNav&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:02" time="0.219" tests="7">
    <testcase classname="&lt;FolderNav&gt; should render correctly" name="&lt;FolderNav&gt; should render correctly" time="0.106">
    </testcase>
    <testcase classname="&lt;FolderNav&gt; should have the expected classname" name="&lt;FolderNav&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;FolderNav&gt; should render correct actions" name="&lt;FolderNav&gt; should render correct actions" time="0.001">
    </testcase>
    <testcase classname="&lt;FolderNav&gt; should have the correct number of folders when collapsed" name="&lt;FolderNav&gt; should have the correct number of folders when collapsed" time="0.001">
    </testcase>
    <testcase classname="&lt;FolderNav&gt; should have the correct number of folders when expanded" name="&lt;FolderNav&gt; should have the correct number of folders when expanded" time="0.001">
    </testcase>
    <testcase classname="&lt;FolderNav&gt; should render the custom folders section when expected" name="&lt;FolderNav&gt; should render the custom folders section when expected" time="0.001">
    </testcase>
    <testcase classname="&lt;FolderNav&gt; should render the list of custom folders when expanded" name="&lt;FolderNav&gt; should render the list of custom folders when expanded" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ManageFolders" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:02" time="0.23" tests="2">
    <testcase classname="ManageFolders should render" name="ManageFolders should render" time="0.001">
    </testcase>
    <testcase classname="ManageFolders should show the correct folders" name="ManageFolders should show the correct folders" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;GlossaryList&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:03" time="0.185" tests="4">
    <testcase classname="&lt;GlossaryList&gt; should render" name="&lt;GlossaryList&gt; should render" time="0.074">
    </testcase>
    <testcase classname="&lt;GlossaryList&gt; should have the expected className" name="&lt;GlossaryList&gt; should have the expected className" time="0.001">
    </testcase>
    <testcase classname="&lt;GlossaryList&gt; should show the expected title" name="&lt;GlossaryList&gt; should show the expected title" time="0.001">
    </testcase>
    <testcase classname="&lt;GlossaryList&gt; should render terms" name="&lt;GlossaryList&gt; should render terms" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimsAppealsWidget&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:03" time="0.209" tests="3">
    <testcase classname="&lt;ClaimsAppealsWidget&gt; should render" name="&lt;ClaimsAppealsWidget&gt; should render" time="0.1">
    </testcase>
    <testcase classname="&lt;ClaimsAppealsWidget&gt; should render claims and appeals" name="&lt;ClaimsAppealsWidget&gt; should render claims and appeals" time="0.003">
    </testcase>
    <testcase classname="&lt;ClaimsAppealsWidget&gt; should render empty state properly" name="&lt;ClaimsAppealsWidget&gt; should render empty state properly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="alert reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:03" time="0.243" tests="18">
    <testcase classname="alert reducer should open a general alert" name="alert reducer should open a general alert" time="0.012">
    </testcase>
    <testcase classname="alert reducer should close an alert" name="alert reducer should close an alert" time="0">
    </testcase>
    <testcase classname="alert reducer should replace a previous, unclosed alert with a new alert" name="alert reducer should replace a previous, unclosed alert with a new alert" time="0.001">
    </testcase>
    <testcase classname="alert reducer should not alert if the flag to disable it is set" name="alert reducer should not alert if the flag to disable it is set" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when creating a folder succeeds" name="alert reducer should alert when creating a folder succeeds" time="0.106">
    </testcase>
    <testcase classname="alert reducer should alert when creating a folder fails" name="alert reducer should alert when creating a folder fails" time="0.001">
    </testcase>
    <testcase classname="alert reducer should alert when deleting a folder succeeds" name="alert reducer should alert when deleting a folder succeeds" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when deleting a folder fails" name="alert reducer should alert when deleting a folder fails" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when deleting a message succeeds" name="alert reducer should alert when deleting a message succeeds" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when deleting a message fails" name="alert reducer should alert when deleting a message fails" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when moving a message succeeds" name="alert reducer should alert when moving a message succeeds" time="0.001">
    </testcase>
    <testcase classname="alert reducer should alert when moving a message fails" name="alert reducer should alert when moving a message fails" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when saving a draft succeeds" name="alert reducer should alert when saving a draft succeeds" time="0.001">
    </testcase>
    <testcase classname="alert reducer should alert when saving a draft fails" name="alert reducer should alert when saving a draft fails" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when failing to save preferences" name="alert reducer should alert when failing to save preferences" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when successfully saving preferences" name="alert reducer should alert when successfully saving preferences" time="0.001">
    </testcase>
    <testcase classname="alert reducer should alert when sending a message succeeds" name="alert reducer should alert when sending a message succeeds" time="0">
    </testcase>
    <testcase classname="alert reducer should alert when sending a message fails" name="alert reducer should alert when sending a message fails" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageCategory&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:03" time="0.202" tests="4">
    <testcase classname="&lt;MessageCategory&gt; should render correctly" name="&lt;MessageCategory&gt; should render correctly" time="0.098">
    </testcase>
    <testcase classname="&lt;MessageCategory&gt; should have the expected classname" name="&lt;MessageCategory&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageCategory&gt; should render the expected select element" name="&lt;MessageCategory&gt; should render the expected select element" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageCategory&gt; should pass props to child select element" name="&lt;MessageCategory&gt; should pass props to child select element" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;FormStartControls&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:03" time="0.242" tests="11">
    <testcase classname="Schemaform &lt;FormStartControls&gt; should render 1 button when not logged in" name="Schemaform &lt;FormStartControls&gt; should render 1 button when not logged in" time="0.092">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should render 1 button when logged in with no saved form" name="Schemaform &lt;FormStartControls&gt; should render 1 button when logged in with no saved form" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should render 3 buttons when logged in with an expired form" name="Schemaform &lt;FormStartControls&gt; should render 3 buttons when logged in with an expired form" time="0.003">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should render 4 buttons when logged in with a saved form" name="Schemaform &lt;FormStartControls&gt; should render 4 buttons when logged in with a saved form" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should go to the first page when &quot;Continue&quot; is clicked" name="Schemaform &lt;FormStartControls&gt; should go to the first page when &quot;Continue&quot; is clicked" time="0.01">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should go to the first page when &quot;Start over&quot; is clicked" name="Schemaform &lt;FormStartControls&gt; should go to the first page when &quot;Start over&quot; is clicked" time="0.003">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should go to the returnUrl when &quot;Resume previous application&quot; is clicked" name="Schemaform &lt;FormStartControls&gt; should go to the returnUrl when &quot;Resume previous application&quot; is clicked" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should do prefill when &quot;Continue&quot; is clicked" name="Schemaform &lt;FormStartControls&gt; should do prefill when &quot;Continue&quot; is clicked" time="0.003">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should show modal and remove form when starting over" name="Schemaform &lt;FormStartControls&gt; should show modal and remove form when starting over" time="0.013">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should not capture analytics events when starting the form" name="Schemaform &lt;FormStartControls&gt; should not capture analytics events when starting the form" time="0.002">
    </testcase>
    <testcase classname="Schemaform &lt;FormStartControls&gt; should capture analytics events when starting the form" name="Schemaform &lt;FormStartControls&gt; should capture analytics events when starting the form" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DetailsPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:03" time="0.21" tests="2">
    <testcase classname="&lt;DetailsPage&gt; should render contention list" name="&lt;DetailsPage&gt; should render contention list" time="0.094">
    </testcase>
    <testcase classname="&lt;DetailsPage&gt; should render not available with an empty contention list" name="&lt;DetailsPage&gt; should render not available with an empty contention list" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:03" time="0.216" tests="2">
    <testcase classname="&lt;ConfirmationPage&gt; should render" name="&lt;ConfirmationPage&gt; should render" time="0.111">
    </testcase>
    <testcase classname="&lt;ConfirmationPage&gt; should render" name="&lt;ConfirmationPage&gt; should render" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RxRefillsApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:04" time="0.212" tests="1">
    <testcase classname="&lt;RxRefillsApp&gt; should render" name="&lt;RxRefillsApp&gt; should render" time="0.077">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Prescription&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:04" time="0.228" tests="6">
    <testcase classname="&lt;Prescription&gt; should render" name="&lt;Prescription&gt; should render" time="0.108">
    </testcase>
    <testcase classname="&lt;Prescription&gt; should display a loading screen" name="&lt;Prescription&gt; should display a loading screen" time="0.003">
    </testcase>
    <testcase classname="&lt;Prescription&gt; should display loader if prescription doesn&apos;t match route" name="&lt;Prescription&gt; should display loader if prescription doesn&apos;t match route" time="0.001">
    </testcase>
    <testcase classname="&lt;Prescription&gt; should display an error message" name="&lt;Prescription&gt; should display an error message" time="0.002">
    </testcase>
    <testcase classname="&lt;Prescription&gt; should not display loader or error if there is a prescription" name="&lt;Prescription&gt; should not display loader or error if there is a prescription" time="0">
    </testcase>
    <testcase classname="&lt;Prescription&gt; should render header and details if there is a prescription" name="&lt;Prescription&gt; should render header and details if there is a prescription" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimsListItem&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:04" time="0.217" tests="7">
    <testcase classname="&lt;ClaimsListItem&gt; should not show any flags" name="&lt;ClaimsListItem&gt; should not show any flags" time="0.093">
    </testcase>
    <testcase classname="&lt;ClaimsListItem&gt; should show closed status" name="&lt;ClaimsListItem&gt; should show closed status" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimsListItem&gt; should show the status" name="&lt;ClaimsListItem&gt; should show the status" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimsListItem&gt; should show development letter flag" name="&lt;ClaimsListItem&gt; should show development letter flag" time="0">
    </testcase>
    <testcase classname="&lt;ClaimsListItem&gt; should show decision letter flag" name="&lt;ClaimsListItem&gt; should show decision letter flag" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimsListItem&gt; should show items needed flag" name="&lt;ClaimsListItem&gt; should show items needed flag" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimsListItem&gt; should hide flags when complete" name="&lt;ClaimsListItem&gt; should hide flags when complete" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimDetailLayout&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:04" time="0.229" tests="9">
    <testcase classname="&lt;ClaimDetailLayout&gt; should render loading indicator" name="&lt;ClaimDetailLayout&gt; should render loading indicator" time="0.076">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should render sync warning" name="&lt;ClaimDetailLayout&gt; should render sync warning" time="0.026">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should render contention list" name="&lt;ClaimDetailLayout&gt; should render contention list" time="0.002">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should render see all link if long contention list" name="&lt;ClaimDetailLayout&gt; should render see all link if long contention list" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should render not available if no contention list" name="&lt;ClaimDetailLayout&gt; should render not available if no contention list" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should render adding details info if open" name="&lt;ClaimDetailLayout&gt; should render adding details info if open" time="0.003">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should not render adding details info if closed" name="&lt;ClaimDetailLayout&gt; should not render adding details info if closed" time="0">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should render normal info" name="&lt;ClaimDetailLayout&gt; should render normal info" time="0.001">
    </testcase>
    <testcase classname="&lt;ClaimDetailLayout&gt; should render message" name="&lt;ClaimDetailLayout&gt; should render message" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="MessageDetails" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:04" time="0.213" tests="4">
    <testcase classname="MessageDetails should render" name="MessageDetails should render" time="0.083">
    </testcase>
    <testcase classname="MessageDetails should show the correct data" name="MessageDetails should show the correct data" time="0.005">
    </testcase>
    <testcase classname="MessageDetails should not show anything with sent date when not available" name="MessageDetails should not show anything with sent date when not available" time="0.002">
    </testcase>
    <testcase classname="MessageDetails should show or hide details when toggled" name="MessageDetails should show or hide details when toggled" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PrescriptionCard&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:04" time="0.244" tests="8">
    <testcase classname="&lt;PrescriptionCard&gt; should render" name="&lt;PrescriptionCard&gt; should render" time="0.107">
    </testcase>
    <testcase classname="&lt;PrescriptionCard&gt; should render tracking link if applicable" name="&lt;PrescriptionCard&gt; should render tracking link if applicable" time="0.005">
    </testcase>
    <testcase classname="&lt;PrescriptionCard&gt; should not render tracking link if not applicable" name="&lt;PrescriptionCard&gt; should not render tracking link if not applicable" time="0">
    </testcase>
    <testcase classname="&lt;PrescriptionCard&gt; should show Message Provider link when no refills remaining" name="&lt;PrescriptionCard&gt; should show Message Provider link when no refills remaining" time="0.001">
    </testcase>
    <testcase classname="&lt;PrescriptionCard&gt; should not show Message Provider link if refills remaining" name="&lt;PrescriptionCard&gt; should not show Message Provider link if refills remaining" time="0.001">
    </testcase>
    <testcase classname="&lt;PrescriptionCard&gt; should show SubmitRefill button if refillable" name="&lt;PrescriptionCard&gt; should show SubmitRefill button if refillable" time="0.004">
    </testcase>
    <testcase classname="&lt;PrescriptionCard&gt; should show refill status if not refillable" name="&lt;PrescriptionCard&gt; should show refill status if not refillable" time="0.001">
    </testcase>
    <testcase classname="&lt;PrescriptionCard&gt; should show refillsRemainingCounter with correct props" name="&lt;PrescriptionCard&gt; should show refillsRemainingCounter with correct props" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="getEnrollmentData" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:05" time="0.132" tests="9">
    <testcase classname="getEnrollmentData dispatches GET_ENROLLMENT_DATA_SUCCESS on successful fetch" name="getEnrollmentData dispatches GET_ENROLLMENT_DATA_SUCCESS on successful fetch" time="0.015">
    </testcase>
    <testcase classname="getEnrollmentData dispatches GET_ENROLLMENT_DATA_FAILURE on unspecified failure" name="getEnrollmentData dispatches GET_ENROLLMENT_DATA_FAILURE on unspecified failure" time="0.009">
    </testcase>
    <testcase classname="getEnrollmentData dispatches GET_ENROLLMENT_DATA_FAILURE on unexpected error without code" name="getEnrollmentData dispatches GET_ENROLLMENT_DATA_FAILURE on unexpected error without code" time="0.001">
    </testcase>
    <testcase classname="getEnrollmentData dispatches GET_ENROLLMENT_DATA_FAILURE on unexpected error code" name="getEnrollmentData dispatches GET_ENROLLMENT_DATA_FAILURE on unexpected error code" time="0.001">
    </testcase>
    <testcase classname="getEnrollmentData dispatches matching error action on known error code" name="getEnrollmentData dispatches matching error action on known error code" time="0.001">
    </testcase>
    <testcase classname="getServiceAvailability should call the api" name="getServiceAvailability should call the api" time="0.002">
    </testcase>
    <testcase classname="getServiceAvailability should dispatch SET_SERVICE_AVAILABILITY with a status of `up`" name="getServiceAvailability should dispatch SET_SERVICE_AVAILABILITY with a status of `up`" time="0.001">
    </testcase>
    <testcase classname="getServiceAvailability should dispatch SET_SERVICE_AVAILABILITY with a status of `down`" name="getServiceAvailability should dispatch SET_SERVICE_AVAILABILITY with a status of `down`" time="0.001">
    </testcase>
    <testcase classname="getServiceAvailability should dispatch SET_SERVICE_UPTIME_REMAINING with the seconds until the next scheduled downtime" name="getServiceAvailability should dispatch SET_SERVICE_UPTIME_REMAINING with the seconds until the next scheduled downtime" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AdditionalEvidenceItem&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:05" time="0.23" tests="2">
    <testcase classname="&lt;AdditionalEvidenceItem&gt; should render additional evidence item" name="&lt;AdditionalEvidenceItem&gt; should render additional evidence item" time="0.12">
    </testcase>
    <testcase classname="&lt;AdditionalEvidenceItem&gt; should render additional evidence item without date" name="&lt;AdditionalEvidenceItem&gt; should render additional evidence item without date" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;TabNav&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:05" time="0.202" tests="1">
    <testcase classname="&lt;TabNav&gt; should render three tabs" name="&lt;TabNav&gt; should render three tabs" time="0.09">
    </testcase>
  </testsuite>
  <testsuite name="saveAddress" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:05" time="0.243" tests="29">
    <testcase classname="saveAddress dispatches SAVE_ADDRESS_PENDING first" name="saveAddress dispatches SAVE_ADDRESS_PENDING first" time="0.07">
    </testcase>
    <testcase classname="saveAddress dispatches SAVE_ADDRESS_FAILURE when addresses do not match" name="saveAddress dispatches SAVE_ADDRESS_FAILURE when addresses do not match" time="0.002">
    </testcase>
    <testcase classname="saveAddress dispatches SAVE_ADDRESS_SUCCESS on update success" name="saveAddress dispatches SAVE_ADDRESS_SUCCESS on update success" time="0.014">
    </testcase>
    <testcase classname="saveAddress dispatches SAVE_ADDRESS_FAILURE on update failure" name="saveAddress dispatches SAVE_ADDRESS_FAILURE on update failure" time="0.001">
    </testcase>
    <testcase classname="getLettersList dispatches GET_LETTERS_SUCCESS when GET succeeds" name="getLettersList dispatches GET_LETTERS_SUCCESS when GET succeeds" time="0.001">
    </testcase>
    <testcase classname="getLettersList dispatches GET_LETTERS_FAILURE when GET fails with generic error" name="getLettersList dispatches GET_LETTERS_FAILURE when GET fails with generic error" time="0.001">
    </testcase>
    <testcase classname="getLettersList dispatches BACKEND_AUTHENTICATION_ERROR when GET fails with 403" name="getLettersList dispatches BACKEND_AUTHENTICATION_ERROR when GET fails with 403" time="0.002">
    </testcase>
    <testcase classname="getLettersList dispatches GET_LETTERS_FAILURE when GET fails with 500" name="getLettersList dispatches GET_LETTERS_FAILURE when GET fails with 500" time="0">
    </testcase>
    <testcase classname="getLettersList dispatches LETTER_ELIGIBILITY_ERROR when GET fails with 502" name="getLettersList dispatches LETTER_ELIGIBILITY_ERROR when GET fails with 502" time="0.001">
    </testcase>
    <testcase classname="getLettersList dispatches BACKEND_SERVICE_ERROR when GET fails with 503" name="getLettersList dispatches BACKEND_SERVICE_ERROR when GET fails with 503" time="0.001">
    </testcase>
    <testcase classname="getLettersList dispatches BACKEND_SERVICE_ERROR when GET fails with 504" name="getLettersList dispatches BACKEND_SERVICE_ERROR when GET fails with 504" time="0">
    </testcase>
    <testcase classname="getLetterListAndBSLOptions should make the call to get the BSL options after the letter list call is complete" name="getLetterListAndBSLOptions should make the call to get the BSL options after the letter list call is complete" time="0.002">
    </testcase>
    <testcase classname="getLetterListAndBSLOptions should not make the call to get the BSL options if the letter list call fails" name="getLetterListAndBSLOptions should not make the call to get the BSL options if the letter list call fails" time="0.001">
    </testcase>
    <testcase classname="getMailingAddress dispatches GET_ADDRESS_SUCCESS when GET succeeds" name="getMailingAddress dispatches GET_ADDRESS_SUCCESS when GET succeeds" time="0.002">
    </testcase>
    <testcase classname="getMailingAddress dispatches GET_ADDRESS_FAILURE when GET fails" name="getMailingAddress dispatches GET_ADDRESS_FAILURE when GET fails" time="0.002">
    </testcase>
    <testcase classname="getMailingAddress dispatches GET_ADDRESS_FAILURE when response mangled" name="getMailingAddress dispatches GET_ADDRESS_FAILURE when response mangled" time="0.001">
    </testcase>
    <testcase classname="getMailingAddress dispatches with clone of response object (not original)" name="getMailingAddress dispatches with clone of response object (not original)" time="0.002">
    </testcase>
    <testcase classname="getMailingAddress modifies military addresses" name="getMailingAddress modifies military addresses" time="0.002">
    </testcase>
    <testcase classname="getBenefitSummaryOptions dispatches SUCCESS action with response when GET succeeds" name="getBenefitSummaryOptions dispatches SUCCESS action with response when GET succeeds" time="0.001">
    </testcase>
    <testcase classname="getBenefitSummaryOptions dispatches FAILURE action when GET fails" name="getBenefitSummaryOptions dispatches FAILURE action when GET fails" time="0.003">
    </testcase>
    <testcase classname="getLetterPdf dispatches download pending action first" name="getLetterPdf dispatches download pending action first" time="0.004">
    </testcase>
    <testcase classname="getLetterPdf dispatches SUCCESS action when fetch succeeds for BSL" name="getLetterPdf dispatches SUCCESS action when fetch succeeds for BSL" time="0.003">
    </testcase>
    <testcase classname="getLetterPdf dispatches SUCCESS action when fetch succeeds for non-BSL" name="getLetterPdf dispatches SUCCESS action when fetch succeeds for non-BSL" time="0.001">
    </testcase>
    <testcase classname="getLetterPdf dispatches SUCCESS action when fetch succeeds on IE10" name="getLetterPdf dispatches SUCCESS action when fetch succeeds on IE10" time="0.002">
    </testcase>
    <testcase classname="getLetterPdf dispatches FAILURE action if download fails" name="getLetterPdf dispatches FAILURE action if download fails" time="0.002">
    </testcase>
    <testcase classname="getAddressCountries dispatches SUCCESS when GET succeeds" name="getAddressCountries dispatches SUCCESS when GET succeeds" time="0.002">
    </testcase>
    <testcase classname="getAddressCountries dispatches FAILURE when GET fails" name="getAddressCountries dispatches FAILURE when GET fails" time="0.002">
    </testcase>
    <testcase classname="getAddressStates dispatches SUCCESS when GET succeeds" name="getAddressStates dispatches SUCCESS when GET succeeds" time="0.001">
    </testcase>
    <testcase classname="getAddressStates dispatches FAILURE when GET fails" name="getAddressStates dispatches FAILURE when GET fails" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;PrescriptionsWidget&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:05" time="0.226" tests="5">
    <testcase classname="&lt;PrescriptionsWidget&gt; should not render if rx is inaccessible" name="&lt;PrescriptionsWidget&gt; should not render if rx is inaccessible" time="0.092">
    </testcase>
    <testcase classname="&lt;PrescriptionsWidget&gt; should render if rx is accessible" name="&lt;PrescriptionsWidget&gt; should render if rx is accessible" time="0.019">
    </testcase>
    <testcase classname="&lt;PrescriptionsWidget&gt; should render rx" name="&lt;PrescriptionsWidget&gt; should render rx" time="0.001">
    </testcase>
    <testcase classname="&lt;PrescriptionsWidget&gt; should render error state" name="&lt;PrescriptionsWidget&gt; should render error state" time="0.001">
    </testcase>
    <testcase classname="&lt;PrescriptionsWidget&gt; should render empty state properly" name="&lt;PrescriptionsWidget&gt; should render empty state properly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageSubject&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:06" time="0.203" tests="3">
    <testcase classname="&lt;MessageSubject&gt; should render correctly" name="&lt;MessageSubject&gt; should render correctly" time="0.093">
    </testcase>
    <testcase classname="&lt;MessageSubject&gt; should have the expected className" name="&lt;MessageSubject&gt; should have the expected className" time="0">
    </testcase>
    <testcase classname="&lt;MessageSubject&gt; should render the expected child elements" name="&lt;MessageSubject&gt; should render the expected child elements" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Details&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:06" time="0.217" tests="3">
    <testcase classname="&lt;Details&gt; should render" name="&lt;Details&gt; should render" time="0.106">
    </testcase>
    <testcase classname="&lt;Details&gt; should render details" name="&lt;Details&gt; should render details" time="0.002">
    </testcase>
    <testcase classname="&lt;Details&gt; should render a contact card" name="&lt;Details&gt; should render a contact card" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RequiredTermsAcceptanceView&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:06" time="0.208" tests="4">
    <testcase classname="&lt;RequiredTermsAcceptanceView&gt; should call initial actions properly" name="&lt;RequiredTermsAcceptanceView&gt; should call initial actions properly" time="0.089">
    </testcase>
    <testcase classname="&lt;RequiredTermsAcceptanceView&gt; should properly render loading state" name="&lt;RequiredTermsAcceptanceView&gt; should properly render loading state" time="0.002">
    </testcase>
    <testcase classname="&lt;RequiredTermsAcceptanceView&gt; should properly render children if terms accepted" name="&lt;RequiredTermsAcceptanceView&gt; should properly render children if terms accepted" time="0.001">
    </testcase>
    <testcase classname="&lt;RequiredTermsAcceptanceView&gt; should properly render prompt if terms not accepted" name="&lt;RequiredTermsAcceptanceView&gt; should properly render prompt if terms not accepted" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;UpdatePage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:06" time="0.229" tests="3">
    <testcase classname="&lt;UpdatePage&gt; should render" name="&lt;UpdatePage&gt; should render" time="0.115">
    </testcase>
    <testcase classname="&lt;UpdatePage&gt; should correctly redirect when update is complete" name="&lt;UpdatePage&gt; should correctly redirect when update is complete" time="0.001">
    </testcase>
    <testcase classname="&lt;UpdatePage&gt; should correctly redirect when skip update is clicked" name="&lt;UpdatePage&gt; should correctly redirect when skip update is clicked" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="HCA helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:06" time="0.243" tests="14">
    <testcase classname="HCA helpers expensesLessThanIncome should return true if expenses less than income" name="HCA helpers expensesLessThanIncome should return true if expenses less than income" time="0.127">
    </testcase>
    <testcase classname="HCA helpers expensesLessThanIncome should return false if expenses greater than income" name="HCA helpers expensesLessThanIncome should return false if expenses greater than income" time="0">
    </testcase>
    <testcase classname="HCA helpers expensesLessThanIncome should include income from dependents" name="HCA helpers expensesLessThanIncome should include income from dependents" time="0">
    </testcase>
    <testcase classname="HCA helpers expensesLessThanIncome should include spouse income" name="HCA helpers expensesLessThanIncome should include spouse income" time="0">
    </testcase>
    <testcase classname="HCA helpers expensesLessThanIncome should show only if last non-zero expense amount" name="HCA helpers expensesLessThanIncome should show only if last non-zero expense amount" time="0">
    </testcase>
    <testcase classname="HCA helpers expensesLessThanIncome should show warning just under last field if all expenses are filled" name="HCA helpers expensesLessThanIncome should show warning just under last field if all expenses are filled" time="0">
    </testcase>
    <testcase classname="HCA helpers getCSTOffset should return -300 if is daylight savings time" name="HCA helpers getCSTOffset should return -300 if is daylight savings time" time="0">
    </testcase>
    <testcase classname="HCA helpers getCSTOffset should return -360 if is not daylight savings time" name="HCA helpers getCSTOffset should return -360 if is not daylight savings time" time="0">
    </testcase>
    <testcase classname="HCA helpers getOffsetTime should convert an offset number of minutes into milliseconds" name="HCA helpers getOffsetTime should convert an offset number of minutes into milliseconds" time="0.001">
    </testcase>
    <testcase classname="HCA helpers getAdjustedTime should determine utc time" name="HCA helpers getAdjustedTime should determine utc time" time="0">
    </testcase>
    <testcase classname="HCA helpers isAfterCentralTimeDate should return true if the discharge date is after the Central Time reference date" name="HCA helpers isAfterCentralTimeDate should return true if the discharge date is after the Central Time reference date" time="0">
    </testcase>
    <testcase classname="HCA helpers isAfterCentralTimeDate should return false if the discharge date is not after the Central Time reference date" name="HCA helpers isAfterCentralTimeDate should return false if the discharge date is not after the Central Time reference date" time="0.001">
    </testcase>
    <testcase classname="HCA helpers isBeforeCentralTimeDate should return true if the discharge date is after the Central Time reference date" name="HCA helpers isBeforeCentralTimeDate should return true if the discharge date is after the Central Time reference date" time="0">
    </testcase>
    <testcase classname="HCA helpers isBeforeCentralTimeDate should return false if the discharge date is not after the Central Time reference date" name="HCA helpers isBeforeCentralTimeDate should return false if the discharge date is not after the Central Time reference date" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Thread" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:06" time="0.206" tests="1">
    <testcase classname="Thread should render" name="Thread should render" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;HealthRecordsApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:07" time="0.228" tests="1">
    <testcase classname="&lt;HealthRecordsApp&gt; should render" name="&lt;HealthRecordsApp&gt; should render" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ModalCreateFolder&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:07" time="0.215" tests="3">
    <testcase classname="&lt;ModalCreateFolder&gt; should render correctly" name="&lt;ModalCreateFolder&gt; should render correctly" time="0.106">
    </testcase>
    <testcase classname="&lt;ModalCreateFolder&gt; should render expected output" name="&lt;ModalCreateFolder&gt; should render expected output" time="0.004">
    </testcase>
    <testcase classname="&lt;ModalCreateFolder&gt; should show loading indicator when loading" name="&lt;ModalCreateFolder&gt; should show loading indicator when loading" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Modals&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:07" time="0.226" tests="1">
    <testcase classname="&lt;Modals&gt; should render" name="&lt;Modals&gt; should render" time="0.081">
    </testcase>
  </testsuite>
  <testsuite name="Schemaform &lt;FormSaved&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:07" time="0.222" tests="3">
    <testcase classname="Schemaform &lt;FormSaved&gt; should render" name="Schemaform &lt;FormSaved&gt; should render" time="0.115">
    </testcase>
    <testcase classname="Schemaform &lt;FormSaved&gt; should display verify link if user is not verified" name="Schemaform &lt;FormSaved&gt; should display verify link if user is not verified" time="0.001">
    </testcase>
    <testcase classname="Schemaform &lt;FormSaved&gt; should not display verify link if user is verified" name="Schemaform &lt;FormSaved&gt; should not display verify link if user is verified" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;NewMessageForm&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:07" time="0.199" tests="4">
    <testcase classname="&lt;NewMessageForm&gt; should render correctly" name="&lt;NewMessageForm&gt; should render correctly" time="0.088">
    </testcase>
    <testcase classname="&lt;NewMessageForm&gt; should have the expected id" name="&lt;NewMessageForm&gt; should have the expected id" time="0.001">
    </testcase>
    <testcase classname="&lt;NewMessageForm&gt; should not render recipients list if request fails" name="&lt;NewMessageForm&gt; should not render recipients list if request fails" time="0.001">
    </testcase>
    <testcase classname="&lt;NewMessageForm&gt; should render recipients list when expected" name="&lt;NewMessageForm&gt; should render recipients list when expected" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;EnrollmentHistory&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:07" time="0.198" tests="5">
    <testcase classname="&lt;EnrollmentHistory&gt; should render" name="&lt;EnrollmentHistory&gt; should render" time="0.086">
    </testcase>
    <testcase classname="&lt;EnrollmentHistory&gt; should show enrollments if veteran is eligible" name="&lt;EnrollmentHistory&gt; should show enrollments if veteran is eligible" time="0.002">
    </testcase>
    <testcase classname="&lt;EnrollmentHistory&gt; should not show enrollments if veteran is not eligible" name="&lt;EnrollmentHistory&gt; should not show enrollments if veteran is not eligible" time="0">
    </testcase>
    <testcase classname="&lt;EnrollmentHistory&gt; should show history may be incorrect warning" name="&lt;EnrollmentHistory&gt; should show history may be incorrect warning" time="0.001">
    </testcase>
    <testcase classname="&lt;EnrollmentHistory&gt; should show no enrollment history warning" name="&lt;EnrollmentHistory&gt; should show no enrollment history warning" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ModalConfirmDelete&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:08" time="0.188" tests="3">
    <testcase classname="&lt;ModalConfirmDelete&gt; should render correctly" name="&lt;ModalConfirmDelete&gt; should render correctly" time="0.069">
    </testcase>
    <testcase classname="&lt;ModalConfirmDelete&gt; should render the expected child elements" name="&lt;ModalConfirmDelete&gt; should render the expected child elements" time="0.001">
    </testcase>
    <testcase classname="&lt;ModalConfirmDelete&gt; should handle deletion correctly" name="&lt;ModalConfirmDelete&gt; should handle deletion correctly" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="MessageSearchAdvanced" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:08" time="0.245" tests="3">
    <testcase classname="MessageSearchAdvanced should render" name="MessageSearchAdvanced should render" time="0.105">
    </testcase>
    <testcase classname="MessageSearchAdvanced should display a form when expanded" name="MessageSearchAdvanced should display a form when expanded" time="0.03">
    </testcase>
    <testcase classname="MessageSearchAdvanced should search by recipient instead of sender" name="MessageSearchAdvanced should search by recipient instead of sender" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ToggleThread&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:08" time="0.178" tests="6">
    <testcase classname="&lt;ToggleThread&gt; should render correctly" name="&lt;ToggleThread&gt; should render correctly" time="0.072">
    </testcase>
    <testcase classname="&lt;ToggleThread&gt; should have the expected classname" name="&lt;ToggleThread&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;ToggleThread&gt; should have the expected icon classname when expanded" name="&lt;ToggleThread&gt; should have the expected icon classname when expanded" time="0.001">
    </testcase>
    <testcase classname="&lt;ToggleThread&gt; should have the expected icon classname when collapsed" name="&lt;ToggleThread&gt; should have the expected icon classname when collapsed" time="0">
    </testcase>
    <testcase classname="&lt;ToggleThread&gt; should have the expected action text when expanded" name="&lt;ToggleThread&gt; should have the expected action text when expanded" time="0.001">
    </testcase>
    <testcase classname="&lt;ToggleThread&gt; should have the expected action text when collapsed" name="&lt;ToggleThread&gt; should have the expected action text when collapsed" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;FilesPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:08" time="0.192" tests="9">
    <testcase classname="&lt;FilesPage&gt; should render notification" name="&lt;FilesPage&gt; should render notification" time="0.074">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should hide requested files when closed" name="&lt;FilesPage&gt; should hide requested files when closed" time="0.001">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should show requested files when open" name="&lt;FilesPage&gt; should show requested files when open" time="0.004">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should render ask va to decide component" name="&lt;FilesPage&gt; should render ask va to decide component" time="0.003">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should display turned in docs" name="&lt;FilesPage&gt; should display turned in docs" time="0.004">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should display additional evidence docs" name="&lt;FilesPage&gt; should display additional evidence docs" time="0.003">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should show never received docs as tracked items" name="&lt;FilesPage&gt; should show never received docs as tracked items" time="0">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should clear alert" name="&lt;FilesPage&gt; should clear alert" time="0.001">
    </testcase>
    <testcase classname="&lt;FilesPage&gt; should clear notification when leaving" name="&lt;FilesPage&gt; should clear notification when leaving" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ErrorableSelect&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:08" time="0.212" tests="6">
    <testcase classname="&lt;ErrorableSelect&gt; ensure value changes propagate" name="&lt;ErrorableSelect&gt; ensure value changes propagate" time="0.07">
    </testcase>
    <testcase classname="&lt;ErrorableSelect&gt; no error styles when errorMessage undefined" name="&lt;ErrorableSelect&gt; no error styles when errorMessage undefined" time="0.014">
    </testcase>
    <testcase classname="&lt;ErrorableSelect&gt; has error styles when errorMessage is set" name="&lt;ErrorableSelect&gt; has error styles when errorMessage is set" time="0.003">
    </testcase>
    <testcase classname="&lt;ErrorableSelect&gt; required=false does not have required asterisk" name="&lt;ErrorableSelect&gt; required=false does not have required asterisk" time="0">
    </testcase>
    <testcase classname="&lt;ErrorableSelect&gt; required=true has required asterisk" name="&lt;ErrorableSelect&gt; required=true has required asterisk" time="0.001">
    </testcase>
    <testcase classname="&lt;ErrorableSelect&gt; label attribute propagates" name="&lt;ErrorableSelect&gt; label attribute propagates" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConnectedAcctApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:08" time="0.247" tests="3">
    <testcase classname="&lt;ConnectedAcctApp&gt; should render loading indicator while loading" name="&lt;ConnectedAcctApp&gt; should render loading indicator while loading" time="0.106">
    </testcase>
    <testcase classname="&lt;ConnectedAcctApp&gt; should render nothing found indicator if accounts is empty" name="&lt;ConnectedAcctApp&gt; should render nothing found indicator if accounts is empty" time="0.017">
    </testcase>
    <testcase classname="&lt;ConnectedAcctApp&gt; should render loading indicator while loading" name="&lt;ConnectedAcctApp&gt; should render loading indicator while loading" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;TabItem&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:09" time="0.184" tests="2">
    <testcase classname="&lt;TabItem&gt; should render tab" name="&lt;TabItem&gt; should render tab" time="0.08">
    </testcase>
    <testcase classname="&lt;TabItem&gt; should use id if present" name="&lt;TabItem&gt; should use id if present" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;CopyMailingAddress/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:09" time="0.171" tests="2">
    <testcase classname="&lt;CopyMailingAddress/&gt; mapStateToProps returns the required props" name="&lt;CopyMailingAddress/&gt; mapStateToProps returns the required props" time="0.053">
    </testcase>
    <testcase classname="&lt;CopyMailingAddress/&gt; mapStateToProps returns checked as true when addresses are equal" name="&lt;CopyMailingAddress/&gt; mapStateToProps returns checked as true when addresses are equal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="schemaform &lt;ApplicationStatus&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:09" time="0.205" tests="6">
    <testcase classname="schemaform &lt;ApplicationStatus&gt; should render loading" name="schemaform &lt;ApplicationStatus&gt; should render loading" time="0.079">
    </testcase>
    <testcase classname="schemaform &lt;ApplicationStatus&gt; should render apply button" name="schemaform &lt;ApplicationStatus&gt; should render apply button" time="0.008">
    </testcase>
    <testcase classname="schemaform &lt;ApplicationStatus&gt; should render saved form" name="schemaform &lt;ApplicationStatus&gt; should render saved form" time="0.007">
    </testcase>
    <testcase classname="schemaform &lt;ApplicationStatus&gt; should render expired form" name="schemaform &lt;ApplicationStatus&gt; should render expired form" time="0.001">
    </testcase>
    <testcase classname="schemaform &lt;ApplicationStatus&gt; should render saved form from ids" name="schemaform &lt;ApplicationStatus&gt; should render saved form from ids" time="0.002">
    </testcase>
    <testcase classname="schemaform &lt;ApplicationStatus&gt; should render multiple forms message" name="schemaform &lt;ApplicationStatus&gt; should render multiple forms message" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SortMenu&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:09" time="0.217" tests="10">
    <testcase classname="&lt;SortMenu&gt; should render" name="&lt;SortMenu&gt; should render" time="0.088">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should render the correct options" name="&lt;SortMenu&gt; should render the correct options" time="0.002">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should render the sort links for string-based sorts" name="&lt;SortMenu&gt; should render the sort links for string-based sorts" time="0.001">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should render the sort links for date-based sorts" name="&lt;SortMenu&gt; should render the sort links for date-based sorts" time="0.001">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should set the string-based ascending order link to active" name="&lt;SortMenu&gt; should set the string-based ascending order link to active" time="0.001">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should set the string-based descending order link to active" name="&lt;SortMenu&gt; should set the string-based descending order link to active" time="0.001">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should set the date-based ascending order link to active" name="&lt;SortMenu&gt; should set the date-based ascending order link to active" time="0.001">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should set the date-based descending order link to active" name="&lt;SortMenu&gt; should set the date-based descending order link to active" time="0.001">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should trigger handleChange correctly" name="&lt;SortMenu&gt; should trigger handleChange correctly" time="0.006">
    </testcase>
    <testcase classname="&lt;SortMenu&gt; should trigger handleClick correctly" name="&lt;SortMenu&gt; should trigger handleClick correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimEstimate&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:09" time="0.197" tests="4">
    <testcase classname="&lt;ClaimEstimate&gt; should render estimated date" name="&lt;ClaimEstimate&gt; should render estimated date" time="0.089">
    </testcase>
    <testcase classname="&lt;ClaimEstimate&gt; should render estimated date warning" name="&lt;ClaimEstimate&gt; should render estimated date warning" time="0.002">
    </testcase>
    <testcase classname="&lt;ClaimEstimate&gt; should render no estimate warning" name="&lt;ClaimEstimate&gt; should render no estimate warning" time="0">
    </testcase>
    <testcase classname="&lt;ClaimEstimate&gt; should render no estimate warning with far away date" name="&lt;ClaimEstimate&gt; should render no estimate warning with far away date" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Compose" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:09" time="0.215" tests="1">
    <testcase classname="Compose should render" name="Compose should render" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Breadcrumbs&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:10" time="0.188" tests="1">
    <testcase classname="&lt;Breadcrumbs&gt; should render first two items" name="&lt;Breadcrumbs&gt; should render first two items" time="0.088">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageAttachments&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:10" time="0.22" tests="4">
    <testcase classname="&lt;MessageAttachments&gt; should render correctly" name="&lt;MessageAttachments&gt; should render correctly" time="0.102">
    </testcase>
    <testcase classname="&lt;MessageAttachments&gt; should have the expected classname" name="&lt;MessageAttachments&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageAttachments&gt; should render attachments" name="&lt;MessageAttachments&gt; should render attachments" time="0">
    </testcase>
    <testcase classname="&lt;MessageAttachments&gt; should handle deletion correctly" name="&lt;MessageAttachments&gt; should handle deletion correctly" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConnectedApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:10" time="0.232" tests="2">
    <testcase classname="&lt;ConnectedApp&gt; opening the row and clicking button opens the confirm delete modal" name="&lt;ConnectedApp&gt; opening the row and clicking button opens the confirm delete modal" time="0.105">
    </testcase>
    <testcase classname="&lt;ConnectedApp&gt; calls confirm delete" name="&lt;ConnectedApp&gt; calls confirm delete" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;UserInfoSection&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:10" time="0.205" tests="9">
    <testcase classname="&lt;UserInfoSection&gt; should render" name="&lt;UserInfoSection&gt; should render" time="0.073">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; showCurrentAsOfAlert is falsey should omit the &quot;current as of&quot; date" name="&lt;UserInfoSection&gt; showCurrentAsOfAlert is falsey should omit the &quot;current as of&quot; date" time="0.02">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; showCurrentAsOfAlert is falsey should omit the &quot;current as of&quot; date" name="&lt;UserInfoSection&gt; showCurrentAsOfAlert is falsey should omit the &quot;current as of&quot; date" time="0.001">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; showCurrentAsOfAlert is truthy should display the &quot;current as of&quot; date" name="&lt;UserInfoSection&gt; showCurrentAsOfAlert is truthy should display the &quot;current as of&quot; date" time="0.001">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; veteran eligibility should show benefit information if eligible" name="&lt;UserInfoSection&gt; veteran eligibility should show benefit information if eligible" time="0.001">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; veteran eligibility should show not qualified message if not eligible" name="&lt;UserInfoSection&gt; veteran eligibility should show not qualified message if not eligible" time="0.002">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; percentageBenefit is not provided should display &quot;unavailable&quot;" name="&lt;UserInfoSection&gt; percentageBenefit is not provided should display &quot;unavailable&quot;" time="0.001">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; should display delimitingDate should display the delimiting date" name="&lt;UserInfoSection&gt; should display delimitingDate should display the delimiting date" time="0.001">
    </testcase>
    <testcase classname="&lt;UserInfoSection&gt; should display delimitingDate should not display the delimiting date if active duty" name="&lt;UserInfoSection&gt; should display delimitingDate should not display the delimiting date if active duty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SearchMenu&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:10" time="0.184" tests="1">
    <testcase classname="&lt;SearchMenu&gt; should render" name="&lt;SearchMenu&gt; should render" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Disclaimer&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:10" time="0.192" tests="4">
    <testcase classname="&lt;Disclaimer&gt; should render" name="&lt;Disclaimer&gt; should render" time="0.084">
    </testcase>
    <testcase classname="&lt;Disclaimer&gt; should have the expected class name" name="&lt;Disclaimer&gt; should have the expected class name" time="0.001">
    </testcase>
    <testcase classname="&lt;Disclaimer&gt; should render expected button text when open" name="&lt;Disclaimer&gt; should render expected button text when open" time="0">
    </testcase>
    <testcase classname="&lt;Disclaimer&gt; should render expected button text when closed" name="&lt;Disclaimer&gt; should render expected button text when closed" time="0">
    </testcase>
  </testsuite>
  <testsuite name="modal reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:10" time="0.191" tests="5">
    <testcase classname="modal reducer should open the refill modal" name="modal reducer should open the refill modal" time="0.052">
    </testcase>
    <testcase classname="modal reducer should close the refill modal" name="modal reducer should close the refill modal" time="0.001">
    </testcase>
    <testcase classname="modal reducer should display a loader in the refill modal" name="modal reducer should display a loader in the refill modal" time="0">
    </testcase>
    <testcase classname="modal reducer should open the glossary modal" name="modal reducer should open the glossary modal" time="0">
    </testcase>
    <testcase classname="modal reducer should close the glossary modal" name="modal reducer should close the glossary modal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RequestedFilesInfo&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:11" time="0.237" tests="3">
    <testcase classname="&lt;RequestedFilesInfo&gt; should display no documents messages" name="&lt;RequestedFilesInfo&gt; should display no documents messages" time="0.125">
    </testcase>
    <testcase classname="&lt;RequestedFilesInfo&gt; should display requested items" name="&lt;RequestedFilesInfo&gt; should display requested items" time="0.006">
    </testcase>
    <testcase classname="&lt;RequestedFilesInfo&gt; should display optional files" name="&lt;RequestedFilesInfo&gt; should display optional files" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ThreadHeader" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:11" time="0.205" tests="10">
    <testcase classname="ThreadHeader should render" name="ThreadHeader should render" time="0.085">
    </testcase>
    <testcase classname="ThreadHeader should show a message nav" name="ThreadHeader should show a message nav" time="0.004">
    </testcase>
    <testcase classname="ThreadHeader should hide message nav in case of folder message count errors" name="ThreadHeader should hide message nav in case of folder message count errors" time="0.001">
    </testcase>
    <testcase classname="ThreadHeader should show a move button" name="ThreadHeader should show a move button" time="0">
    </testcase>
    <testcase classname="ThreadHeader should show a button to expand or collapse a thread with multiple messages" name="ThreadHeader should show a button to expand or collapse a thread with multiple messages" time="0">
    </testcase>
    <testcase classname="ThreadHeader should not show a button to expand or collapse a thread with only one message" name="ThreadHeader should not show a button to expand or collapse a thread with only one message" time="0.001">
    </testcase>
    <testcase classname="ThreadHeader should show a delete button" name="ThreadHeader should show a delete button" time="0.001">
    </testcase>
    <testcase classname="ThreadHeader should not show delete or move buttons for drafts or sent messages" name="ThreadHeader should not show delete or move buttons for drafts or sent messages" time="0.001">
    </testcase>
    <testcase classname="ThreadHeader should show the subject line in the title" name="ThreadHeader should show the subject line in the title" time="0">
    </testcase>
    <testcase classname="ThreadHeader should show only on mobile the subject line for a draft of a new message" name="ThreadHeader should show only on mobile the subject line for a draft of a new message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Message" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:11" time="0.224" tests="8">
    <testcase classname="Message should render" name="Message should render" time="0.077">
    </testcase>
    <testcase classname="Message should show details when expanded" name="Message should show details when expanded" time="0.003">
    </testcase>
    <testcase classname="Message should show attachments when expanded" name="Message should show attachments when expanded" time="0.005">
    </testcase>
    <testcase classname="Message should hide details when collapsed" name="Message should hide details when collapsed" time="0.001">
    </testcase>
    <testcase classname="Message should hide attachments when collapsed" name="Message should hide attachments when collapsed" time="0.001">
    </testcase>
    <testcase classname="Message should display as a draft when there is no sent date" name="Message should display as a draft when there is no sent date" time="0.001">
    </testcase>
    <testcase classname="Message should fetch attachments when they have not been loaded" name="Message should fetch attachments when they have not been loaded" time="0.016">
    </testcase>
    <testcase classname="Message should not fetch attachments after they have already been loaded" name="Message should not fetch attachments after they have already been loaded" time="0.015">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SubmittedTrackedItem&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:11" time="0.196" tests="6">
    <testcase classname="&lt;SubmittedTrackedItem&gt; should render submitted item with no docs" name="&lt;SubmittedTrackedItem&gt; should render submitted item with no docs" time="0.085">
    </testcase>
    <testcase classname="&lt;SubmittedTrackedItem&gt; should render item with doc" name="&lt;SubmittedTrackedItem&gt; should render item with doc" time="0.002">
    </testcase>
    <testcase classname="&lt;SubmittedTrackedItem&gt; should render item with multiple docs" name="&lt;SubmittedTrackedItem&gt; should render item with multiple docs" time="0.001">
    </testcase>
    <testcase classname="&lt;SubmittedTrackedItem&gt; should render reviewed item" name="&lt;SubmittedTrackedItem&gt; should render reviewed item" time="0.001">
    </testcase>
    <testcase classname="&lt;SubmittedTrackedItem&gt; should render no longer needed item by type" name="&lt;SubmittedTrackedItem&gt; should render no longer needed item by type" time="0.001">
    </testcase>
    <testcase classname="&lt;SubmittedTrackedItem&gt; should render no longer needed item by status" name="&lt;SubmittedTrackedItem&gt; should render no longer needed item by status" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Main" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:11" time="0.197" tests="1">
    <testcase classname="Main should render" name="Main should render" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ComposeButton&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:12" time="0.19" tests="4">
    <testcase classname="&lt;ComposeButton&gt; should render correctly" name="&lt;ComposeButton&gt; should render correctly" time="0.08">
    </testcase>
    <testcase classname="&lt;ComposeButton&gt; should have the expected default classname" name="&lt;ComposeButton&gt; should have the expected default classname" time="0">
    </testcase>
    <testcase classname="&lt;ComposeButton&gt; should have the expected classname when disabled" name="&lt;ComposeButton&gt; should have the expected classname when disabled" time="0">
    </testcase>
    <testcase classname="&lt;ComposeButton&gt; should render disabled button when disabled" name="&lt;ComposeButton&gt; should render disabled button when disabled" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageAttachmentsViewItem&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:12" time="0.189" tests="3">
    <testcase classname="&lt;MessageAttachmentsViewItem&gt; should render correctly" name="&lt;MessageAttachmentsViewItem&gt; should render correctly" time="0.081">
    </testcase>
    <testcase classname="&lt;MessageAttachmentsViewItem&gt; should have the expected default icon classname" name="&lt;MessageAttachmentsViewItem&gt; should have the expected default icon classname" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageAttachmentsViewItem&gt; should handle download correctly when URL is provided" name="&lt;MessageAttachmentsViewItem&gt; should handle download correctly when URL is provided" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="form reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:12" time="0.187" tests="7">
    <testcase classname="form reducer should set the start date" name="form reducer should set the start date" time="0.066">
    </testcase>
    <testcase classname="form reducer should set the end date" name="form reducer should set the end date" time="0.001">
    </testcase>
    <testcase classname="form reducer should set the date option" name="form reducer should set the date option" time="0">
    </testcase>
    <testcase classname="form reducer should toggle a report type" name="form reducer should toggle a report type" time="0.001">
    </testcase>
    <testcase classname="form reducer should toggle all report types" name="form reducer should toggle all report types" time="0.002">
    </testcase>
    <testcase classname="form reducer should set ready state to true on form success" name="form reducer should set ready state to true on form success" time="0">
    </testcase>
    <testcase classname="form reducer should set ready state to false on form success" name="form reducer should set ready state to false on form success" time="0">
    </testcase>
  </testsuite>
  <testsuite name="fields model" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:12" time="0.136" tests="4">
    <testcase classname="fields model field creation method defaults to clean" name="fields model field creation method defaults to clean" time="0.002">
    </testcase>
    <testcase classname="fields model dirtyAllFields handles base cases" name="fields model dirtyAllFields handles base cases" time="0.032">
    </testcase>
    <testcase classname="fields model dirtyAllFields handles nested objects" name="fields model dirtyAllFields handles nested objects" time="0">
    </testcase>
    <testcase classname="fields model dirtyAllFields handles arrays" name="fields model dirtyAllFields handles arrays" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Claims list reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:12" time="0.18" tests="12">
    <testcase classname="Claims list reducer should populate the claims list" name="Claims list reducer should populate the claims list" time="0.062">
    </testcase>
    <testcase classname="Claims list reducer should set the sort property" name="Claims list reducer should set the sort property" time="0.001">
    </testcase>
    <testcase classname="Claims list reducer should sort by id secondarily" name="Claims list reducer should sort by id secondarily" time="0">
    </testcase>
    <testcase classname="Claims list reducer should sort null dates after others" name="Claims list reducer should sort null dates after others" time="0">
    </testcase>
    <testcase classname="Claims list reducer should sort by date received with null dates after others" name="Claims list reducer should sort by date received with null dates after others" time="0.001">
    </testcase>
    <testcase classname="Claims list reducer should sort by claim type with null types converted to disability claim" name="Claims list reducer should sort by claim type with null types converted to disability claim" time="0.002">
    </testcase>
    <testcase classname="Claims list reducer should filter out closed claims" name="Claims list reducer should filter out closed claims" time="0.001">
    </testcase>
    <testcase classname="Claims list reducer should filter out open claims" name="Claims list reducer should filter out open claims" time="0.001">
    </testcase>
    <testcase classname="Claims list reducer should maintain the sort when filtering" name="Claims list reducer should maintain the sort when filtering" time="0">
    </testcase>
    <testcase classname="Claims list reducer should change the claims list page" name="Claims list reducer should change the claims list page" time="0.001">
    </testcase>
    <testcase classname="Claims list reducer should toggle modal flag" name="Claims list reducer should toggle modal flag" time="0.003">
    </testcase>
    <testcase classname="Claims list reducer should turn off 30 day notice flag" name="Claims list reducer should turn off 30 day notice flag" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="letters reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:12" time="0.198" tests="27">
    <testcase classname="letters reducer should not modify state if an unrecognized action is passed" name="letters reducer should not modify state if an unrecognized action is passed" time="0.009">
    </testcase>
    <testcase classname="letters reducer should handle failure to fetch letters" name="letters reducer should handle failure to fetch letters" time="0.057">
    </testcase>
    <testcase classname="letters reducer should handle backend service error" name="letters reducer should handle backend service error" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle backend authentication error" name="letters reducer should handle backend authentication error" time="0">
    </testcase>
    <testcase classname="letters reducer should handle invalid address" name="letters reducer should handle invalid address" time="0">
    </testcase>
    <testcase classname="letters reducer should handle a successful request for letters" name="letters reducer should handle a successful request for letters" time="0.006">
    </testcase>
    <testcase classname="letters reducer should handle failure to fetch benefit summary options" name="letters reducer should handle failure to fetch benefit summary options" time="0">
    </testcase>
    <testcase classname="letters reducer should handle a successful request for benefit summary options" name="letters reducer should handle a successful request for benefit summary options" time="0.012">
    </testcase>
    <testcase classname="letters reducer should update benefit summary request options" name="letters reducer should update benefit summary request options" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle a successful request for the address" name="letters reducer should handle a successful request for the address" time="0">
    </testcase>
    <testcase classname="letters reducer should handle failure to fetch the address" name="letters reducer should handle failure to fetch the address" time="0">
    </testcase>
    <testcase classname="letters reducer should handle successful request for the countries" name="letters reducer should handle successful request for the countries" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle an empty response for the countries" name="letters reducer should handle an empty response for the countries" time="0.003">
    </testcase>
    <testcase classname="letters reducer should handle failure to fetch countries" name="letters reducer should handle failure to fetch countries" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle successful request for the states" name="letters reducer should handle successful request for the states" time="0">
    </testcase>
    <testcase classname="letters reducer should handle empty response for the states" name="letters reducer should handle empty response for the states" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle failure to fetch states" name="letters reducer should handle failure to fetch states" time="0">
    </testcase>
    <testcase classname="letters reducer should handle a letter eligibility error" name="letters reducer should handle a letter eligibility error" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle updating a benefit summary request option" name="letters reducer should handle updating a benefit summary request option" time="0">
    </testcase>
    <testcase classname="letters reducer should handle downloading a pdf" name="letters reducer should handle downloading a pdf" time="0">
    </testcase>
    <testcase classname="letters reducer should handle successfully downloading a pdf" name="letters reducer should handle successfully downloading a pdf" time="0">
    </testcase>
    <testcase classname="letters reducer should handle failing to download a pdf" name="letters reducer should handle failing to download a pdf" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle save address pending" name="letters reducer should handle save address pending" time="0">
    </testcase>
    <testcase classname="letters reducer should handle successfully saving an address" name="letters reducer should handle successfully saving an address" time="0.001">
    </testcase>
    <testcase classname="letters reducer should handle failing to save an address" name="letters reducer should handle failing to save an address" time="0">
    </testcase>
    <testcase classname="letters reducer should handle editing and address" name="letters reducer should handle editing and address" time="0">
    </testcase>
    <testcase classname="letters reducer should handle cancelling editing and address" name="letters reducer should handle cancelling editing and address" time="0">
    </testcase>
  </testsuite>
  <testsuite name="facilities reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:13" time="0.103" tests="4">
    <testcase classname="facilities reducer should handle fetching a single facility" name="facilities reducer should handle fetching a single facility" time="0.008">
    </testcase>
    <testcase classname="facilities reducer should handle fetching a list of facilities" name="facilities reducer should handle fetching a list of facilities" time="0">
    </testcase>
    <testcase classname="facilities reducer should handle failure case" name="facilities reducer should handle failure case" time="0">
    </testcase>
    <testcase classname="facilities reducer should handle clearing search results" name="facilities reducer should handle clearing search results" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageSubjectGroup&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:13" time="0.189" tests="5">
    <testcase classname="&lt;MessageSubjectGroup&gt; should render correctly" name="&lt;MessageSubjectGroup&gt; should render correctly" time="0.078">
    </testcase>
    <testcase classname="&lt;MessageSubjectGroup&gt; should have the expected classname if no error" name="&lt;MessageSubjectGroup&gt; should have the expected classname if no error" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageSubjectGroup&gt; should have the expected classname if there is an error" name="&lt;MessageSubjectGroup&gt; should have the expected classname if there is an error" time="0">
    </testcase>
    <testcase classname="&lt;MessageSubjectGroup&gt; should render the expected child elements" name="&lt;MessageSubjectGroup&gt; should render the expected child elements" time="0">
    </testcase>
    <testcase classname="&lt;MessageSubjectGroup&gt; should pass props to child select element" name="&lt;MessageSubjectGroup&gt; should pass props to child select element" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;StepHeader&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:13" time="0.184" tests="2">
    <testcase classname="&lt;StepHeader&gt; should render" name="&lt;StepHeader&gt; should render" time="0.076">
    </testcase>
    <testcase classname="&lt;StepHeader&gt; should format step header" name="&lt;StepHeader&gt; should format step header" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AppealLayout&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:13" time="0.185" tests="1">
    <testcase classname="&lt;AppealLayout&gt; should render breadcrumbs and children" name="&lt;AppealLayout&gt; should render breadcrumbs and children" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="hca &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:13" time="0.191" tests="2">
    <testcase classname="hca &lt;ConfirmationPage&gt; should render" name="hca &lt;ConfirmationPage&gt; should render" time="0.083">
    </testcase>
    <testcase classname="hca &lt;ConfirmationPage&gt; should render without response properties" name="hca &lt;ConfirmationPage&gt; should render without response properties" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AcceptTermsPrompt&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:13" time="0.201" tests="4">
    <testcase classname="&lt;AcceptTermsPrompt&gt; should be an empty div if there is no content" name="&lt;AcceptTermsPrompt&gt; should be an empty div if there is no content" time="0.086">
    </testcase>
    <testcase classname="&lt;AcceptTermsPrompt&gt; should call onAccept correctly" name="&lt;AcceptTermsPrompt&gt; should call onAccept correctly" time="0.008">
    </testcase>
    <testcase classname="&lt;AcceptTermsPrompt&gt; submit button should be disabled by default" name="&lt;AcceptTermsPrompt&gt; submit button should be disabled by default" time="0.001">
    </testcase>
    <testcase classname="&lt;AcceptTermsPrompt&gt; submit button should be enabled if state is valid" name="&lt;AcceptTermsPrompt&gt; submit button should be enabled if state is valid" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Edu 1990n &lt;ConfirmationPage&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:13" time="0.181" tests="2">
    <testcase classname="Edu 1990n &lt;ConfirmationPage&gt; should render" name="Edu 1990n &lt;ConfirmationPage&gt; should render" time="0.076">
    </testcase>
    <testcase classname="Edu 1990n &lt;ConfirmationPage&gt; should expand documents" name="Edu 1990n &lt;ConfirmationPage&gt; should expand documents" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SubmitRefill&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.17" tests="3">
    <testcase classname="&lt;SubmitRefill&gt; should render" name="&lt;SubmitRefill&gt; should render" time="0.066">
    </testcase>
    <testcase classname="&lt;SubmitRefill&gt; should have the expected className" name="&lt;SubmitRefill&gt; should have the expected className" time="0.001">
    </testcase>
    <testcase classname="&lt;SubmitRefill&gt; should show the expected button text" name="&lt;SubmitRefill&gt; should show the expected button text" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonManageFolders&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.202" tests="2">
    <testcase classname="&lt;ButtonManageFolders&gt; should render correctly" name="&lt;ButtonManageFolders&gt; should render correctly" time="0.094">
    </testcase>
    <testcase classname="&lt;ButtonManageFolders&gt; should have the expected classname" name="&lt;ButtonManageFolders&gt; should have the expected classname" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="compose reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.172" tests="8">
    <testcase classname="compose reducer should delete a new message" name="compose reducer should delete a new message" time="0.004">
    </testcase>
    <testcase classname="compose reducer should add attachments to a new message" name="compose reducer should add attachments to a new message" time="0.052">
    </testcase>
    <testcase classname="compose reducer should maintain a growing list of attachments for a new message" name="compose reducer should maintain a growing list of attachments for a new message" time="0.001">
    </testcase>
    <testcase classname="compose reducer should delete attachments from a new message" name="compose reducer should delete attachments from a new message" time="0.001">
    </testcase>
    <testcase classname="compose reducer should set the recipient for a new message" name="compose reducer should set the recipient for a new message" time="0">
    </testcase>
    <testcase classname="compose reducer should set the category for a new message" name="compose reducer should set the category for a new message" time="0">
    </testcase>
    <testcase classname="compose reducer should set the subject for a new message" name="compose reducer should set the subject for a new message" time="0">
    </testcase>
    <testcase classname="compose reducer should set the text for a new message" name="compose reducer should set the text for a new message" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Pensions SpouseMarriageTitle" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.189" tests="2">
    <testcase classname="Pensions SpouseMarriageTitle should render first marriage title" name="Pensions SpouseMarriageTitle should render first marriage title" time="0.077">
    </testcase>
    <testcase classname="Pensions SpouseMarriageTitle should render marriage title with number value" name="Pensions SpouseMarriageTitle should render marriage title with number value" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;TrackPackageLink&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.186" tests="4">
    <testcase classname="&lt;TrackPackageLink&gt; should render" name="&lt;TrackPackageLink&gt; should render" time="0.083">
    </testcase>
    <testcase classname="&lt;TrackPackageLink&gt; should have the expected className" name="&lt;TrackPackageLink&gt; should have the expected className" time="0.001">
    </testcase>
    <testcase classname="&lt;TrackPackageLink&gt; should show expected element when external link" name="&lt;TrackPackageLink&gt; should show expected element when external link" time="0.001">
    </testcase>
    <testcase classname="&lt;TrackPackageLink&gt; should show expected element when internal link" name="&lt;TrackPackageLink&gt; should show expected element when internal link" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AccountApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.192" tests="1">
    <testcase classname="&lt;AccountApp&gt; should render" name="&lt;AccountApp&gt; should render" time="0.085">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonDelete&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.182" tests="3">
    <testcase classname="&lt;ButtonDelete&gt; should render correctly" name="&lt;ButtonDelete&gt; should render correctly" time="0.068">
    </testcase>
    <testcase classname="&lt;ButtonDelete&gt; should have the expected classname" name="&lt;ButtonDelete&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;ButtonDelete&gt; should handle click action properly" name="&lt;ButtonDelete&gt; should handle click action properly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageProviderLink&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:14" time="0.184" tests="2">
    <testcase classname="&lt;MessageProviderLink&gt; should render" name="&lt;MessageProviderLink&gt; should render" time="0.078">
    </testcase>
    <testcase classname="&lt;MessageProviderLink&gt; should have the expected className" name="&lt;MessageProviderLink&gt; should have the expected className" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AddressContent/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:15" time="0.178" tests="3">
    <testcase classname="&lt;AddressContent/&gt; should render" name="&lt;AddressContent/&gt; should render" time="0.066">
    </testcase>
    <testcase classname="&lt;AddressContent/&gt; should render an &lt;UpdateFailureAlert/&gt; if address save fails" name="&lt;AddressContent/&gt; should render an &lt;UpdateFailureAlert/&gt; if address save fails" time="0.005">
    </testcase>
    <testcase classname="&lt;AddressContent/&gt; should render an &lt;AddressBlock/&gt; if there is no save error" name="&lt;AddressContent/&gt; should render an &lt;AddressBlock/&gt; if there is no save error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ConfirmRefillModal&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:15" time="0.195" tests="5">
    <testcase classname="&lt;ConfirmRefillModal&gt; should render" name="&lt;ConfirmRefillModal&gt; should render" time="0.084">
    </testcase>
    <testcase classname="&lt;ConfirmRefillModal&gt; should have the expected id" name="&lt;ConfirmRefillModal&gt; should have the expected id" time="0.002">
    </testcase>
    <testcase classname="&lt;ConfirmRefillModal&gt; should render a Modal" name="&lt;ConfirmRefillModal&gt; should render a Modal" time="0">
    </testcase>
    <testcase classname="&lt;ConfirmRefillModal&gt; should call refillPrescription correctly" name="&lt;ConfirmRefillModal&gt; should call refillPrescription correctly" time="0.003">
    </testcase>
    <testcase classname="&lt;ConfirmRefillModal&gt; should call onCloseModal correctly" name="&lt;ConfirmRefillModal&gt; should call onCloseModal correctly" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ModalConfirmSave&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:15" time="0.179" tests="3">
    <testcase classname="&lt;ModalConfirmSave&gt; should render correctly" name="&lt;ModalConfirmSave&gt; should render correctly" time="0.073">
    </testcase>
    <testcase classname="&lt;ModalConfirmSave&gt; should render the expected child elements" name="&lt;ModalConfirmSave&gt; should render the expected child elements" time="0.001">
    </testcase>
    <testcase classname="&lt;ModalConfirmSave&gt; should handle deletion correctly" name="&lt;ModalConfirmSave&gt; should handle deletion correctly" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageRecipient&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:15" time="0.23" tests="5">
    <testcase classname="&lt;MessageRecipient&gt; should render correctly" name="&lt;MessageRecipient&gt; should render correctly" time="0.13">
    </testcase>
    <testcase classname="&lt;MessageRecipient&gt; should have the expected classname if no error" name="&lt;MessageRecipient&gt; should have the expected classname if no error" time="0">
    </testcase>
    <testcase classname="&lt;MessageRecipient&gt; should have the expected classname if there is an error" name="&lt;MessageRecipient&gt; should have the expected classname if there is an error" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageRecipient&gt; should render the expected select element" name="&lt;MessageRecipient&gt; should render the expected select element" time="0">
    </testcase>
    <testcase classname="&lt;MessageRecipient&gt; should pass props to child select element" name="&lt;MessageRecipient&gt; should pass props to child select element" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;GlossaryLink&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:15" time="0.22" tests="4">
    <testcase classname="&lt;GlossaryLink&gt; should render" name="&lt;GlossaryLink&gt; should render" time="0.088">
    </testcase>
    <testcase classname="&lt;GlossaryLink&gt; should have the expected className" name="&lt;GlossaryLink&gt; should have the expected className" time="0.001">
    </testcase>
    <testcase classname="&lt;GlossaryLink&gt; should call onClick correctly" name="&lt;GlossaryLink&gt; should call onClick correctly" time="0.004">
    </testcase>
    <testcase classname="&lt;GlossaryLink&gt; should show the expected text in the button" name="&lt;GlossaryLink&gt; should show the expected text in the button" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="User navigation selectors" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:15" time="0.204" tests="3">
    <testcase classname="User navigation selectors selectUserGreeting should return My Account" name="User navigation selectors selectUserGreeting should return My Account" time="0.012">
    </testcase>
    <testcase classname="User navigation selectors selectUserGreeting should return session name" name="User navigation selectors selectUserGreeting should return session name" time="0.012">
    </testcase>
    <testcase classname="User navigation selectors selectUserGreeting should return profile name" name="User navigation selectors selectUserGreeting should return profile name" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimsTimeline&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:16" time="0.173" tests="4">
    <testcase classname="&lt;ClaimsTimeline&gt; should render 5 phases" name="&lt;ClaimsTimeline&gt; should render 5 phases" time="0.075">
    </testcase>
    <testcase classname="&lt;ClaimsTimeline&gt; should render phase back warning text" name="&lt;ClaimsTimeline&gt; should render phase back warning text" time="0.002">
    </testcase>
    <testcase classname="&lt;ClaimsTimeline&gt; should render phase back warning box for phase 6" name="&lt;ClaimsTimeline&gt; should render phase back warning box for phase 6" time="0.003">
    </testcase>
    <testcase classname="&lt;ClaimsTimeline&gt; should not render phase back warning box if not in phase 6" name="&lt;ClaimsTimeline&gt; should not render phase back warning box if not in phase 6" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Post911GIBStatusApp&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:16" time="0.196" tests="1">
    <testcase classname="&lt;Post911GIBStatusApp&gt; should render" name="&lt;Post911GIBStatusApp&gt; should render" time="0.075">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ReplyForm&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:16" time="0.201" tests="2">
    <testcase classname="&lt;ReplyForm&gt; should render correctly" name="&lt;ReplyForm&gt; should render correctly" time="0.088">
    </testcase>
    <testcase classname="&lt;ReplyForm&gt; should have the expected id" name="&lt;ReplyForm&gt; should have the expected id" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;NeedFilesFromYou&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:16" time="0.183" tests="2">
    <testcase classname="&lt;NeedFilesFromYou&gt; should render single file needed" name="&lt;NeedFilesFromYou&gt; should render single file needed" time="0.081">
    </testcase>
    <testcase classname="&lt;NeedFilesFromYou&gt; should render multiple files needed" name="&lt;NeedFilesFromYou&gt; should render multiple files needed" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ModalAttachments&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:16" time="0.216" tests="3">
    <testcase classname="&lt;ModalAttachments&gt; should render correctly" name="&lt;ModalAttachments&gt; should render correctly" time="0.098">
    </testcase>
    <testcase classname="&lt;ModalAttachments&gt; should render the expected child elements" name="&lt;ModalAttachments&gt; should render the expected child elements" time="0.001">
    </testcase>
    <testcase classname="&lt;ModalAttachments&gt; should render the expected text in child elements" name="&lt;ModalAttachments&gt; should render the expected text in child elements" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="schoolSearch reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:16" time="0.141" tests="10">
    <testcase classname="schoolSearch reducer INSTITUTION_SELECTED should return an institution selected state" name="schoolSearch reducer INSTITUTION_SELECTED should return an institution selected state" time="0.008">
    </testcase>
    <testcase classname="schoolSearch reducer LOAD_SCHOOLS_FAILED should return a loading institutions failed state" name="schoolSearch reducer LOAD_SCHOOLS_FAILED should return a loading institutions failed state" time="0.001">
    </testcase>
    <testcase classname="schoolSearch reducer LOAD_SCHOOLS_STARTED should return a loading institution state" name="schoolSearch reducer LOAD_SCHOOLS_STARTED should return a loading institution state" time="0">
    </testcase>
    <testcase classname="schoolSearch reducer LOAD_SCHOOLS_STARTED should return a loading page state" name="schoolSearch reducer LOAD_SCHOOLS_STARTED should return a loading page state" time="0.001">
    </testcase>
    <testcase classname="schoolSearch reducer LOAD_SCHOOLS_SUCCEEDED should return a load schools succeeded state" name="schoolSearch reducer LOAD_SCHOOLS_SUCCEEDED should return a load schools succeeded state" time="0.025">
    </testcase>
    <testcase classname="schoolSearch reducer LOAD_SCHOOLS_SUCCEEDED should set null values to empty strings" name="schoolSearch reducer LOAD_SCHOOLS_SUCCEEDED should set null values to empty strings" time="0">
    </testcase>
    <testcase classname="schoolSearch reducer LOAD_SCHOOLS_SUCCEEDED should return a no results state" name="schoolSearch reducer LOAD_SCHOOLS_SUCCEEDED should return a no results state" time="0.001">
    </testcase>
    <testcase classname="schoolSearch reducer RESTORE_FROM_PREFILL_STARTED should return a loading institution state" name="schoolSearch reducer RESTORE_FROM_PREFILL_STARTED should return a loading institution state" time="0">
    </testcase>
    <testcase classname="schoolSearch reducer SEARCH_CLEARED should return a search cleared state" name="schoolSearch reducer SEARCH_CLEARED should return a search cleared state" time="0">
    </testcase>
    <testcase classname="schoolSearch reducer SEARCH_INPUT_CHANGED should return a search input changed state" name="schoolSearch reducer SEARCH_INPUT_CHANGED should return a search input changed state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="search reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:17" time="0.163" tests="8">
    <testcase classname="search reducer should set end date for advanced search" name="search reducer should set end date for advanced search" time="0.052">
    </testcase>
    <testcase classname="search reducer should set start date for advanced search" name="search reducer should set start date for advanced search" time="0.001">
    </testcase>
    <testcase classname="search reducer should toggle advanced search" name="search reducer should toggle advanced search" time="0.001">
    </testcase>
    <testcase classname="search reducer should open advanced search" name="search reducer should open advanced search" time="0">
    </testcase>
    <testcase classname="search reducer should close advanced search" name="search reducer should close advanced search" time="0">
    </testcase>
    <testcase classname="search reducer should set search params" name="search reducer should set search params" time="0.001">
    </testcase>
    <testcase classname="search reducer should set search params when folder loads with filters" name="search reducer should set search params when folder loads with filters" time="0.004">
    </testcase>
    <testcase classname="search reducer should clear search params when folder loads without filters" name="search reducer should clear search params when folder loads without filters" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;UploadStatus&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:17" time="0.186" tests="2">
    <testcase classname="&lt;UploadStatus&gt; should render single file needed" name="&lt;UploadStatus&gt; should render single file needed" time="0.086">
    </testcase>
    <testcase classname="&lt;UploadStatus&gt; should call onCancel" name="&lt;UploadStatus&gt; should call onCancel" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Pensions FinancialDisclosureDescription" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:17" time="0.212" tests="3">
    <testcase classname="Pensions FinancialDisclosureDescription should render spouse warning" name="Pensions FinancialDisclosureDescription should render spouse warning" time="0.08">
    </testcase>
    <testcase classname="Pensions FinancialDisclosureDescription should render dependent warning" name="Pensions FinancialDisclosureDescription should render dependent warning" time="0.002">
    </testcase>
    <testcase classname="Pensions FinancialDisclosureDescription should render no warning when there are no unviewed pages" name="Pensions FinancialDisclosureDescription should render no warning when there are no unviewed pages" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimsDecision&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:17" time="0.179" tests="2">
    <testcase classname="&lt;ClaimsDecision&gt; should render message without date sentence" name="&lt;ClaimsDecision&gt; should render message without date sentence" time="0.069">
    </testcase>
    <testcase classname="&lt;ClaimsDecision&gt; should render message with date sentence" name="&lt;ClaimsDecision&gt; should render message with date sentence" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;Notification&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:17" time="0.17" tests="2">
    <testcase classname="&lt;Notification&gt; should render success class" name="&lt;Notification&gt; should render success class" time="0.071">
    </testcase>
    <testcase classname="&lt;Notification&gt; should render error class" name="&lt;Notification&gt; should render error class" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageUploadedAttachment&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:18" time="0.185" tests="3">
    <testcase classname="&lt;MessageUploadedAttachment&gt; should render correctly" name="&lt;MessageUploadedAttachment&gt; should render correctly" time="0.067">
    </testcase>
    <testcase classname="&lt;MessageUploadedAttachment&gt; should have the expected classname" name="&lt;MessageUploadedAttachment&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageUploadedAttachment&gt; should render the expected text" name="&lt;MessageUploadedAttachment&gt; should render the expected text" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonMove&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:18" time="0.183" tests="2">
    <testcase classname="&lt;ButtonMove&gt; should render correctly" name="&lt;ButtonMove&gt; should render correctly" time="0.069">
    </testcase>
    <testcase classname="&lt;ButtonMove&gt; should have the expected classname" name="&lt;ButtonMove&gt; should have the expected classname" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;HelpMenu&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:18" time="0.227" tests="1">
    <testcase classname="&lt;HelpMenu&gt; should render" name="&lt;HelpMenu&gt; should render" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MessageAddAttachment&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:18" time="0.215" tests="4">
    <testcase classname="&lt;MessageAddAttachment&gt; should render correctly" name="&lt;MessageAddAttachment&gt; should render correctly" time="0.068">
    </testcase>
    <testcase classname="&lt;MessageAddAttachment&gt; should have the expected classname" name="&lt;MessageAddAttachment&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageAddAttachment&gt; should have the expected label text" name="&lt;MessageAddAttachment&gt; should have the expected label text" time="0.001">
    </testcase>
    <testcase classname="&lt;MessageAddAttachment&gt; should have the expected mimeTypes" name="&lt;MessageAddAttachment&gt; should have the expected mimeTypes" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;InfoPair&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:18" time="0.171" tests="4">
    <testcase classname="&lt;InfoPair&gt; should render" name="&lt;InfoPair&gt; should render" time="0.063">
    </testcase>
    <testcase classname="&lt;InfoPair&gt; should show truthy values" name="&lt;InfoPair&gt; should show truthy values" time="0.001">
    </testcase>
    <testcase classname="&lt;InfoPair&gt; should not render if value is not passed in" name="&lt;InfoPair&gt; should not render if value is not passed in" time="0.001">
    </testcase>
    <testcase classname="&lt;InfoPair&gt; should not render if value is 0" name="&lt;InfoPair&gt; should not render if value is 0" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;GlossaryModal&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:18" time="0.18" tests="4">
    <testcase classname="&lt;GlossaryModal&gt; should render" name="&lt;GlossaryModal&gt; should render" time="0.078">
    </testcase>
    <testcase classname="&lt;GlossaryModal&gt; should have the expected id" name="&lt;GlossaryModal&gt; should have the expected id" time="0.001">
    </testcase>
    <testcase classname="&lt;GlossaryModal&gt; should render a Modal" name="&lt;GlossaryModal&gt; should render a Modal" time="0.001">
    </testcase>
    <testcase classname="&lt;GlossaryModal&gt; should call onCloseModal correctly" name="&lt;GlossaryModal&gt; should call onCloseModal correctly" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Page utils:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:18" time="0.193" tests="3">
    <testcase classname="Page utils: isTab should detect tab urls" name="Page utils: isTab should detect tab urls" time="0.065">
    </testcase>
    <testcase classname="Page utils: setFocus should focus on element" name="Page utils: setFocus should focus on element" time="0.004">
    </testcase>
    <testcase classname="Page utils: setPageFocus should focus on selector" name="Page utils: setPageFocus should focus on selector" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ClaimComplete&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:19" time="0.174" tests="1">
    <testcase classname="&lt;ClaimComplete&gt; should render message" name="&lt;ClaimComplete&gt; should render message" time="0.074">
    </testcase>
  </testsuite>
  <testsuite name="Claim detail reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:19" time="0.142" tests="2">
    <testcase classname="Claim detail reducer should set detail" name="Claim detail reducer should set detail" time="0.047">
    </testcase>
    <testcase classname="Claim detail reducer should set loading" name="Claim detail reducer should set loading" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="folders reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:19" time="0.183" tests="9">
    <testcase classname="folders reducer should create a folder" name="folders reducer should create a folder" time="0.058">
    </testcase>
    <testcase classname="folders reducer should delete a folder" name="folders reducer should delete a folder" time="0.001">
    </testcase>
    <testcase classname="folders reducer should set a folder fetched from the server" name="folders reducer should set a folder fetched from the server" time="0.001">
    </testcase>
    <testcase classname="folders reducer should set folders fetched from the server" name="folders reducer should set folders fetched from the server" time="0">
    </testcase>
    <testcase classname="folders reducer should open and close the folder navigation" name="folders reducer should open and close the folder navigation" time="0.001">
    </testcase>
    <testcase classname="folders reducer should expand and collapse managed folders" name="folders reducer should expand and collapse managed folders" time="0">
    </testcase>
    <testcase classname="folders reducer should increment the count of Drafts after saving a new draft" name="folders reducer should increment the count of Drafts after saving a new draft" time="0.002">
    </testcase>
    <testcase classname="folders reducer should not increment the count of Drafts after re-saving a draft" name="folders reducer should not increment the count of Drafts after re-saving a draft" time="0">
    </testcase>
    <testcase classname="folders reducer should update folder counts after moving a message" name="folders reducer should update folder counts after moving a message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Uploads reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:19" time="0.158" tests="12">
    <testcase classname="Uploads reducer should reset uploads state" name="Uploads reducer should reset uploads state" time="0.006">
    </testcase>
    <testcase classname="Uploads reducer should add a file" name="Uploads reducer should add a file" time="0.044">
    </testcase>
    <testcase classname="Uploads reducer remove a file" name="Uploads reducer remove a file" time="0">
    </testcase>
    <testcase classname="Uploads reducer set state as uploading" name="Uploads reducer set state as uploading" time="0.003">
    </testcase>
    <testcase classname="Uploads reducer set uploader in state" name="Uploads reducer set uploader in state" time="0">
    </testcase>
    <testcase classname="Uploads reducer set upload progress" name="Uploads reducer set upload progress" time="0">
    </testcase>
    <testcase classname="Uploads reducer set upload error" name="Uploads reducer set upload error" time="0.001">
    </testcase>
    <testcase classname="Uploads reducer set upload done" name="Uploads reducer set upload done" time="0">
    </testcase>
    <testcase classname="Uploads reducer update form field" name="Uploads reducer update form field" time="0">
    </testcase>
    <testcase classname="Uploads reducer toggle mail or fax modal" name="Uploads reducer toggle mail or fax modal" time="0.001">
    </testcase>
    <testcase classname="Uploads reducer cancel upload" name="Uploads reducer cancel upload" time="0">
    </testcase>
    <testcase classname="Uploads reducer dirty fields" name="Uploads reducer dirty fields" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="&lt;SignInLink&gt;" errors="0" failures="0" skipped="1" timestamp="2018-12-06T00:51:19" time="0.186" tests="4">
    <testcase classname="&lt;SignInLink&gt; should render" name="&lt;SignInLink&gt; should render" time="0.071">
    </testcase>
    <testcase classname="&lt;SignInLink&gt; should render as a button" name="&lt;SignInLink&gt; should render as a button" time="0.003">
    </testcase>
    <testcase classname="&lt;SignInLink&gt; should attempt to login" name="&lt;SignInLink&gt; should attempt to login" time="0.002">
    </testcase>
    <testcase classname="&lt;SignInLink&gt; should call onLogin after a successful login" name="&lt;SignInLink&gt; should call onLogin after a successful login" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="prescriptions reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:19" time="0.176" tests="12">
    <testcase classname="prescriptions reducer should show a loading screen for active" name="prescriptions reducer should show a loading screen for active" time="0.046">
    </testcase>
    <testcase classname="prescriptions reducer should show a loading screen for history" name="prescriptions reducer should show a loading screen for history" time="0">
    </testcase>
    <testcase classname="prescriptions reducer should show a loading screen for detail" name="prescriptions reducer should show a loading screen for detail" time="0.001">
    </testcase>
    <testcase classname="prescriptions reducer should handle failure to fetch a prescription" name="prescriptions reducer should handle failure to fetch a prescription" time="0">
    </testcase>
    <testcase classname="prescriptions reducer should handle failure to fetch active prescriptions" name="prescriptions reducer should handle failure to fetch active prescriptions" time="0.001">
    </testcase>
    <testcase classname="prescriptions reducer should handle failure to fetch prescriptions history" name="prescriptions reducer should handle failure to fetch prescriptions history" time="0">
    </testcase>
    <testcase classname="prescriptions reducer should handle a successful request for active prescriptions" name="prescriptions reducer should handle a successful request for active prescriptions" time="0.003">
    </testcase>
    <testcase classname="prescriptions reducer should handle a successful request for prescriptions history" name="prescriptions reducer should handle a successful request for prescriptions history" time="0.005">
    </testcase>
    <testcase classname="prescriptions reducer should handle a successful refill" name="prescriptions reducer should handle a successful refill" time="0.001">
    </testcase>
    <testcase classname="prescriptions reducer should sort active prescriptions by prescription name" name="prescriptions reducer should sort active prescriptions by prescription name" time="0.005">
    </testcase>
    <testcase classname="prescriptions reducer should sort active prescriptions by facility name" name="prescriptions reducer should sort active prescriptions by facility name" time="0.001">
    </testcase>
    <testcase classname="prescriptions reducer should sort active prescriptions by last submit date" name="prescriptions reducer should sort active prescriptions by last submit date" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;AddressBlock/&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.175" tests="2">
    <testcase classname="&lt;AddressBlock/&gt; should render" name="&lt;AddressBlock/&gt; should render" time="0.067">
    </testcase>
    <testcase classname="&lt;AddressBlock/&gt; should render children" name="&lt;AddressBlock/&gt; should render children" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="refresh reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.165" tests="5">
    <testcase classname="refresh reducer should be loading when starting initial refresh" name="refresh reducer should be loading when starting initial refresh" time="0.004">
    </testcase>
    <testcase classname="refresh reducer should reset when starting initial refresh" name="refresh reducer should reset when starting initial refresh" time="0.003">
    </testcase>
    <testcase classname="refresh reducer should handle successful refresh" name="refresh reducer should handle successful refresh" time="0">
    </testcase>
    <testcase classname="refresh reducer should handle failed refresh" name="refresh reducer should handle failed refresh" time="0">
    </testcase>
    <testcase classname="refresh reducer should update statuses when refresh polling" name="refresh reducer should update statuses when refresh polling" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="&lt;UpdateFailureAlert&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.184" tests="1">
    <testcase classname="&lt;UpdateFailureAlert&gt; should render address and warning" name="&lt;UpdateFailureAlert&gt; should render address and warning" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="Claim ask reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.161" tests="3">
    <testcase classname="Claim ask reducer should set loading request" name="Claim ask reducer should set loading request" time="0.051">
    </testcase>
    <testcase classname="Claim ask reducer should set decision requested" name="Claim ask reducer should set decision requested" time="0.003">
    </testcase>
    <testcase classname="Claim ask reducer should set decision request error" name="Claim ask reducer should set decision request error" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonClose&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.17" tests="2">
    <testcase classname="&lt;ButtonClose&gt; should render correctly" name="&lt;ButtonClose&gt; should render correctly" time="0.068">
    </testcase>
    <testcase classname="&lt;ButtonClose&gt; should have the expected classname" name="&lt;ButtonClose&gt; should have the expected classname" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;MoveToOption&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.198" tests="3">
    <testcase classname="&lt;MoveToOption&gt; should render correctly" name="&lt;MoveToOption&gt; should render correctly" time="0.09">
    </testcase>
    <testcase classname="&lt;MoveToOption&gt; should render the expected input field" name="&lt;MoveToOption&gt; should render the expected input field" time="0.001">
    </testcase>
    <testcase classname="&lt;MoveToOption&gt; should render the expected label text" name="&lt;MoveToOption&gt; should render the expected label text" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;RefillsRemainingCounter&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.171" tests="6">
    <testcase classname="&lt;RefillsRemainingCounter&gt; should render" name="&lt;RefillsRemainingCounter&gt; should render" time="0.059">
    </testcase>
    <testcase classname="&lt;RefillsRemainingCounter&gt; should have the expected className" name="&lt;RefillsRemainingCounter&gt; should have the expected className" time="0.001">
    </testcase>
    <testcase classname="&lt;RefillsRemainingCounter&gt; should have the expected className when refills remaining is 0" name="&lt;RefillsRemainingCounter&gt; should have the expected className when refills remaining is 0" time="0.001">
    </testcase>
    <testcase classname="&lt;RefillsRemainingCounter&gt; should show the expected refills remaining count" name="&lt;RefillsRemainingCounter&gt; should show the expected refills remaining count" time="0.001">
    </testcase>
    <testcase classname="&lt;RefillsRemainingCounter&gt; should show the expected refills remaining text when plural" name="&lt;RefillsRemainingCounter&gt; should show the expected refills remaining text when plural" time="0">
    </testcase>
    <testcase classname="&lt;RefillsRemainingCounter&gt; should show the expected refills remaining text when singular" name="&lt;RefillsRemainingCounter&gt; should show the expected refills remaining text when singular" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="asyncLoader" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:20" time="0.165" tests="2">
    <testcase classname="asyncLoader should display loading indicator while waiting" name="asyncLoader should display loading indicator while waiting" time="0.061">
    </testcase>
    <testcase classname="asyncLoader should display component returned from promise" name="asyncLoader should display component returned from promise" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="messages reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:21" time="0.191" tests="16">
    <testcase classname="messages reducer should reset thread while loading" name="messages reducer should reset thread while loading" time="0.047">
    </testcase>
    <testcase classname="messages reducer should add draft attachments" name="messages reducer should add draft attachments" time="0.004">
    </testcase>
    <testcase classname="messages reducer should clear the draft" name="messages reducer should clear the draft" time="0.001">
    </testcase>
    <testcase classname="messages reducer should delete draft attachments" name="messages reducer should delete draft attachments" time="0.001">
    </testcase>
    <testcase classname="messages reducer should handle a successful fetch of a thread message" name="messages reducer should handle a successful fetch of a thread message" time="0.003">
    </testcase>
    <testcase classname="messages reducer should handle a successful fetch of a message and its thread" name="messages reducer should handle a successful fetch of a message and its thread" time="0.001">
    </testcase>
    <testcase classname="messages reducer should handle a successful fetch of a new message draft" name="messages reducer should handle a successful fetch of a new message draft" time="0.002">
    </testcase>
    <testcase classname="messages reducer should handle a successful fetch of a reply draft" name="messages reducer should handle a successful fetch of a reply draft" time="0.001">
    </testcase>
    <testcase classname="messages reducer should collapse and expand a message" name="messages reducer should collapse and expand a message" time="0.001">
    </testcase>
    <testcase classname="messages reducer should collapse all messages in the thread" name="messages reducer should collapse all messages in the thread" time="0.001">
    </testcase>
    <testcase classname="messages reducer should expand all messages in the thread" name="messages reducer should expand all messages in the thread" time="0">
    </testcase>
    <testcase classname="messages reducer should expand all messages in the thread if any are collapsed" name="messages reducer should expand all messages in the thread if any are collapsed" time="0">
    </testcase>
    <testcase classname="messages reducer should toggle the thread form" name="messages reducer should toggle the thread form" time="0.001">
    </testcase>
    <testcase classname="messages reducer should toggle the reply details" name="messages reducer should toggle the reply details" time="0.001">
    </testcase>
    <testcase classname="messages reducer should toggle the move button" name="messages reducer should toggle the move button" time="0">
    </testcase>
    <testcase classname="messages reducer should update the draft" name="messages reducer should update the draft" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ContactCard&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:21" time="0.184" tests="5">
    <testcase classname="&lt;ContactCard&gt; should render" name="&lt;ContactCard&gt; should render" time="0.077">
    </testcase>
    <testcase classname="&lt;ContactCard&gt; should have the expected class name" name="&lt;ContactCard&gt; should have the expected class name" time="0.001">
    </testcase>
    <testcase classname="&lt;ContactCard&gt; should render expected link" name="&lt;ContactCard&gt; should render expected link" time="0">
    </testcase>
    <testcase classname="&lt;ContactCard&gt; should render phone number if provided" name="&lt;ContactCard&gt; should render phone number if provided" time="0.001">
    </testcase>
    <testcase classname="&lt;ContactCard&gt; should not render phone number if not provided" name="&lt;ContactCard&gt; should not render phone number if not provided" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Claim sync reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:21" time="0.151" tests="6">
    <testcase classname="Claim sync reducer should set unavailable" name="Claim sync reducer should set unavailable" time="0.056">
    </testcase>
    <testcase classname="Claim sync reducer should set unauthorized" name="Claim sync reducer should set unauthorized" time="0">
    </testcase>
    <testcase classname="Claim sync reducer should set out of sync" name="Claim sync reducer should set out of sync" time="0.002">
    </testcase>
    <testcase classname="Claim sync reducer should set in sync" name="Claim sync reducer should set in sync" time="0">
    </testcase>
    <testcase classname="Claim sync reducer should set out of sync on list request" name="Claim sync reducer should set out of sync on list request" time="0">
    </testcase>
    <testcase classname="Claim sync reducer should set in sync on list request" name="Claim sync reducer should set in sync on list request" time="0">
    </testcase>
  </testsuite>
  <testsuite name="&lt;DueDate&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:21" time="0.187" tests="3">
    <testcase classname="&lt;DueDate&gt; should render past due class" name="&lt;DueDate&gt; should render past due class" time="0.08">
    </testcase>
    <testcase classname="&lt;DueDate&gt; should render past due class when less than day difference" name="&lt;DueDate&gt; should render past due class when less than day difference" time="0.002">
    </testcase>
    <testcase classname="&lt;DueDate&gt; should render file due class" name="&lt;DueDate&gt; should render file due class" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonCreateFolder&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:21" time="0.18" tests="2">
    <testcase classname="&lt;ButtonCreateFolder&gt; should render correctly" name="&lt;ButtonCreateFolder&gt; should render correctly" time="0.08">
    </testcase>
    <testcase classname="&lt;ButtonCreateFolder&gt; should have the expected classname" name="&lt;ButtonCreateFolder&gt; should have the expected classname" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="loading reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:21" time="0.18" tests="36">
    <testcase classname="loading reducer should trigger a loader when creating a folder" name="loading reducer should trigger a loader when creating a folder" time="0.051">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to create a folder" name="loading reducer should not trigger a loader after failing to create a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully creating a folder" name="loading reducer should not trigger a loader after successfully creating a folder" time="0.001">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when deleting a folder" name="loading reducer should trigger a loader when deleting a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to delete a folder" name="loading reducer should not trigger a loader after failing to delete a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully deleting a folder" name="loading reducer should not trigger a loader after successfully deleting a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when deleting a message" name="loading reducer should trigger a loader when deleting a message" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to delete a message" name="loading reducer should not trigger a loader after failing to delete a message" time="0.001">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully deleting a message" name="loading reducer should not trigger a loader after successfully deleting a message" time="0">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when fetching a folder" name="loading reducer should trigger a loader when fetching a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to fetch a folder" name="loading reducer should not trigger a loader after failing to fetch a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully fetching a folder" name="loading reducer should not trigger a loader after successfully fetching a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when fetching folders" name="loading reducer should trigger a loader when fetching folders" time="0.001">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to fetch a folder" name="loading reducer should not trigger a loader after failing to fetch a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully fetching a folder" name="loading reducer should not trigger a loader after successfully fetching a folder" time="0">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when fetching preferences" name="loading reducer should trigger a loader when fetching preferences" time="0.001">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to fetch preferences" name="loading reducer should not trigger a loader after failing to fetch preferences" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully fetching preferences" name="loading reducer should not trigger a loader after successfully fetching preferences" time="0.001">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when fetching recipients" name="loading reducer should trigger a loader when fetching recipients" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to fetch recipients" name="loading reducer should not trigger a loader after failing to fetch recipients" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully fetching recipients" name="loading reducer should not trigger a loader after successfully fetching recipients" time="0">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when fetching a thread" name="loading reducer should trigger a loader when fetching a thread" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to fetch a thread" name="loading reducer should not trigger a loader after failing to fetch a thread" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully fetching a thread" name="loading reducer should not trigger a loader after successfully fetching a thread" time="0.001">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when moving a message" name="loading reducer should trigger a loader when moving a message" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to move a message" name="loading reducer should not trigger a loader after failing to move a message" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully moving a message" name="loading reducer should not trigger a loader after successfully moving a message" time="0.001">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when saving a draft" name="loading reducer should trigger a loader when saving a draft" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to save a draft" name="loading reducer should not trigger a loader after failing to save a draft" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully saving a draft" name="loading reducer should not trigger a loader after successfully saving a draft" time="0">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when saving preferences" name="loading reducer should trigger a loader when saving preferences" time="0.001">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to save preferences" name="loading reducer should not trigger a loader after failing to save preferences" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully saving preferences" name="loading reducer should not trigger a loader after successfully saving preferences" time="0.001">
    </testcase>
    <testcase classname="loading reducer should trigger a loader when sending a message" name="loading reducer should trigger a loader when sending a message" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after failing to send a message" name="loading reducer should not trigger a loader after failing to send a message" time="0">
    </testcase>
    <testcase classname="loading reducer should not trigger a loader after successfully sending a message" name="loading reducer should not trigger a loader after successfully sending a message" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="static page additional information widget" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:22" time="0.195" tests="3">
    <testcase classname="static page additional information widget should display a default title and content" name="static page additional information widget should display a default title and content" time="0.041">
    </testcase>
    <testcase classname="static page additional information widget should display a custom title" name="static page additional information widget should display a custom title" time="0.012">
    </testcase>
    <testcase classname="static page additional information widget should reveal hidden content" name="static page additional information widget should reveal hidden content" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="modals reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:22" time="0.147" tests="8">
    <testcase classname="modals reducer should open and close the delete confirmation modal" name="modals reducer should open and close the delete confirmation modal" time="0.042">
    </testcase>
    <testcase classname="modals reducer should open an error modal for attachments that are too big" name="modals reducer should open an error modal for attachments that are too big" time="0.001">
    </testcase>
    <testcase classname="modals reducer should open an error modal for too many attachments" name="modals reducer should open an error modal for too many attachments" time="0">
    </testcase>
    <testcase classname="modals reducer should close the attachments error modal" name="modals reducer should close the attachments error modal" time="0.001">
    </testcase>
    <testcase classname="modals reducer should open the create folder modal (not for moving a message)" name="modals reducer should open the create folder modal (not for moving a message)" time="0">
    </testcase>
    <testcase classname="modals reducer should open the create folder modal (for moving a message)" name="modals reducer should open the create folder modal (for moving a message)" time="0">
    </testcase>
    <testcase classname="modals reducer should close the create folder modal" name="modals reducer should close the create folder modal" time="0.001">
    </testcase>
    <testcase classname="modals reducer should set the new folder name in the create folder modal" name="modals reducer should set the new folder name in the create folder modal" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Pensions DependentField" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:22" time="0.173" tests="1">
    <testcase classname="Pensions DependentField should render" name="Pensions DependentField should render" time="0.076">
    </testcase>
  </testsuite>
  <testsuite name="notificationsReducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:22" time="0.175" tests="2">
    <testcase classname="notificationsReducer should set a notification" name="notificationsReducer should set a notification" time="0.061">
    </testcase>
    <testcase classname="notificationsReducer should clear a notification" name="notificationsReducer should clear a notification" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="disclaimer reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:22" time="0.142" tests="1">
    <testcase classname="disclaimer reducer should close the disclaimer" name="disclaimer reducer should close the disclaimer" time="0.037">
    </testcase>
  </testsuite>
  <testsuite name="&lt;ButtonPrint&gt;" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:22" time="0.189" tests="3">
    <testcase classname="&lt;ButtonPrint&gt; should render correctly" name="&lt;ButtonPrint&gt; should render correctly" time="0.078">
    </testcase>
    <testcase classname="&lt;ButtonPrint&gt; should have the expected classname" name="&lt;ButtonPrint&gt; should have the expected classname" time="0.001">
    </testcase>
    <testcase classname="&lt;ButtonPrint&gt; should handle click action properly" name="&lt;ButtonPrint&gt; should handle click action properly" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="post911GIBStatus reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:23" time="0.154" tests="7">
    <testcase classname="post911GIBStatus reducer should handle a successful request for enrollment information" name="post911GIBStatus reducer should handle a successful request for enrollment information" time="0.003">
    </testcase>
    <testcase classname="post911GIBStatus reducer should handle backend service error" name="post911GIBStatus reducer should handle backend service error" time="0.046">
    </testcase>
    <testcase classname="post911GIBStatus reducer should handle backend authentication error" name="post911GIBStatus reducer should handle backend authentication error" time="0.001">
    </testcase>
    <testcase classname="post911GIBStatus reducer should handle no Chapter 33 record error" name="post911GIBStatus reducer should handle no Chapter 33 record error" time="0">
    </testcase>
    <testcase classname="post911GIBStatus reducer should handle failure to fetch enrollment information" name="post911GIBStatus reducer should handle failure to fetch enrollment information" time="0">
    </testcase>
    <testcase classname="post911GIBStatus reducer should handle setting the service availability" name="post911GIBStatus reducer should handle setting the service availability" time="0.001">
    </testcase>
    <testcase classname="post911GIBStatus reducer should handle setting the uptime remaining" name="post911GIBStatus reducer should handle setting the uptime remaining" time="0">
    </testcase>
  </testsuite>
  <testsuite name="schoolSearch actions" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:23" time="0.19" tests="8">
    <testcase classname="schoolSearch actions clearSearch should return a SEARCH_CLEARED action" name="schoolSearch actions clearSearch should return a SEARCH_CLEARED action" time="0.004">
    </testcase>
    <testcase classname="schoolSearch actions restoreFromPrefill should dispatch RESTORE_FROM_PREFILL_STARTED and RESTORE_FROM_PREFILL_SUCCEEDED actions" name="schoolSearch actions restoreFromPrefill should dispatch RESTORE_FROM_PREFILL_STARTED and RESTORE_FROM_PREFILL_SUCCEEDED actions" time="0.024">
    </testcase>
    <testcase classname="schoolSearch actions restoreFromPrefill should dispatch LOAD_SCHOOLS_STARTED and LOAD_SCHOOLS_FAILED actions" name="schoolSearch actions restoreFromPrefill should dispatch LOAD_SCHOOLS_STARTED and LOAD_SCHOOLS_FAILED actions" time="0.003">
    </testcase>
    <testcase classname="schoolSearch actions searchInputChange should return a SEARCH_INPUT_CHANGED action" name="schoolSearch actions searchInputChange should return a SEARCH_INPUT_CHANGED action" time="0">
    </testcase>
    <testcase classname="schoolSearch actions searchSchools should dispatch LOAD_SCHOOLS_STARTED and LOAD_SCHOOLS_SUCCEEDED actions" name="schoolSearch actions searchSchools should dispatch LOAD_SCHOOLS_STARTED and LOAD_SCHOOLS_SUCCEEDED actions" time="0.004">
    </testcase>
    <testcase classname="schoolSearch actions searchSchools should dispatch LOAD_SCHOOLS_STARTED and LOAD_SCHOOLS_FAILED actions" name="schoolSearch actions searchSchools should dispatch LOAD_SCHOOLS_STARTED and LOAD_SCHOOLS_FAILED actions" time="0.007">
    </testcase>
    <testcase classname="schoolSearch actions selectInstitution should return an INSTITUTION_SELECTED action" name="schoolSearch actions selectInstitution should return an INSTITUTION_SELECTED action" time="0">
    </testcase>
    <testcase classname="schoolSearch actions toggleManualSchoolEntry should return an MANUAL_SCHOOL_ENTRY_TOGGLED action" name="schoolSearch actions toggleManualSchoolEntry should return an MANUAL_SCHOOL_ENTRY_TOGGLED action" time="0">
    </testcase>
  </testsuite>
  <testsuite name="beneficiaryZIPCodeChanged" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:23" time="0.175" tests="6">
    <testcase classname="beneficiaryZIPCodeChanged should return BENEFICIARY_ZIP_CODE_CHANGED when zip code is no valid for submission" name="beneficiaryZIPCodeChanged should return BENEFICIARY_ZIP_CODE_CHANGED when zip code is no valid for submission" time="0.003">
    </testcase>
    <testcase classname="beneficiaryZIPCodeChanged should dispatch started and success actions" name="beneficiaryZIPCodeChanged should dispatch started and success actions" time="0.008">
    </testcase>
    <testcase classname="beneficiaryZIPCodeChanged should dispatch started and failed actions" name="beneficiaryZIPCodeChanged should dispatch started and failed actions" time="0.004">
    </testcase>
    <testcase classname="fetchProfile should dispatch a started and success action" name="fetchProfile should dispatch a started and success action" time="0.012">
    </testcase>
    <testcase classname="fetchProfile should dispatch a started and failed action when the institution call fails" name="fetchProfile should dispatch a started and failed action when the institution call fails" time="0.003">
    </testcase>
    <testcase classname="fetchProfile should dispatch a started and success action when the zip code rates call fails" name="fetchProfile should dispatch a started and success action when the zip code rates call fails" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Wartime service validation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:23" time="0.139" tests="4">
    <testcase classname="Wartime service validation servedDuringWartime should allow for service period overlapping with a wartime period" name="Wartime service validation servedDuringWartime should allow for service period overlapping with a wartime period" time="0.016">
    </testcase>
    <testcase classname="Wartime service validation servedDuringWartime should allow for service period within a wartime period" name="Wartime service validation servedDuringWartime should allow for service period within a wartime period" time="0">
    </testcase>
    <testcase classname="Wartime service validation servedDuringWartime should allow for wartime period within service period" name="Wartime service validation servedDuringWartime should allow for wartime period within service period" time="0.002">
    </testcase>
    <testcase classname="Wartime service validation servedDuringWartime should not allow for service period outside of wartime period" name="Wartime service validation servedDuringWartime should not allow for service period outside of wartime period" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="selectors" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:23" time="0.135" tests="12">
    <testcase classname="selectors selectIsVet360AvailableForUser returns true if vet660 is found in the profile.services list or when the environment is localhost" name="selectors selectIsVet360AvailableForUser returns true if vet660 is found in the profile.services list or when the environment is localhost" time="0.008">
    </testcase>
    <testcase classname="selectors selectVet360Field looks up a field from the user vet360 data" name="selectors selectVet360Field looks up a field from the user vet360 data" time="0.001">
    </testcase>
    <testcase classname="selectors selectVet360Transaction accepts a field name to look up a transaction and transaction request using the field-transaction map" name="selectors selectVet360Transaction accepts a field name to look up a transaction and transaction request using the field-transaction map" time="0.001">
    </testcase>
    <testcase classname="selectors selectVet360FailedTransactions returns only failed transactions from a list of transactions" name="selectors selectVet360FailedTransactions returns only failed transactions from a list of transactions" time="0.005">
    </testcase>
    <testcase classname="selectors selectMostRecentErroredTransaction selects the transaction of the ID stored in the metadata mostRecentErroredTransactionId" name="selectors selectMostRecentErroredTransaction selects the transaction of the ID stored in the metadata mostRecentErroredTransactionId" time="0.001">
    </testcase>
    <testcase classname="selectors selectVet360PendingCategoryTransactions selects transactions of the passed transaction category type that is still pending and without field-level data" name="selectors selectVet360PendingCategoryTransactions selects transactions of the passed transaction category type that is still pending and without field-level data" time="0.001">
    </testcase>
    <testcase classname="selectors selectEditedFormField looks up the form value in state for a given field name" name="selectors selectEditedFormField looks up the form value in state for a given field name" time="0">
    </testcase>
    <testcase classname="selectors selectCurrentlyOpenEditModal looks up the form value in state for a given field name" name="selectors selectCurrentlyOpenEditModal looks up the form value in state for a given field name" time="0">
    </testcase>
    <testcase classname="selectVet360InitializationStatus returns UNINITIALIZED if Vet360 is not found in the services array and there is not an associated transaction" name="selectVet360InitializationStatus returns UNINITIALIZED if Vet360 is not found in the services array and there is not an associated transaction" time="0.008">
    </testcase>
    <testcase classname="selectVet360InitializationStatus returns INITIALIZED if Vet360 is found in the services array" name="selectVet360InitializationStatus returns INITIALIZED if Vet360 is found in the services array" time="0">
    </testcase>
    <testcase classname="selectVet360InitializationStatus returns INITIALIZING if there is an ongoing transaction" name="selectVet360InitializationStatus returns INITIALIZING if there is an ongoing transaction" time="0.001">
    </testcase>
    <testcase classname="selectVet360InitializationStatus returns INITIALIZATION_FAILURE if there is a failed transaction" name="selectVet360InitializationStatus returns INITIALIZATION_FAILURE if there is a failed transaction" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Helpers unit tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:23" time="0.128" tests="4">
    <testcase classname="Helpers unit tests isActivePage matches against data" name="Helpers unit tests isActivePage matches against data" time="0.027">
    </testcase>
    <testcase classname="Helpers unit tests isActivePage false with mismatched data" name="Helpers unit tests isActivePage false with mismatched data" time="0">
    </testcase>
    <testcase classname="Helpers unit tests isActivePage matches using function" name="Helpers unit tests isActivePage matches using function" time="0.002">
    </testcase>
    <testcase classname="Helpers unit tests isActivePage matches against array" name="Helpers unit tests isActivePage matches against array" time="0">
    </testcase>
  </testsuite>
  <testsuite name="calculator reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:23" time="0.139" tests="16">
    <testcase classname="calculator reducer should correctly change non-dollar input" name="calculator reducer should correctly change non-dollar input" time="0.004">
    </testcase>
    <testcase classname="calculator reducer should correctly change dollar input" name="calculator reducer should correctly change dollar input" time="0.002">
    </testcase>
    <testcase classname="calculator reducer should correctly change inState input and set inState tuition" name="calculator reducer should correctly change inState input and set inState tuition" time="0.001">
    </testcase>
    <testcase classname="calculator reducer should correctly change inState input and set out of state tuition" name="calculator reducer should correctly change inState input and set out of state tuition" time="0">
    </testcase>
    <testcase classname="calculator reducer FETCH_BAH_FAILED should add a zip code not found error and clear values" name="calculator reducer FETCH_BAH_FAILED should add a zip code not found error and clear values" time="0">
    </testcase>
    <testcase classname="calculator reducer FETCH_BAH_FAILED should add a generic error message and clear values" name="calculator reducer FETCH_BAH_FAILED should add a generic error message and clear values" time="0.001">
    </testcase>
    <testcase classname="calculator reducer FETCH_BAH_FAILED should not modify the state if beneficiaryZIPFetched on state does not match action" name="calculator reducer FETCH_BAH_FAILED should not modify the state if beneficiaryZIPFetched on state does not match action" time="0">
    </testcase>
    <testcase classname="calculator reducer FETCH_BAH_STARTED should clear errors and fetch loading state" name="calculator reducer FETCH_BAH_STARTED should clear errors and fetch loading state" time="0">
    </testcase>
    <testcase classname="calculator reducer FETCH_BAH_SUCCEEDED should clear errors and set retrieved state" name="calculator reducer FETCH_BAH_SUCCEEDED should clear errors and set retrieved state" time="0.001">
    </testcase>
    <testcase classname="calculator reducer FETCH_BAH_SUCCEEDED should not modify the state if beneficiaryZIPFetched on state does not match action" name="calculator reducer FETCH_BAH_SUCCEEDED should not modify the state if beneficiaryZIPFetched on state does not match action" time="0">
    </testcase>
    <testcase classname="calculator reducer BENEFICIARY_ZIP_CODE_CHANGED adds the input to the state and resets amounts and errors" name="calculator reducer BENEFICIARY_ZIP_CODE_CHANGED adds the input to the state and resets amounts and errors" time="0.001">
    </testcase>
    <testcase classname="calculator reducer BENEFICIARY_ZIP_CODE_CHANGED adds an error to the state when zip code has letters" name="calculator reducer BENEFICIARY_ZIP_CODE_CHANGED adds an error to the state when zip code has letters" time="0">
    </testcase>
    <testcase classname="calculator reducer BENEFICIARY_ZIP_CODE_CHANGED adds and error to the state when zip code is too long" name="calculator reducer BENEFICIARY_ZIP_CODE_CHANGED adds and error to the state when zip code is too long" time="0">
    </testcase>
    <testcase classname="calculator reducer should update yellowRibbonDivisionOptions, yellowRibbonDivison, and yellowRibbonAmount when yellowRibbonDegreeLevel is changed" name="calculator reducer should update yellowRibbonDivisionOptions, yellowRibbonDivison, and yellowRibbonAmount when yellowRibbonDegreeLevel is changed" time="0.001">
    </testcase>
    <testcase classname="calculator reducer should update yellowRibbonAmount when yellowRibbonDivision is changed" name="calculator reducer should update yellowRibbonAmount when yellowRibbonDivision is changed" time="0">
    </testcase>
    <testcase classname="calculator reducer should add yellowRibbonDegreeLevelOptions, yellowRibbonDivisonOptions, yellowRibbonAmount, yellowRibbonDegreeLevel, and yellowRibbonDivision when institution has yellowRibbonPrograms" name="calculator reducer should add yellowRibbonDegreeLevelOptions, yellowRibbonDivisonOptions, yellowRibbonAmount, yellowRibbonDegreeLevel, and yellowRibbonDivision when institution has yellowRibbonPrograms" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Feedback Reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:24" time="0.128" tests="4">
    <testcase classname="Feedback Reducer returns the initial state" name="Feedback Reducer returns the initial state" time="0.003">
    </testcase>
    <testcase classname="Feedback Reducer sets requestPending to true during action type SEND_FEEDBACK" name="Feedback Reducer sets requestPending to true during action type SEND_FEEDBACK" time="0.001">
    </testcase>
    <testcase classname="Feedback Reducer sets requestPending to false during action type FEEDBACK_RECEIVED" name="Feedback Reducer sets requestPending to false during action type FEEDBACK_RECEIVED" time="0">
    </testcase>
    <testcase classname="Feedback Reducer sets the errorMessage to a string during action type FEEDBACK_ERROR anc clears it during CLEAR_FEEDBACK_ERROR" name="Feedback Reducer sets the errorMessage to a string during action type FEEDBACK_ERROR anc clears it during CLEAR_FEEDBACK_ERROR" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="auth URL helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:24" time="0.154" tests="7">
    <testcase classname="auth URL helpers when able to open a window should open a window to an error page" name="auth URL helpers when able to open a window should open a window to an error page" time="0.02">
    </testcase>
    <testcase classname="auth URL helpers when able to open a window should open a window for signup" name="auth URL helpers when able to open a window should open a window for signup" time="0.004">
    </testcase>
    <testcase classname="auth URL helpers when able to open a window should open a window for login" name="auth URL helpers when able to open a window should open a window for login" time="0.001">
    </testcase>
    <testcase classname="auth URL helpers when able to open a window should open a window for logout" name="auth URL helpers when able to open a window should open a window for logout" time="0.002">
    </testcase>
    <testcase classname="auth URL helpers when able to open a window should open a window for mfa" name="auth URL helpers when able to open a window should open a window for mfa" time="0.001">
    </testcase>
    <testcase classname="auth URL helpers when able to open a window should open a window for verify" name="auth URL helpers when able to open a window should open a window for verify" time="0.001">
    </testcase>
    <testcase classname="auth URL helpers should handle failure to open window" name="auth URL helpers should handle failure to open window" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="alert reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:24" time="0.158" tests="8">
    <testcase classname="alert reducer should open the alert" name="alert reducer should open the alert" time="0.004">
    </testcase>
    <testcase classname="alert reducer should close the alert" name="alert reducer should close the alert" time="0">
    </testcase>
    <testcase classname="alert reducer should dismiss alerts when loading preferences" name="alert reducer should dismiss alerts when loading preferences" time="0">
    </testcase>
    <testcase classname="alert reducer should dismiss alerts when saving preferences" name="alert reducer should dismiss alerts when saving preferences" time="0">
    </testcase>
    <testcase classname="alert reducer should alert an error for failing to save preferences" name="alert reducer should alert an error for failing to save preferences" time="0.009">
    </testcase>
    <testcase classname="alert reducer should alert success for successfully saving preferences" name="alert reducer should alert success for successfully saving preferences" time="0">
    </testcase>
    <testcase classname="alert reducer should alert an error for a failed refill" name="alert reducer should alert an error for a failed refill" time="0.001">
    </testcase>
    <testcase classname="alert reducer should alert a success for a successful refill" name="alert reducer should alert a success for a successful refill" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="search query reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:24" time="0.096" tests="8">
    <testcase classname="search query reducer should handle search started" name="search query reducer should handle search started" time="0.003">
    </testcase>
    <testcase classname="search query reducer should handle fetching list of facilities" name="search query reducer should handle fetching list of facilities" time="0.001">
    </testcase>
    <testcase classname="search query reducer should handle fetching single facility" name="search query reducer should handle fetching single facility" time="0">
    </testcase>
    <testcase classname="search query reducer should handle search failed" name="search query reducer should handle search failed" time="0.001">
    </testcase>
    <testcase classname="search query reducer should handle search query updated" name="search query reducer should handle search query updated" time="0">
    </testcase>
    <testcase classname="search query reducer should handle fetching services" name="search query reducer should handle fetching services" time="0">
    </testcase>
    <testcase classname="search query reducer should handle provider services fetched" name="search query reducer should handle provider services fetched" time="0.001">
    </testcase>
    <testcase classname="search query reducer should handle failed fetching provider services" name="search query reducer should handle failed fetching provider services" time="0">
    </testcase>
  </testsuite>
  <testsuite name="loadConnectedAccounts" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:24" time="0.131" tests="4">
    <testcase classname="loadConnectedAccounts should receive loaded and success actions" name="loadConnectedAccounts should receive loaded and success actions" time="0.018">
    </testcase>
    <testcase classname="loadConnectedAccounts should receive loaded and error actions" name="loadConnectedAccounts should receive loaded and error actions" time="0.003">
    </testcase>
    <testcase classname="deleteConnectedAccount should dispatch loading and success" name="deleteConnectedAccount should dispatch loading and success" time="0.003">
    </testcase>
    <testcase classname="deleteConnectedAccount should receive loaded and error actions" name="deleteConnectedAccount should receive loaded and error actions" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Validations unit tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:24" time="0.136" tests="38">
    <testcase classname="Validations unit tests isValidSSN accepts ssns of the right one including &quot;invalid&quot; test ones" name="Validations unit tests isValidSSN accepts ssns of the right one including &quot;invalid&quot; test ones" time="0.007">
    </testcase>
    <testcase classname="Validations unit tests isValidSSN rejects invalid ssn format" name="Validations unit tests isValidSSN rejects invalid ssn format" time="0.002">
    </testcase>
    <testcase classname="Validations unit tests isValidDate validate february separately cause its a special snowflake" name="Validations unit tests isValidDate validate february separately cause its a special snowflake" time="0.002">
    </testcase>
    <testcase classname="Validations unit tests isValidDate validate future dates" name="Validations unit tests isValidDate validate future dates" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidDateRange validates if to date is after from date" name="Validations unit tests isValidDateRange validates if to date is after from date" time="0.002">
    </testcase>
    <testcase classname="Validations unit tests isValidDateRange does not validate to date is before from date" name="Validations unit tests isValidDateRange does not validate to date is before from date" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidDateRange does validate with partial dates" name="Validations unit tests isValidDateRange does validate with partial dates" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYearRange should validate partial range" name="Validations unit tests isValidPartialMonthYearRange should validate partial range" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYearRange should not validate invalid range" name="Validations unit tests isValidPartialMonthYearRange should not validate invalid range" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYearRange should validate same date range" name="Validations unit tests isValidPartialMonthYearRange should validate same date range" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYearRange should validate year only range" name="Validations unit tests isValidPartialMonthYearRange should validate year only range" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidCurrentOrPastDate should validate past date" name="Validations unit tests isValidCurrentOrPastDate should validate past date" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidCurrentOrPastDate should validate current date" name="Validations unit tests isValidCurrentOrPastDate should validate current date" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidCurrentOrPastDate should not validate date in future" name="Validations unit tests isValidCurrentOrPastDate should not validate date in future" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidName correctly validates name" name="Validations unit tests isValidName correctly validates name" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isBlank correctly validates blank values" name="Validations unit tests isBlank correctly validates blank values" time="0">
    </testcase>
    <testcase classname="Validations unit tests isNotBlank correctly validates blank values" name="Validations unit tests isNotBlank correctly validates blank values" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidMonetaryValue validates monetary values" name="Validations unit tests isValidMonetaryValue validates monetary values" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidDateOver17 validates turning 17 today" name="Validations unit tests isValidDateOver17 validates turning 17 today" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidDateOver17 does not validate turning 17 tomorrow" name="Validations unit tests isValidDateOver17 does not validate turning 17 tomorrow" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should validate complete date" name="Validations unit tests isValidPartialDate should validate complete date" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should validate empty date" name="Validations unit tests isValidPartialDate should validate empty date" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should validate month year date" name="Validations unit tests isValidPartialDate should validate month year date" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should validate month day date" name="Validations unit tests isValidPartialDate should validate month day date" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should validate day year date" name="Validations unit tests isValidPartialDate should validate day year date" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should validate day date" name="Validations unit tests isValidPartialDate should validate day date" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should validate year date" name="Validations unit tests isValidPartialDate should validate year date" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should not validate year before 1900" name="Validations unit tests isValidPartialDate should not validate year before 1900" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialDate should not validate year more than 100 years in future" name="Validations unit tests isValidPartialDate should not validate year more than 100 years in future" time="0">
    </testcase>
    <testcase classname="Validations unit tests validateCustomFormComponent should return object validation results" name="Validations unit tests validateCustomFormComponent should return object validation results" time="0">
    </testcase>
    <testcase classname="Validations unit tests validateCustomFormComponent should return passing object validation results" name="Validations unit tests validateCustomFormComponent should return passing object validation results" time="0">
    </testcase>
    <testcase classname="Validations unit tests validateCustomFormComponent should return array validation results" name="Validations unit tests validateCustomFormComponent should return array validation results" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYear should validate month and year" name="Validations unit tests isValidPartialMonthYear should validate month and year" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYear should not validate bad year" name="Validations unit tests isValidPartialMonthYear should not validate bad year" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYear should not validate bad month" name="Validations unit tests isValidPartialMonthYear should not validate bad month" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYearInPast should validate month and year in past" name="Validations unit tests isValidPartialMonthYearInPast should validate month and year in past" time="0.001">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYearInPast should validate month and year that is current" name="Validations unit tests isValidPartialMonthYearInPast should validate month and year that is current" time="0">
    </testcase>
    <testcase classname="Validations unit tests isValidPartialMonthYearInPast should not validate month and year that is in the future" name="Validations unit tests isValidPartialMonthYearInPast should not validate month and year that is in the future" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Unittest sanity test" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.099" tests="1">
    <testcase classname="Unittest sanity test Trivial reflexive equality of true should pass." name="Unittest sanity test Trivial reflexive equality of true should pass." time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="metrics" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.172" tests="5">
    <testcase classname="metrics buildMetricsPayload should return a FormData object" name="metrics buildMetricsPayload should return a FormData object" time="0.012">
    </testcase>
    <testcase classname="metrics buildMetricsPayload should not include firstContentfulPaint if not present" name="metrics buildMetricsPayload should not include firstContentfulPaint if not present" time="0.003">
    </testcase>
    <testcase classname="metrics buildMetricsPayload should include firstContentfulPaint if present" name="metrics buildMetricsPayload should include firstContentfulPaint if present" time="0.002">
    </testcase>
    <testcase classname="metrics buildMetricsPayload sendMetricsToBackend should call sendBeacon once" name="metrics buildMetricsPayload sendMetricsToBackend should call sendBeacon once" time="0.002">
    </testcase>
    <testcase classname="metrics buildMetricsPayload captureMetrics should instantiate a new PerformanceObserver" name="metrics buildMetricsPayload captureMetrics should instantiate a new PerformanceObserver" time="0.048">
    </testcase>
  </testsuite>
  <testsuite name="Locator Helper Method Tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.117" tests="3">
    <testcase classname="Locator Helper Method Tests areBoundsEqual Tests Should handle valid input" name="Locator Helper Method Tests areBoundsEqual Tests Should handle valid input" time="0.004">
    </testcase>
    <testcase classname="Locator Helper Method Tests areBoundsEqual Tests Should handle unequal input" name="Locator Helper Method Tests areBoundsEqual Tests Should handle unequal input" time="0.001">
    </testcase>
    <testcase classname="Locator Helper Method Tests areBoundsEqual Tests Should handle null/missing input" name="Locator Helper Method Tests areBoundsEqual Tests Should handle null/missing input" time="0">
    </testcase>
  </testsuite>
  <testsuite name="constants reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.106" tests="3">
    <testcase classname="constants reducer should handle fetch starting" name="constants reducer should handle fetch starting" time="0.003">
    </testcase>
    <testcase classname="constants reducer should handle fetch failed" name="constants reducer should handle fetch failed" time="0.001">
    </testcase>
    <testcase classname="constants reducer should handle fetch succeeded" name="constants reducer should handle fetch succeeded" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="Profile reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.12" tests="12">
    <testcase classname="Profile reducer should set loading to false when profile is done loading" name="Profile reducer should set loading to false when profile is done loading" time="0.005">
    </testcase>
    <testcase classname="Profile reducer should set loading to false when logged in status changes" name="Profile reducer should set loading to false when logged in status changes" time="0">
    </testcase>
    <testcase classname="Profile reducer should be loading when creating MHV account" name="Profile reducer should be loading when creating MHV account" time="0.001">
    </testcase>
    <testcase classname="Profile reducer should be loading when upgrading MHV account" name="Profile reducer should be loading when upgrading MHV account" time="0">
    </testcase>
    <testcase classname="Profile reducer should be loading when fetching MHV account" name="Profile reducer should be loading when fetching MHV account" time="0">
    </testcase>
    <testcase classname="Profile reducer should handle failed MHV account creation" name="Profile reducer should handle failed MHV account creation" time="0">
    </testcase>
    <testcase classname="Profile reducer should handle successful MHV account creation" name="Profile reducer should handle successful MHV account creation" time="0">
    </testcase>
    <testcase classname="Profile reducer should handle failed MHV account upgrade" name="Profile reducer should handle failed MHV account upgrade" time="0">
    </testcase>
    <testcase classname="Profile reducer should handle successful MHV account upgrade" name="Profile reducer should handle successful MHV account upgrade" time="0.008">
    </testcase>
    <testcase classname="Profile reducer should handle failure to fetch MHV account" name="Profile reducer should handle failure to fetch MHV account" time="0">
    </testcase>
    <testcase classname="Profile reducer should set MHV account level and state after it is fetched" name="Profile reducer should set MHV account level and state after it is fetched" time="0">
    </testcase>
    <testcase classname="Profile reducer should remove the right form when deleting a form" name="Profile reducer should remove the right form when deleting a form" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="mega-menu" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.156" tests="3">
    <testcase classname="mega-menu Main.jsx flagCurrentPageIntopLevelLinks should return object with currentPage: true when path name matches href" name="mega-menu Main.jsx flagCurrentPageIntopLevelLinks should return object with currentPage: true when path name matches href" time="0.028">
    </testcase>
    <testcase classname="mega-menu Main.jsx maybeMergeAuthorizedLinkData should merge Authorized links when loggedIn is true" name="mega-menu Main.jsx maybeMergeAuthorizedLinkData should merge Authorized links when loggedIn is true" time="0.015">
    </testcase>
    <testcase classname="mega-menu Main.jsx maybeMergeAuthorizedLinkData should not merge Authorized links when loggedIn is false" name="mega-menu Main.jsx maybeMergeAuthorizedLinkData should not merge Authorized links when loggedIn is false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="profile reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.108" tests="3">
    <testcase classname="profile reducer should handle profile fetch started" name="profile reducer should handle profile fetch started" time="0.004">
    </testcase>
    <testcase classname="profile reducer should handle profile fetch failure" name="profile reducer should handle profile fetch failure" time="0">
    </testcase>
    <testcase classname="profile reducer should handle profile fetch success" name="profile reducer should handle profile fetch success" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Staging va.gov domain replacement" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.115" tests="4">
    <testcase classname="Staging va.gov domain replacement replaceDomainsInData should replace links in an array" name="Staging va.gov domain replacement replaceDomainsInData should replace links in an array" time="0.014">
    </testcase>
    <testcase classname="Staging va.gov domain replacement replaceDomainsInData should replace links in a nested array" name="Staging va.gov domain replacement replaceDomainsInData should replace links in a nested array" time="0">
    </testcase>
    <testcase classname="Staging va.gov domain replacement replaceDomainsInData should replace links in an object" name="Staging va.gov domain replacement replaceDomainsInData should replace links in an object" time="0">
    </testcase>
    <testcase classname="Staging va.gov domain replacement replaceDomainsInData should replaces links in a nested object" name="Staging va.gov domain replacement replaceDomainsInData should replaces links in a nested object" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="sendFeedback" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:25" time="0.13" tests="4">
    <testcase classname="sendFeedback dispatches SEND_FEEDBACK and FEEDBACK_RECEIVED when there is a successful request" name="sendFeedback dispatches SEND_FEEDBACK and FEEDBACK_RECEIVED when there is a successful request" time="0.013">
    </testcase>
    <testcase classname="sendFeedback does not include the email address field if the user does not indicate that they want a response" name="sendFeedback does not include the email address field if the user does not indicate that they want a response" time="0.001">
    </testcase>
    <testcase classname="sendFeedback dispatches FEEDBACK_ERROR when response.ok is false" name="sendFeedback dispatches FEEDBACK_ERROR when response.ok is false" time="0">
    </testcase>
    <testcase classname="clearError returns type CLEAR_FEEDBACK_ERROR" name="clearError returns type CLEAR_FEEDBACK_ERROR" time="0">
    </testcase>
  </testsuite>
  <testsuite name="initDismissedAnnouncements" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:26" time="0.104" tests="2">
    <testcase classname="initDismissedAnnouncements returns an empty array from localStorage" name="initDismissedAnnouncements returns an empty array from localStorage" time="0.004">
    </testcase>
    <testcase classname="initDismissedAnnouncements returns previously-dismissed announcements during startup" name="initDismissedAnnouncements returns previously-dismissed announcements during startup" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="1990 helpers" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:26" time="0.14" tests="4">
    <testcase classname="1990 helpers prefillTransformer should do nothing if no contact info is updated" name="1990 helpers prefillTransformer should do nothing if no contact info is updated" time="0.03">
    </testcase>
    <testcase classname="1990 helpers prefillTransformer should set the email" name="1990 helpers prefillTransformer should set the email" time="0">
    </testcase>
    <testcase classname="1990 helpers prefillTransformer should set the homePhone" name="1990 helpers prefillTransformer should set the homePhone" time="0">
    </testcase>
    <testcase classname="1990 helpers prefillTransformer should set the mobilePhone" name="1990 helpers prefillTransformer should set the mobilePhone" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ITF actions" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:26" time="0.139" tests="4">
    <testcase classname="ITF actions fetchITF should dispatch a fetch succeeded action with data" name="ITF actions fetchITF should dispatch a fetch succeeded action with data" time="0.019">
    </testcase>
    <testcase classname="ITF actions fetchITF should dispatch a fetch failed action" name="ITF actions fetchITF should dispatch a fetch failed action" time="0.005">
    </testcase>
    <testcase classname="ITF actions createITF should dispatch a fetch succeeded action with data" name="ITF actions createITF should dispatch a fetch succeeded action with data" time="0.002">
    </testcase>
    <testcase classname="ITF actions createITF should dispatch a fetch failed action" name="ITF actions createITF should dispatch a fetch failed action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="getStatusForTimeframe" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:26" time="0.115" tests="4">
    <testcase classname="getStatusForTimeframe assigns a status according to timeframe" name="getStatusForTimeframe assigns a status according to timeframe" time="0.011">
    </testcase>
    <testcase classname="createServiceMap creates a map using the attributes.externalService property as keys" name="createServiceMap creates a map using the attributes.externalService property as keys" time="0.002">
    </testcase>
    <testcase classname="getMostUrgentDowntime returns null when all services are ok" name="getMostUrgentDowntime returns null when all services are ok" time="0">
    </testcase>
    <testcase classname="getMostUrgentDowntime returns the status with the soonest startTime and endTime that is not in the past" name="getMostUrgentDowntime returns the status with the soonest startTime and endTime that is not in the past" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="vet360 reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:26" time="0.137" tests="12">
    <testcase classname="vet360 reducer should return array of transaction data" name="vet360 reducer should return array of transaction data" time="0.015">
    </testcase>
    <testcase classname="vet360 reducer should set pending transaction" name="vet360 reducer should set pending transaction" time="0">
    </testcase>
    <testcase classname="vet360 reducer should set pending transaction failure" name="vet360 reducer should set pending transaction failure" time="0.001">
    </testcase>
    <testcase classname="vet360 reducer should set pending transaction success" name="vet360 reducer should set pending transaction success" time="0">
    </testcase>
    <testcase classname="vet360 reducer should set transaction update request" name="vet360 reducer should set transaction update request" time="0.001">
    </testcase>
    <testcase classname="vet360 reducer should set updated transaction request success" name="vet360 reducer should set updated transaction request success" time="0.01">
    </testcase>
    <testcase classname="vet360 reducer should set updated transaction request failure" name="vet360 reducer should set updated transaction request failure" time="0">
    </testcase>
    <testcase classname="vet360 reducer should set transaction update failed" name="vet360 reducer should set transaction update failed" time="0.001">
    </testcase>
    <testcase classname="vet360 reducer should set transaction cleared" name="vet360 reducer should set transaction cleared" time="0">
    </testcase>
    <testcase classname="vet360 reducer should set transaction request cleared" name="vet360 reducer should set transaction request cleared" time="0">
    </testcase>
    <testcase classname="vet360 reducer should update profile form fields" name="vet360 reducer should update profile form fields" time="0.001">
    </testcase>
    <testcase classname="vet360 reducer should open modal" name="vet360 reducer should open modal" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ITF actions" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:26" time="0.126" tests="4">
    <testcase classname="ITF actions fetchITF should dispatch a fetch succeeded action with data" name="ITF actions fetchITF should dispatch a fetch succeeded action with data" time="0.018">
    </testcase>
    <testcase classname="ITF actions fetchITF should dispatch a fetch failed action" name="ITF actions fetchITF should dispatch a fetch failed action" time="0.005">
    </testcase>
    <testcase classname="ITF actions createITF should dispatch a fetch succeeded action with data" name="ITF actions createITF should dispatch a fetch succeeded action with data" time="0.001">
    </testcase>
    <testcase classname="ITF actions createITF should dispatch a fetch failed action" name="ITF actions createITF should dispatch a fetch failed action" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Forms address validations:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.119" tests="4">
    <testcase classname="Forms address validations: isValidCentralMailPostalCode should return valid on non-USA addresses" name="Forms address validations: isValidCentralMailPostalCode should return valid on non-USA addresses" time="0.001">
    </testcase>
    <testcase classname="Forms address validations: isValidCentralMailPostalCode should return valid on five digit USA zips" name="Forms address validations: isValidCentralMailPostalCode should return valid on five digit USA zips" time="0.001">
    </testcase>
    <testcase classname="Forms address validations: isValidCentralMailPostalCode should return valid on nine digit USA zips" name="Forms address validations: isValidCentralMailPostalCode should return valid on nine digit USA zips" time="0">
    </testcase>
    <testcase classname="Forms address validations: isValidCentralMailPostalCode should return invalid on unformatted nine digit USA zips" name="Forms address validations: isValidCentralMailPostalCode should return invalid on unformatted nine digit USA zips" time="0">
    </testcase>
  </testsuite>
  <testsuite name="selectAnnouncement" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.12" tests="4">
    <testcase classname="selectAnnouncement returns undefined when there is no announcement" name="selectAnnouncement returns undefined when there is no announcement" time="0.008">
    </testcase>
    <testcase classname="selectAnnouncement selects an announcement based on path and configuration" name="selectAnnouncement selects an announcement based on path and configuration" time="0">
    </testcase>
    <testcase classname="selectAnnouncement returns null when a matched annoucement has been dismissed" name="selectAnnouncement returns null when a matched annoucement has been dismissed" time="0.001">
    </testcase>
    <testcase classname="selectAnnouncement bypasses disabled announcements and looks instead for the next match" name="selectAnnouncement bypasses disabled announcements and looks instead for the next match" time="0">
    </testcase>
  </testsuite>
  <testsuite name="preferencesducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:26" time="0.117" tests="8">
    <testcase classname="preferencesducer should update when fetching preferences" name="preferencesducer should update when fetching preferences" time="0.005">
    </testcase>
    <testcase classname="preferencesducer should update when saving preferences" name="preferencesducer should update when saving preferences" time="0.001">
    </testcase>
    <testcase classname="preferencesducer should handle failure to load preferences" name="preferencesducer should handle failure to load preferences" time="0">
    </testcase>
    <testcase classname="preferencesducer should handle successfully loading preferences" name="preferencesducer should handle successfully loading preferences" time="0">
    </testcase>
    <testcase classname="preferencesducer should handle failure to save preferences" name="preferencesducer should handle failure to save preferences" time="0">
    </testcase>
    <testcase classname="preferencesducer should handle successfully saving preferences" name="preferencesducer should handle successfully saving preferences" time="0">
    </testcase>
    <testcase classname="preferencesducer should set notification email" name="preferencesducer should set notification email" time="0.001">
    </testcase>
    <testcase classname="preferencesducer should set notification flag" name="preferencesducer should set notification flag" time="0">
    </testcase>
  </testsuite>
  <testsuite name="getScheduledDowntime" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.117" tests="1">
    <testcase classname="getScheduledDowntime dispatches the correct actions and maps the data correctly" name="getScheduledDowntime dispatches the correct actions and maps the data correctly" time="0.011">
    </testcase>
  </testsuite>
  <testsuite name="Terms and conditions reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.102" tests="9">
    <testcase classname="Terms and conditions reducer should be loading when accepting terms" name="Terms and conditions reducer should be loading when accepting terms" time="0.006">
    </testcase>
    <testcase classname="Terms and conditions reducer should be loading when fetching terms" name="Terms and conditions reducer should be loading when fetching terms" time="0.001">
    </testcase>
    <testcase classname="Terms and conditions reducer should be loading when fetching terms acceptance" name="Terms and conditions reducer should be loading when fetching terms acceptance" time="0">
    </testcase>
    <testcase classname="Terms and conditions reducer should handle failed acceptance of terms" name="Terms and conditions reducer should handle failed acceptance of terms" time="0">
    </testcase>
    <testcase classname="Terms and conditions reducer should handle failed fetch of terms" name="Terms and conditions reducer should handle failed fetch of terms" time="0.001">
    </testcase>
    <testcase classname="Terms and conditions reducer should handle failed fetch of terms acceptance" name="Terms and conditions reducer should handle failed fetch of terms acceptance" time="0">
    </testcase>
    <testcase classname="Terms and conditions reducer should handle successful acceptance of terms" name="Terms and conditions reducer should handle successful acceptance of terms" time="0">
    </testcase>
    <testcase classname="Terms and conditions reducer should handle successful fetch of terms" name="Terms and conditions reducer should handle successful fetch of terms" time="0.001">
    </testcase>
    <testcase classname="Terms and conditions reducer should handle successful fetch of terms acceptance" name="Terms and conditions reducer should handle successful fetch of terms acceptance" time="0">
    </testcase>
  </testsuite>
  <testsuite name="autocomplete reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.112" tests="5">
    <testcase classname="autocomplete reducer should change autocomplete term" name="autocomplete reducer should change autocomplete term" time="0.005">
    </testcase>
    <testcase classname="autocomplete reducer should start autocomplete correctly" name="autocomplete reducer should start autocomplete correctly" time="0.001">
    </testcase>
    <testcase classname="autocomplete reducer should handle autocomplete failure" name="autocomplete reducer should handle autocomplete failure" time="0.001">
    </testcase>
    <testcase classname="autocomplete reducer should handle autocomplete success" name="autocomplete reducer should handle autocomplete success" time="0.001">
    </testcase>
    <testcase classname="autocomplete reducer should handle search starting" name="autocomplete reducer should handle search starting" time="0">
    </testcase>
  </testsuite>
  <testsuite name="recipients reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.104" tests="2">
    <testcase classname="recipients reducer should have no data when it fails to load recipients" name="recipients reducer should have no data when it fails to load recipients" time="0.001">
    </testcase>
    <testcase classname="recipients reducer should populate the list of possible recipients on success" name="recipients reducer should populate the list of possible recipients on success" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="formatAddress" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.127" tests="12">
    <testcase classname="formatAddress formats domestic addresses with three street lines" name="formatAddress formats domestic addresses with three street lines" time="0.012">
    </testcase>
    <testcase classname="formatAddress formats domestic addresses with two street lines" name="formatAddress formats domestic addresses with two street lines" time="0.001">
    </testcase>
    <testcase classname="formatAddress formats domestic addresses with one street line" name="formatAddress formats domestic addresses with one street line" time="0">
    </testcase>
    <testcase classname="formatAddress formats military addresses" name="formatAddress formats military addresses" time="0">
    </testcase>
    <testcase classname="formatAddress formats international addresses" name="formatAddress formats international addresses" time="0.001">
    </testcase>
    <testcase classname="getStateName gets the full name of a state from its abbreviation" name="getStateName gets the full name of a state from its abbreviation" time="0.001">
    </testcase>
    <testcase classname="isEmptyAddress detects an empty address" name="isEmptyAddress detects an empty address" time="0">
    </testcase>
    <testcase classname="isEmptyAddress detects a non-empty address" name="isEmptyAddress detects a non-empty address" time="0">
    </testcase>
    <testcase classname="consolidateAddress converts a military address into a standard address format by adding the countryName set to USA, militaryPostOfficeTypeCode converted to city, and militaryStateCode converted to stateCode." name="consolidateAddress converts a military address into a standard address format by adding the countryName set to USA, militaryPostOfficeTypeCode converted to city, and militaryStateCode converted to stateCode." time="0.001">
    </testcase>
    <testcase classname="consolidateAddress does not affect non-military addresses" name="consolidateAddress does not affect non-military addresses" time="0.001">
    </testcase>
    <testcase classname="expandAddress converts a previously-consolidated address into the proper model by inferring the address type. If it is inferred as military, the inverse conversion of consolidateAddress is performed." name="expandAddress converts a previously-consolidated address into the proper model by inferring the address type. If it is inferred as military, the inverse conversion of consolidateAddress is performed." time="0.001">
    </testcase>
    <testcase classname="expandAddress does not affect non-military addresses" name="expandAddress does not affect non-military addresses" time="0">
    </testcase>
  </testsuite>
  <testsuite name="edu helpers:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:27" time="0.123" tests="10">
    <testcase classname="edu helpers: formatPartialDate should format a full date" name="edu helpers: formatPartialDate should format a full date" time="0.004">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should format a full date with 2 digit month and day" name="edu helpers: formatPartialDate should format a full date with 2 digit month and day" time="0">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should format a date with missing month" name="edu helpers: formatPartialDate should format a date with missing month" time="0.001">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should format a date with missing day" name="edu helpers: formatPartialDate should format a date with missing day" time="0">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should format a date with missing year" name="edu helpers: formatPartialDate should format a date with missing year" time="0">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should format a date with space in year" name="edu helpers: formatPartialDate should format a date with space in year" time="0.001">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should format a date with non digit characters in year" name="edu helpers: formatPartialDate should format a date with non digit characters in year" time="0">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should return undefined for blank date" name="edu helpers: formatPartialDate should return undefined for blank date" time="0">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should return undefined for undefined date" name="edu helpers: formatPartialDate should return undefined for undefined date" time="0">
    </testcase>
    <testcase classname="edu helpers: formatPartialDate should format a partial year" name="edu helpers: formatPartialDate should format a partial year" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Burials validation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:28" time="0.1" tests="5">
    <testcase classname="Burials validation validateBurialAndDeathDates should allow burial date after death date" name="Burials validation validateBurialAndDeathDates should allow burial date after death date" time="0.003">
    </testcase>
    <testcase classname="Burials validation validateBurialAndDeathDates should allow burial date on death date" name="Burials validation validateBurialAndDeathDates should allow burial date on death date" time="0.001">
    </testcase>
    <testcase classname="Burials validation validateBurialAndDeathDates should not allow burial date before death date" name="Burials validation validateBurialAndDeathDates should not allow burial date before death date" time="0">
    </testcase>
    <testcase classname="Burials validation validateBurialAndDeathDates should allow birth date before death date" name="Burials validation validateBurialAndDeathDates should allow birth date before death date" time="0.001">
    </testcase>
    <testcase classname="Burials validation validateBurialAndDeathDates should not allow birth date after death date" name="Burials validation validateBurialAndDeathDates should not allow birth date after death date" time="0">
    </testcase>
  </testsuite>
  <testsuite name="filter reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:28" time="0.107" tests="1">
    <testcase classname="filter reducer should change filter successfully" name="filter reducer should change filter successfully" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Helpers unit tests" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:28" time="0.145" tests="12">
    <testcase classname="Helpers unit tests dateToMoment should convert date to moment" name="Helpers unit tests dateToMoment should convert date to moment" time="0.004">
    </testcase>
    <testcase classname="Helpers unit tests dateToMoment should convert partial date to moment" name="Helpers unit tests dateToMoment should convert partial date to moment" time="0.001">
    </testcase>
    <testcase classname="Helpers unit tests timeFromNow should display time in days" name="Helpers unit tests timeFromNow should display time in days" time="0.001">
    </testcase>
    <testcase classname="Helpers unit tests timeFromNow should display time in hours" name="Helpers unit tests timeFromNow should display time in hours" time="0">
    </testcase>
    <testcase classname="Helpers unit tests timeFromNow should display time in minutes" name="Helpers unit tests timeFromNow should display time in minutes" time="0.001">
    </testcase>
    <testcase classname="Helpers unit tests timeFromNow should display time in seconds" name="Helpers unit tests timeFromNow should display time in seconds" time="0">
    </testcase>
    <testcase classname="Helpers unit tests formatDateShort should display the date in the short format" name="Helpers unit tests formatDateShort should display the date in the short format" time="0.002">
    </testcase>
    <testcase classname="Helpers unit tests formatDateParsedZoneShort should display the date in the short format" name="Helpers unit tests formatDateParsedZoneShort should display the date in the short format" time="0">
    </testcase>
    <testcase classname="Helpers unit tests formatDateParsedZoneShort should display the date string without regard to the timezone or offset" name="Helpers unit tests formatDateParsedZoneShort should display the date string without regard to the timezone or offset" time="0.003">
    </testcase>
    <testcase classname="Helpers unit tests formatDateLong should display the date in the short format" name="Helpers unit tests formatDateLong should display the date in the short format" time="0">
    </testcase>
    <testcase classname="Helpers unit tests formatDateParsedZoneLong should display the date in the short format" name="Helpers unit tests formatDateParsedZoneLong should display the date in the short format" time="0.001">
    </testcase>
    <testcase classname="Helpers unit tests formatDateParsedZoneLong should display the date string without regard to the timezone or offset" name="Helpers unit tests formatDateParsedZoneLong should display the date string without regard to the timezone or offset" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="title reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:28" time="0.091" tests="1">
    <testcase classname="title reducer should set the page title" name="title reducer should set the page title" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="preview reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:28" time="0.118" tests="3">
    <testcase classname="preview reducer should enter preview mode" name="preview reducer should enter preview mode" time="0.009">
    </testcase>
    <testcase classname="preview reducer should exit preview mode" name="preview reducer should exit preview mode" time="0">
    </testcase>
    <testcase classname="preview reducer should set version correctly" name="preview reducer should set version correctly" time="0">
    </testcase>
  </testsuite>
  <testsuite name="connectedAccounts" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:28" time="0.111" tests="6">
    <testcase classname="connectedAccounts receives a loading accounts type" name="connectedAccounts receives a loading accounts type" time="0.01">
    </testcase>
    <testcase classname="connectedAccounts receives a finished accounts state" name="connectedAccounts receives a finished accounts state" time="0.001">
    </testcase>
    <testcase classname="connectedAccounts receives a errors accounts state" name="connectedAccounts receives a errors accounts state" time="0">
    </testcase>
    <testcase classname="connectedAccounts receives a deleting account state" name="connectedAccounts receives a deleting account state" time="0.001">
    </testcase>
    <testcase classname="connectedAccounts receives a finished deleting account state" name="connectedAccounts receives a finished deleting account state" time="0">
    </testcase>
    <testcase classname="connectedAccounts receives an error deleting account state" name="connectedAccounts receives an error deleting account state" time="0">
    </testcase>
  </testsuite>
  <testsuite name="modal reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:28" time="0.138" tests="2">
    <testcase classname="modal reducer should close modal" name="modal reducer should close modal" time="0.003">
    </testcase>
    <testcase classname="modal reducer should open modal" name="modal reducer should open modal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="index reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:29" time="0.12" tests="2">
    <testcase classname="index reducer should fetch hero info" name="index reducer should fetch hero info" time="0.005">
    </testcase>
    <testcase classname="index reducer should fetch personalInformation" name="index reducer should fetch personalInformation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Pre-need validation" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:29" time="0.125" tests="6">
    <testcase classname="Pre-need validation validateSponsorDeathDate should return error if death is before birth" name="Pre-need validation validateSponsorDeathDate should return error if death is before birth" time="0.005">
    </testcase>
    <testcase classname="Pre-need validation validateSponsorDeathDate should return error if death is same as birth" name="Pre-need validation validateSponsorDeathDate should return error if death is same as birth" time="0.001">
    </testcase>
    <testcase classname="Pre-need validation validateSponsorDeathDate should not add error if death is after birth" name="Pre-need validation validateSponsorDeathDate should not add error if death is after birth" time="0">
    </testcase>
    <testcase classname="Pre-need validation validateSponsorDeathDate should not add error if not deceased" name="Pre-need validation validateSponsorDeathDate should not add error if not deceased" time="0.001">
    </testcase>
    <testcase classname="Pre-need validation validateSponsorDeathDate should not add error if no death date" name="Pre-need validation validateSponsorDeathDate should not add error if no death date" time="0">
    </testcase>
    <testcase classname="Pre-need validation validateSponsorDeathDate should not add error if no dates" name="Pre-need validation validateSponsorDeathDate should not add error if no dates" time="0">
    </testcase>
  </testsuite>
  <testsuite name="announcementsReducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:29" time="0.119" tests="3">
    <testcase classname="announcementsReducer defaults isInitialized to false" name="announcementsReducer defaults isInitialized to false" time="0.002">
    </testcase>
    <testcase classname="announcementsReducer flips isInitialized to true when the init action is dispatched" name="announcementsReducer flips isInitialized to true when the init action is dispatched" time="0.001">
    </testcase>
    <testcase classname="announcementsReducer adds dismissed announcements into state" name="announcementsReducer adds dismissed announcements into state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="search reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:29" time="0.1" tests="4">
    <testcase classname="search reducer should toggle filters" name="search reducer should toggle filters" time="0.002">
    </testcase>
    <testcase classname="search reducer should set search inProgress" name="search reducer should set search inProgress" time="0">
    </testcase>
    <testcase classname="search reducer should set correct state on failure" name="search reducer should set correct state on failure" time="0">
    </testcase>
    <testcase classname="search reducer should set correct state on success" name="search reducer should set correct state on success" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="526 Increase validations" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:29" time="0.122" tests="3">
    <testcase classname="526 Increase validations isInPast should not add error when no date present" name="526 Increase validations isInPast should not add error when no date present" time="0.002">
    </testcase>
    <testcase classname="526 Increase validations isInPast should not add error when end date is in past" name="526 Increase validations isInPast should not add error when end date is in past" time="0.001">
    </testcase>
    <testcase classname="526 Increase validations isInPast should add error when end date is in past" name="526 Increase validations isInPast should add error when end date is in past" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Claims status validation:" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:29" time="0.122" tests="8">
    <testcase classname="Claims status validation: isValidFileSize should validate size is less than max" name="Claims status validation: isValidFileSize should validate size is less than max" time="0.003">
    </testcase>
    <testcase classname="Claims status validation: isValidFileType should check that file has a valid type" name="Claims status validation: isValidFileType should check that file has a valid type" time="0.001">
    </testcase>
    <testcase classname="Claims status validation: isValidFileType should check that file has an invalid type" name="Claims status validation: isValidFileType should check that file has an invalid type" time="0">
    </testcase>
    <testcase classname="Claims status validation: isValidFileType should check that file has a valid type regardless of case" name="Claims status validation: isValidFileType should check that file has a valid type regardless of case" time="0">
    </testcase>
    <testcase classname="Claims status validation: isValidFile should validate file for size and type" name="Claims status validation: isValidFile should validate file for size and type" time="0.001">
    </testcase>
    <testcase classname="Claims status validation: isValidFile should not validate empty file" name="Claims status validation: isValidFile should not validate empty file" time="0">
    </testcase>
    <testcase classname="Claims status validation: isValidDocument should validate that docType is not blank" name="Claims status validation: isValidDocument should validate that docType is not blank" time="0">
    </testcase>
    <testcase classname="Claims status validation: isValidDocument should validate that docType and file are valid" name="Claims status validation: isValidDocument should validate that docType and file are valid" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="preferencesducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:29" time="0.119" tests="4">
    <testcase classname="preferencesducer should handle successfully loading preferences" name="preferencesducer should handle successfully loading preferences" time="0.006">
    </testcase>
    <testcase classname="preferencesducer should handle successfully saving preferences" name="preferencesducer should handle successfully saving preferences" time="0">
    </testcase>
    <testcase classname="preferencesducer should set notification email" name="preferencesducer should set notification email" time="0.001">
    </testcase>
    <testcase classname="preferencesducer should set notification frequency" name="preferencesducer should set notification frequency" time="0">
    </testcase>
  </testsuite>
  <testsuite name="authorization actions" errors="0" failures="0" skipped="3" timestamp="2018-12-06T00:51:30" time="0.103" tests="3">
    <testcase classname="authorization actions verifyDisablityRating should not dispatch LOAD_30_PERCENT_DISABILITY_RATING_STARTED and LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED actions if user is not verified" name="authorization actions verifyDisablityRating should not dispatch LOAD_30_PERCENT_DISABILITY_RATING_STARTED and LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED actions if user is not verified" time="0.001">
      <skipped/>
    </testcase>
    <testcase classname="authorization actions verifyDisablityRating should dispatch LOAD_30_PERCENT_DISABILITY_RATING_STARTED and LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED actions" name="authorization actions verifyDisablityRating should dispatch LOAD_30_PERCENT_DISABILITY_RATING_STARTED and LOAD_30_PERCENT_DISABILITY_RATING_SUCCEEDED actions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="authorization actions verifyDisablityRating should dispatch LOAD_30_PERCENT_DISABILITY_RATING_STARTED and LOAD_30_PERCENT_DISABILITY_RATING_FAILED actions" name="authorization actions verifyDisablityRating should dispatch LOAD_30_PERCENT_DISABILITY_RATING_STARTED and LOAD_30_PERCENT_DISABILITY_RATING_FAILED actions" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Burials migrations" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:30" time="0.101" tests="2">
    <testcase classname="Burials migrations should set url to address page if zip is bad" name="Burials migrations should set url to address page if zip is bad" time="0.001">
    </testcase>
    <testcase classname="Burials migrations should set url to veteran info page if file number is bad" name="Burials migrations should set url to veteran info page if file number is bad" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="526EZ veteran information" errors="0" failures="0" skipped="1" timestamp="2018-12-06T00:51:30" time="0.296" tests="1">
    <testcase classname="526EZ veteran information should submit without validation errors" name="526EZ veteran information should submit without validation errors" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="modals reducer" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:30" time="0.107" tests="2">
    <testcase classname="modals reducer should display modal correctly" name="modals reducer should display modal correctly" time="0.004">
    </testcase>
    <testcase classname="modals reducer should close modals when route is updated" name="modals reducer should close modals when route is updated" time="0">
    </testcase>
  </testsuite>
  <testsuite name="526 All Claims validations" errors="0" failures="0" skipped="0" timestamp="2018-12-06T00:51:30" time="0.08" tests="6">
    <testcase classname="526 All Claims validations isValidYear should add an error if the year is not a number" name="526 All Claims validations isValidYear should add an error if the year is not a number" time="0.002">
    </testcase>
    <testcase classname="526 All Claims validations isValidYear should add an error if the year contains more than just four digits" name="526 All Claims validations isValidYear should add an error if the year contains more than just four digits" time="0">
    </testcase>
    <testcase classname="526 All Claims validations isValidYear should add an error if the year is less than 1900" name="526 All Claims validations isValidYear should add an error if the year is less than 1900" time="0">
    </testcase>
    <testcase classname="526 All Claims validations isValidYear should add an error if the year is more than 3000" name="526 All Claims validations isValidYear should add an error if the year is more than 3000" time="0">
    </testcase>
    <testcase classname="526 All Claims validations isValidYear should not add an error if the year is between 1900 and 3000" name="526 All Claims validations isValidYear should not add an error if the year is between 1900 and 3000" time="0.001">
    </testcase>
    <testcase classname="526 All Claims validations isValidYear should add an error if the year is in the future" name="526 All Claims validations isValidYear should add an error if the year is in the future" time="0">
    </testcase>
  </testsuite>
</testsuites>